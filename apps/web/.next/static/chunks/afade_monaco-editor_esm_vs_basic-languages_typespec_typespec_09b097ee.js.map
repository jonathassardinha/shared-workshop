{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///Users/jloka/Documents/repos/personal/shared-workshop/node_modules/.pnpm/monaco-editor%400.52.2/node_modules/monaco-editor/esm/vs/basic-languages/typespec/typespec.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.2(404545bded1df6ffa41ea0af4e8ddb219018c6c1)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n\n// src/basic-languages/typespec/typespec.ts\nvar bounded = (text) => `\\\\b${text}\\\\b`;\nvar notBefore = (regex) => `(?!${regex})`;\nvar identifierStart = \"[_a-zA-Z]\";\nvar identifierContinue = \"[_a-zA-Z0-9]\";\nvar identifier = bounded(`${identifierStart}${identifierContinue}*`);\nvar directive = bounded(`[_a-zA-Z-0-9]+`);\nvar keywords = [\n  \"import\",\n  \"model\",\n  \"scalar\",\n  \"namespace\",\n  \"op\",\n  \"interface\",\n  \"union\",\n  \"using\",\n  \"is\",\n  \"extends\",\n  \"enum\",\n  \"alias\",\n  \"return\",\n  \"void\",\n  \"if\",\n  \"else\",\n  \"projection\",\n  \"dec\",\n  \"extern\",\n  \"fn\"\n];\nvar namedLiterals = [\"true\", \"false\", \"null\", \"unknown\", \"never\"];\nvar nonCommentWs = `[ \\\\t\\\\r\\\\n]`;\nvar numericLiteral = `[0-9]+`;\nvar conf = {\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"/**\", close: \" */\", notIn: [\"string\"] }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' }\n  ],\n  indentationRules: {\n    decreaseIndentPattern: new RegExp(\"^((?!.*?/\\\\*).*\\\\*/)?\\\\s*[\\\\}\\\\]].*$\"),\n    increaseIndentPattern: new RegExp(\n      \"^((?!//).)*(\\\\{([^}\\\"'`/]*|(\\\\t|[ ])*//.*)|\\\\([^)\\\"'`/]*|\\\\[[^\\\\]\\\"'`/]*)$\"\n    ),\n    // e.g.  * ...| or */| or *-----*/|\n    unIndentedLinePattern: new RegExp(\n      \"^(\\\\t|[ ])*[ ]\\\\*[^/]*\\\\*/\\\\s*$|^(\\\\t|[ ])*[ ]\\\\*/\\\\s*$|^(\\\\t|[ ])*[ ]\\\\*([ ]([^\\\\*]|\\\\*(?!/))*)?$\"\n    )\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".tsp\",\n  brackets: [\n    { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\n    { open: \"[\", close: \"]\", token: \"delimiter.square\" },\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" }\n  ],\n  symbols: /[=:;<>]+/,\n  keywords,\n  namedLiterals,\n  escapes: `\\\\\\\\(u{[0-9A-Fa-f]+}|n|r|t|\\\\\\\\|\"|\\\\\\${)`,\n  tokenizer: {\n    root: [{ include: \"@expression\" }, { include: \"@whitespace\" }],\n    stringVerbatim: [\n      { regex: `(|\"|\"\")[^\"]`, action: { token: \"string\" } },\n      { regex: `\"\"\"${notBefore(`\"`)}`, action: { token: \"string\", next: \"@pop\" } }\n    ],\n    stringLiteral: [\n      { regex: `\\\\\\${`, action: { token: \"delimiter.bracket\", next: \"@bracketCounting\" } },\n      { regex: `[^\\\\\\\\\"$]+`, action: { token: \"string\" } },\n      { regex: \"@escapes\", action: { token: \"string.escape\" } },\n      { regex: `\\\\\\\\.`, action: { token: \"string.escape.invalid\" } },\n      { regex: `\"`, action: { token: \"string\", next: \"@pop\" } }\n    ],\n    bracketCounting: [\n      { regex: `{`, action: { token: \"delimiter.bracket\", next: \"@bracketCounting\" } },\n      { regex: `}`, action: { token: \"delimiter.bracket\", next: \"@pop\" } },\n      { include: \"@expression\" }\n    ],\n    comment: [\n      { regex: `[^\\\\*]+`, action: { token: \"comment\" } },\n      { regex: `\\\\*\\\\/`, action: { token: \"comment\", next: \"@pop\" } },\n      { regex: `[\\\\/*]`, action: { token: \"comment\" } }\n    ],\n    whitespace: [\n      { regex: nonCommentWs },\n      { regex: `\\\\/\\\\*`, action: { token: \"comment\", next: \"@comment\" } },\n      { regex: `\\\\/\\\\/.*$`, action: { token: \"comment\" } }\n    ],\n    expression: [\n      { regex: `\"\"\"`, action: { token: \"string\", next: \"@stringVerbatim\" } },\n      { regex: `\"${notBefore(`\"\"`)}`, action: { token: \"string\", next: \"@stringLiteral\" } },\n      { regex: numericLiteral, action: { token: \"number\" } },\n      {\n        regex: identifier,\n        action: {\n          cases: {\n            \"@keywords\": { token: \"keyword\" },\n            \"@namedLiterals\": { token: \"keyword\" },\n            \"@default\": { token: \"identifier\" }\n          }\n        }\n      },\n      { regex: `@${identifier}`, action: { token: \"tag\" } },\n      { regex: `#${directive}`, action: { token: \"directive\" } }\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}}]
}