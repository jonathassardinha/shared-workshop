{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///Users/jloka/Documents/repos/personal/shared-workshop/node_modules/.pnpm/monaco-editor%400.52.2/node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHints.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { URI } from '../../../../base/common/uri.js';\nexport class InlayHintAnchor {\n    constructor(range, direction) {\n        this.range = range;\n        this.direction = direction;\n    }\n}\nexport class InlayHintItem {\n    constructor(hint, anchor, provider) {\n        this.hint = hint;\n        this.anchor = anchor;\n        this.provider = provider;\n        this._isResolved = false;\n    }\n    with(delta) {\n        const result = new InlayHintItem(this.hint, delta.anchor, this.provider);\n        result._isResolved = this._isResolved;\n        result._currentResolve = this._currentResolve;\n        return result;\n    }\n    async resolve(token) {\n        if (typeof this.provider.resolveInlayHint !== 'function') {\n            return;\n        }\n        if (this._currentResolve) {\n            // wait for an active resolve operation and try again\n            // when that's done.\n            await this._currentResolve;\n            if (token.isCancellationRequested) {\n                return;\n            }\n            return this.resolve(token);\n        }\n        if (!this._isResolved) {\n            this._currentResolve = this._doResolve(token)\n                .finally(() => this._currentResolve = undefined);\n        }\n        await this._currentResolve;\n    }\n    async _doResolve(token) {\n        try {\n            const newHint = await Promise.resolve(this.provider.resolveInlayHint(this.hint, token));\n            this.hint.tooltip = newHint?.tooltip ?? this.hint.tooltip;\n            this.hint.label = newHint?.label ?? this.hint.label;\n            this.hint.textEdits = newHint?.textEdits ?? this.hint.textEdits;\n            this._isResolved = true;\n        }\n        catch (err) {\n            onUnexpectedExternalError(err);\n            this._isResolved = false;\n        }\n    }\n}\nexport class InlayHintsFragments {\n    static { this._emptyInlayHintList = Object.freeze({ dispose() { }, hints: [] }); }\n    static async create(registry, model, ranges, token) {\n        const data = [];\n        const promises = registry.ordered(model).reverse().map(provider => ranges.map(async (range) => {\n            try {\n                const result = await provider.provideInlayHints(model, range, token);\n                if (result?.hints.length || provider.onDidChangeInlayHints) {\n                    data.push([result ?? InlayHintsFragments._emptyInlayHintList, provider]);\n                }\n            }\n            catch (err) {\n                onUnexpectedExternalError(err);\n            }\n        }));\n        await Promise.all(promises.flat());\n        if (token.isCancellationRequested || model.isDisposed()) {\n            throw new CancellationError();\n        }\n        return new InlayHintsFragments(ranges, data, model);\n    }\n    constructor(ranges, data, model) {\n        this._disposables = new DisposableStore();\n        this.ranges = ranges;\n        this.provider = new Set();\n        const items = [];\n        for (const [list, provider] of data) {\n            this._disposables.add(list);\n            this.provider.add(provider);\n            for (const hint of list.hints) {\n                // compute the range to which the item should be attached to\n                const position = model.validatePosition(hint.position);\n                let direction = 'before';\n                const wordRange = InlayHintsFragments._getRangeAtPosition(model, position);\n                let range;\n                if (wordRange.getStartPosition().isBefore(position)) {\n                    range = Range.fromPositions(wordRange.getStartPosition(), position);\n                    direction = 'after';\n                }\n                else {\n                    range = Range.fromPositions(position, wordRange.getEndPosition());\n                    direction = 'before';\n                }\n                items.push(new InlayHintItem(hint, new InlayHintAnchor(range, direction), provider));\n            }\n        }\n        this.items = items.sort((a, b) => Position.compare(a.hint.position, b.hint.position));\n    }\n    dispose() {\n        this._disposables.dispose();\n    }\n    static _getRangeAtPosition(model, position) {\n        const line = position.lineNumber;\n        const word = model.getWordAtPosition(position);\n        if (word) {\n            // always prefer the word range\n            return new Range(line, word.startColumn, line, word.endColumn);\n        }\n        model.tokenization.tokenizeIfCheap(line);\n        const tokens = model.tokenization.getLineTokens(line);\n        const offset = position.column - 1;\n        const idx = tokens.findTokenIndexAtOffset(offset);\n        let start = tokens.getStartOffset(idx);\n        let end = tokens.getEndOffset(idx);\n        if (end - start === 1) {\n            // single character token, when at its end try leading/trailing token instead\n            if (start === offset && idx > 1) {\n                // leading token\n                start = tokens.getStartOffset(idx - 1);\n                end = tokens.getEndOffset(idx - 1);\n            }\n            else if (end === offset && idx < tokens.getCount() - 1) {\n                // trailing token\n                start = tokens.getStartOffset(idx + 1);\n                end = tokens.getEndOffset(idx + 1);\n            }\n        }\n        return new Range(line, start + 1, line, end + 1);\n    }\n}\nexport function asCommandLink(command) {\n    return URI.from({\n        scheme: Schemas.command,\n        path: command.id,\n        query: command.arguments && encodeURIComponent(JSON.stringify(command.arguments))\n    }).toString();\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file:///Users/jloka/Documents/repos/personal/shared-workshop/node_modules/.pnpm/monaco-editor%400.52.2/node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsLocations.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Action, Separator } from '../../../../base/common/actions.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { generateUuid } from '../../../../base/common/uuid.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { DefinitionAction, SymbolNavigationAction, SymbolNavigationAnchor } from '../../gotoSymbol/browser/goToCommands.js';\nimport { PeekContext } from '../../peekView/browser/peekView.js';\nimport { isIMenuItem, MenuId, MenuItemAction, MenuRegistry } from '../../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nexport async function showGoToContextMenu(accessor, editor, anchor, part) {\n    const resolverService = accessor.get(ITextModelService);\n    const contextMenuService = accessor.get(IContextMenuService);\n    const commandService = accessor.get(ICommandService);\n    const instaService = accessor.get(IInstantiationService);\n    const notificationService = accessor.get(INotificationService);\n    await part.item.resolve(CancellationToken.None);\n    if (!part.part.location) {\n        return;\n    }\n    const location = part.part.location;\n    const menuActions = [];\n    // from all registered (not active) context menu actions select those\n    // that are a symbol navigation actions\n    const filter = new Set(MenuRegistry.getMenuItems(MenuId.EditorContext)\n        .map(item => isIMenuItem(item) ? item.command.id : generateUuid()));\n    for (const delegate of SymbolNavigationAction.all()) {\n        if (filter.has(delegate.desc.id)) {\n            menuActions.push(new Action(delegate.desc.id, MenuItemAction.label(delegate.desc, { renderShortTitle: true }), undefined, true, async () => {\n                const ref = await resolverService.createModelReference(location.uri);\n                try {\n                    const symbolAnchor = new SymbolNavigationAnchor(ref.object.textEditorModel, Range.getStartPosition(location.range));\n                    const range = part.item.anchor.range;\n                    await instaService.invokeFunction(delegate.runEditorCommand.bind(delegate), editor, symbolAnchor, range);\n                }\n                finally {\n                    ref.dispose();\n                }\n            }));\n        }\n    }\n    if (part.part.command) {\n        const { command } = part.part;\n        menuActions.push(new Separator());\n        menuActions.push(new Action(command.id, command.title, undefined, true, async () => {\n            try {\n                await commandService.executeCommand(command.id, ...(command.arguments ?? []));\n            }\n            catch (err) {\n                notificationService.notify({\n                    severity: Severity.Error,\n                    source: part.item.provider.displayName,\n                    message: err\n                });\n            }\n        }));\n    }\n    // show context menu\n    const useShadowDOM = editor.getOption(128 /* EditorOption.useShadowDOM */);\n    contextMenuService.showContextMenu({\n        domForShadowRoot: useShadowDOM ? editor.getDomNode() ?? undefined : undefined,\n        getAnchor: () => {\n            const box = dom.getDomNodePagePosition(anchor);\n            return { x: box.left, y: box.top + box.height + 8 };\n        },\n        getActions: () => menuActions,\n        onHide: () => {\n            editor.focus();\n        },\n        autoSelectFirstItem: true,\n    });\n}\nexport async function goToDefinitionWithLocation(accessor, event, editor, location) {\n    const resolverService = accessor.get(ITextModelService);\n    const ref = await resolverService.createModelReference(location.uri);\n    await editor.invokeWithinContext(async (accessor) => {\n        const openToSide = event.hasSideBySideModifier;\n        const contextKeyService = accessor.get(IContextKeyService);\n        const isInPeek = PeekContext.inPeekEditor.getValue(contextKeyService);\n        const canPeek = !openToSide && editor.getOption(89 /* EditorOption.definitionLinkOpensInPeek */) && !isInPeek;\n        const action = new DefinitionAction({ openToSide, openInPeek: canPeek, muteMessage: true }, { title: { value: '', original: '' }, id: '', precondition: undefined });\n        return action.run(accessor, new SymbolNavigationAnchor(ref.object.textEditorModel, Range.getStartPosition(location.range)), Range.lift(location.range));\n    });\n    ref.dispose();\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 302, "column": 0}, "map": {"version":3,"sources":["file:///Users/jloka/Documents/repos/personal/shared-workshop/node_modules/.pnpm/monaco-editor%400.52.2/node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar InlayHintsController_1;\nimport { isHTMLElement, ModifierKeyEmitter } from '../../../../base/browser/dom.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { LRUCache } from '../../../../base/common/map.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { DynamicCssRules } from '../../../browser/editorDom.js';\nimport { StableEditorScrollState } from '../../../browser/stableEditorScroll.js';\nimport { EDITOR_FONT_DEFAULTS } from '../../../common/config/editorOptions.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nimport * as languages from '../../../common/languages.js';\nimport { InjectedTextCursorStops } from '../../../common/model.js';\nimport { ModelDecorationInjectedTextOptions } from '../../../common/model/textModel.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { ClickLinkGesture } from '../../gotoSymbol/browser/link/clickLinkGesture.js';\nimport { InlayHintAnchor, InlayHintsFragments } from './inlayHints.js';\nimport { goToDefinitionWithLocation, showGoToContextMenu } from './inlayHintsLocations.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { createDecorator, IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport * as colors from '../../../../platform/theme/common/colorRegistry.js';\nimport { themeColorFromId } from '../../../../platform/theme/common/themeService.js';\n// --- hint caching service (per session)\nclass InlayHintsCache {\n    constructor() {\n        this._entries = new LRUCache(50);\n    }\n    get(model) {\n        const key = InlayHintsCache._key(model);\n        return this._entries.get(key);\n    }\n    set(model, value) {\n        const key = InlayHintsCache._key(model);\n        this._entries.set(key, value);\n    }\n    static _key(model) {\n        return `${model.uri.toString()}/${model.getVersionId()}`;\n    }\n}\nconst IInlayHintsCache = createDecorator('IInlayHintsCache');\nregisterSingleton(IInlayHintsCache, InlayHintsCache, 1 /* InstantiationType.Delayed */);\n// --- rendered label\nexport class RenderedInlayHintLabelPart {\n    constructor(item, index) {\n        this.item = item;\n        this.index = index;\n    }\n    get part() {\n        const label = this.item.hint.label;\n        if (typeof label === 'string') {\n            return { label };\n        }\n        else {\n            return label[this.index];\n        }\n    }\n}\nclass ActiveInlayHintInfo {\n    constructor(part, hasTriggerModifier) {\n        this.part = part;\n        this.hasTriggerModifier = hasTriggerModifier;\n    }\n}\n// --- controller\nlet InlayHintsController = class InlayHintsController {\n    static { InlayHintsController_1 = this; }\n    static { this.ID = 'editor.contrib.InlayHints'; }\n    static { this._MAX_DECORATORS = 1500; }\n    static { this._MAX_LABEL_LEN = 43; }\n    static get(editor) {\n        return editor.getContribution(InlayHintsController_1.ID) ?? undefined;\n    }\n    constructor(_editor, _languageFeaturesService, _featureDebounce, _inlayHintsCache, _commandService, _notificationService, _instaService) {\n        this._editor = _editor;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._inlayHintsCache = _inlayHintsCache;\n        this._commandService = _commandService;\n        this._notificationService = _notificationService;\n        this._instaService = _instaService;\n        this._disposables = new DisposableStore();\n        this._sessionDisposables = new DisposableStore();\n        this._decorationsMetadata = new Map();\n        this._ruleFactory = new DynamicCssRules(this._editor);\n        this._activeRenderMode = 0 /* RenderMode.Normal */;\n        this._debounceInfo = _featureDebounce.for(_languageFeaturesService.inlayHintsProvider, 'InlayHint', { min: 25 });\n        this._disposables.add(_languageFeaturesService.inlayHintsProvider.onDidChange(() => this._update()));\n        this._disposables.add(_editor.onDidChangeModel(() => this._update()));\n        this._disposables.add(_editor.onDidChangeModelLanguage(() => this._update()));\n        this._disposables.add(_editor.onDidChangeConfiguration(e => {\n            if (e.hasChanged(142 /* EditorOption.inlayHints */)) {\n                this._update();\n            }\n        }));\n        this._update();\n    }\n    dispose() {\n        this._sessionDisposables.dispose();\n        this._removeAllDecorations();\n        this._disposables.dispose();\n    }\n    _update() {\n        this._sessionDisposables.clear();\n        this._removeAllDecorations();\n        const options = this._editor.getOption(142 /* EditorOption.inlayHints */);\n        if (options.enabled === 'off') {\n            return;\n        }\n        const model = this._editor.getModel();\n        if (!model || !this._languageFeaturesService.inlayHintsProvider.has(model)) {\n            return;\n        }\n        if (options.enabled === 'on') {\n            // different \"on\" modes: always\n            this._activeRenderMode = 0 /* RenderMode.Normal */;\n        }\n        else {\n            // different \"on\" modes: offUnlessPressed, or onUnlessPressed\n            let defaultMode;\n            let altMode;\n            if (options.enabled === 'onUnlessPressed') {\n                defaultMode = 0 /* RenderMode.Normal */;\n                altMode = 1 /* RenderMode.Invisible */;\n            }\n            else {\n                defaultMode = 1 /* RenderMode.Invisible */;\n                altMode = 0 /* RenderMode.Normal */;\n            }\n            this._activeRenderMode = defaultMode;\n            this._sessionDisposables.add(ModifierKeyEmitter.getInstance().event(e => {\n                if (!this._editor.hasModel()) {\n                    return;\n                }\n                const newRenderMode = e.altKey && e.ctrlKey && !(e.shiftKey || e.metaKey) ? altMode : defaultMode;\n                if (newRenderMode !== this._activeRenderMode) {\n                    this._activeRenderMode = newRenderMode;\n                    const model = this._editor.getModel();\n                    const copies = this._copyInlayHintsWithCurrentAnchor(model);\n                    this._updateHintsDecorators([model.getFullModelRange()], copies);\n                    scheduler.schedule(0);\n                }\n            }));\n        }\n        // iff possible, quickly update from cache\n        const cached = this._inlayHintsCache.get(model);\n        if (cached) {\n            this._updateHintsDecorators([model.getFullModelRange()], cached);\n        }\n        this._sessionDisposables.add(toDisposable(() => {\n            // cache items when switching files etc\n            if (!model.isDisposed()) {\n                this._cacheHintsForFastRestore(model);\n            }\n        }));\n        let cts;\n        const watchedProviders = new Set();\n        const scheduler = new RunOnceScheduler(async () => {\n            const t1 = Date.now();\n            cts?.dispose(true);\n            cts = new CancellationTokenSource();\n            const listener = model.onWillDispose(() => cts?.cancel());\n            try {\n                const myToken = cts.token;\n                const inlayHints = await InlayHintsFragments.create(this._languageFeaturesService.inlayHintsProvider, model, this._getHintsRanges(), myToken);\n                scheduler.delay = this._debounceInfo.update(model, Date.now() - t1);\n                if (myToken.isCancellationRequested) {\n                    inlayHints.dispose();\n                    return;\n                }\n                // listen to provider changes\n                for (const provider of inlayHints.provider) {\n                    if (typeof provider.onDidChangeInlayHints === 'function' && !watchedProviders.has(provider)) {\n                        watchedProviders.add(provider);\n                        this._sessionDisposables.add(provider.onDidChangeInlayHints(() => {\n                            if (!scheduler.isScheduled()) { // ignore event when request is already scheduled\n                                scheduler.schedule();\n                            }\n                        }));\n                    }\n                }\n                this._sessionDisposables.add(inlayHints);\n                this._updateHintsDecorators(inlayHints.ranges, inlayHints.items);\n                this._cacheHintsForFastRestore(model);\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n            finally {\n                cts.dispose();\n                listener.dispose();\n            }\n        }, this._debounceInfo.get(model));\n        this._sessionDisposables.add(scheduler);\n        this._sessionDisposables.add(toDisposable(() => cts?.dispose(true)));\n        scheduler.schedule(0);\n        this._sessionDisposables.add(this._editor.onDidScrollChange((e) => {\n            // update when scroll position changes\n            // uses scrollTopChanged has weak heuristic to differenatiate between scrolling due to\n            // typing or due to \"actual\" scrolling\n            if (e.scrollTopChanged || !scheduler.isScheduled()) {\n                scheduler.schedule();\n            }\n        }));\n        this._sessionDisposables.add(this._editor.onDidChangeModelContent((e) => {\n            cts?.cancel();\n            // update less aggressive when typing\n            const delay = Math.max(scheduler.delay, 1250);\n            scheduler.schedule(delay);\n        }));\n        // mouse gestures\n        this._sessionDisposables.add(this._installDblClickGesture(() => scheduler.schedule(0)));\n        this._sessionDisposables.add(this._installLinkGesture());\n        this._sessionDisposables.add(this._installContextMenu());\n    }\n    _installLinkGesture() {\n        const store = new DisposableStore();\n        const gesture = store.add(new ClickLinkGesture(this._editor));\n        // let removeHighlight = () => { };\n        const sessionStore = new DisposableStore();\n        store.add(sessionStore);\n        store.add(gesture.onMouseMoveOrRelevantKeyDown(e => {\n            const [mouseEvent] = e;\n            const labelPart = this._getInlayHintLabelPart(mouseEvent);\n            const model = this._editor.getModel();\n            if (!labelPart || !model) {\n                sessionStore.clear();\n                return;\n            }\n            // resolve the item\n            const cts = new CancellationTokenSource();\n            sessionStore.add(toDisposable(() => cts.dispose(true)));\n            labelPart.item.resolve(cts.token);\n            // render link => when the modifier is pressed and when there is a command or location\n            this._activeInlayHintPart = labelPart.part.command || labelPart.part.location\n                ? new ActiveInlayHintInfo(labelPart, mouseEvent.hasTriggerModifier)\n                : undefined;\n            const lineNumber = model.validatePosition(labelPart.item.hint.position).lineNumber;\n            const range = new Range(lineNumber, 1, lineNumber, model.getLineMaxColumn(lineNumber));\n            const lineHints = this._getInlineHintsForRange(range);\n            this._updateHintsDecorators([range], lineHints);\n            sessionStore.add(toDisposable(() => {\n                this._activeInlayHintPart = undefined;\n                this._updateHintsDecorators([range], lineHints);\n            }));\n        }));\n        store.add(gesture.onCancel(() => sessionStore.clear()));\n        store.add(gesture.onExecute(async (e) => {\n            const label = this._getInlayHintLabelPart(e);\n            if (label) {\n                const part = label.part;\n                if (part.location) {\n                    // location -> execute go to def\n                    this._instaService.invokeFunction(goToDefinitionWithLocation, e, this._editor, part.location);\n                }\n                else if (languages.Command.is(part.command)) {\n                    // command -> execute it\n                    await this._invokeCommand(part.command, label.item);\n                }\n            }\n        }));\n        return store;\n    }\n    _getInlineHintsForRange(range) {\n        const lineHints = new Set();\n        for (const data of this._decorationsMetadata.values()) {\n            if (range.containsRange(data.item.anchor.range)) {\n                lineHints.add(data.item);\n            }\n        }\n        return Array.from(lineHints);\n    }\n    _installDblClickGesture(updateInlayHints) {\n        return this._editor.onMouseUp(async (e) => {\n            if (e.event.detail !== 2) {\n                return;\n            }\n            const part = this._getInlayHintLabelPart(e);\n            if (!part) {\n                return;\n            }\n            e.event.preventDefault();\n            await part.item.resolve(CancellationToken.None);\n            if (isNonEmptyArray(part.item.hint.textEdits)) {\n                const edits = part.item.hint.textEdits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text));\n                this._editor.executeEdits('inlayHint.default', edits);\n                updateInlayHints();\n            }\n        });\n    }\n    _installContextMenu() {\n        return this._editor.onContextMenu(async (e) => {\n            if (!(isHTMLElement(e.event.target))) {\n                return;\n            }\n            const part = this._getInlayHintLabelPart(e);\n            if (part) {\n                await this._instaService.invokeFunction(showGoToContextMenu, this._editor, e.event.target, part);\n            }\n        });\n    }\n    _getInlayHintLabelPart(e) {\n        if (e.target.type !== 6 /* MouseTargetType.CONTENT_TEXT */) {\n            return undefined;\n        }\n        const options = e.target.detail.injectedText?.options;\n        if (options instanceof ModelDecorationInjectedTextOptions && options?.attachedData instanceof RenderedInlayHintLabelPart) {\n            return options.attachedData;\n        }\n        return undefined;\n    }\n    async _invokeCommand(command, item) {\n        try {\n            await this._commandService.executeCommand(command.id, ...(command.arguments ?? []));\n        }\n        catch (err) {\n            this._notificationService.notify({\n                severity: Severity.Error,\n                source: item.provider.displayName,\n                message: err\n            });\n        }\n    }\n    _cacheHintsForFastRestore(model) {\n        const hints = this._copyInlayHintsWithCurrentAnchor(model);\n        this._inlayHintsCache.set(model, hints);\n    }\n    // return inlay hints but with an anchor that reflects \"updates\"\n    // that happened after receiving them, e.g adding new lines before a hint\n    _copyInlayHintsWithCurrentAnchor(model) {\n        const items = new Map();\n        for (const [id, obj] of this._decorationsMetadata) {\n            if (items.has(obj.item)) {\n                // an inlay item can be rendered as multiple decorations\n                // but they will all uses the same range\n                continue;\n            }\n            const range = model.getDecorationRange(id);\n            if (range) {\n                // update range with whatever the editor has tweaked it to\n                const anchor = new InlayHintAnchor(range, obj.item.anchor.direction);\n                const copy = obj.item.with({ anchor });\n                items.set(obj.item, copy);\n            }\n        }\n        return Array.from(items.values());\n    }\n    _getHintsRanges() {\n        const extra = 30;\n        const model = this._editor.getModel();\n        const visibleRanges = this._editor.getVisibleRangesPlusViewportAboveBelow();\n        const result = [];\n        for (const range of visibleRanges.sort(Range.compareRangesUsingStarts)) {\n            const extendedRange = model.validateRange(new Range(range.startLineNumber - extra, range.startColumn, range.endLineNumber + extra, range.endColumn));\n            if (result.length === 0 || !Range.areIntersectingOrTouching(result[result.length - 1], extendedRange)) {\n                result.push(extendedRange);\n            }\n            else {\n                result[result.length - 1] = Range.plusRange(result[result.length - 1], extendedRange);\n            }\n        }\n        return result;\n    }\n    _updateHintsDecorators(ranges, items) {\n        // utils to collect/create injected text decorations\n        const newDecorationsData = [];\n        const addInjectedText = (item, ref, content, cursorStops, attachedData) => {\n            const opts = {\n                content,\n                inlineClassNameAffectsLetterSpacing: true,\n                inlineClassName: ref.className,\n                cursorStops,\n                attachedData\n            };\n            newDecorationsData.push({\n                item,\n                classNameRef: ref,\n                decoration: {\n                    range: item.anchor.range,\n                    options: {\n                        // className: \"rangeHighlight\", // DEBUG highlight to see to what range a hint is attached\n                        description: 'InlayHint',\n                        showIfCollapsed: item.anchor.range.isEmpty(), // \"original\" range is empty\n                        collapseOnReplaceEdit: !item.anchor.range.isEmpty(),\n                        stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */,\n                        [item.anchor.direction]: this._activeRenderMode === 0 /* RenderMode.Normal */ ? opts : undefined\n                    }\n                }\n            });\n        };\n        const addInjectedWhitespace = (item, isLast) => {\n            const marginRule = this._ruleFactory.createClassNameRef({\n                width: `${(fontSize / 3) | 0}px`,\n                display: 'inline-block'\n            });\n            addInjectedText(item, marginRule, '\\u200a', isLast ? InjectedTextCursorStops.Right : InjectedTextCursorStops.None);\n        };\n        //\n        const { fontSize, fontFamily, padding, isUniform } = this._getLayoutInfo();\n        const fontFamilyVar = '--code-editorInlayHintsFontFamily';\n        this._editor.getContainerDomNode().style.setProperty(fontFamilyVar, fontFamily);\n        let currentLineInfo = { line: 0, totalLen: 0 };\n        for (const item of items) {\n            if (currentLineInfo.line !== item.anchor.range.startLineNumber) {\n                currentLineInfo = { line: item.anchor.range.startLineNumber, totalLen: 0 };\n            }\n            if (currentLineInfo.totalLen > InlayHintsController_1._MAX_LABEL_LEN) {\n                continue;\n            }\n            // whitespace leading the actual label\n            if (item.hint.paddingLeft) {\n                addInjectedWhitespace(item, false);\n            }\n            // the label with its parts\n            const parts = typeof item.hint.label === 'string'\n                ? [{ label: item.hint.label }]\n                : item.hint.label;\n            for (let i = 0; i < parts.length; i++) {\n                const part = parts[i];\n                const isFirst = i === 0;\n                const isLast = i === parts.length - 1;\n                const cssProperties = {\n                    fontSize: `${fontSize}px`,\n                    fontFamily: `var(${fontFamilyVar}), ${EDITOR_FONT_DEFAULTS.fontFamily}`,\n                    verticalAlign: isUniform ? 'baseline' : 'middle',\n                    unicodeBidi: 'isolate'\n                };\n                if (isNonEmptyArray(item.hint.textEdits)) {\n                    cssProperties.cursor = 'default';\n                }\n                this._fillInColors(cssProperties, item.hint);\n                if ((part.command || part.location) && this._activeInlayHintPart?.part.item === item && this._activeInlayHintPart.part.index === i) {\n                    // active link!\n                    cssProperties.textDecoration = 'underline';\n                    if (this._activeInlayHintPart.hasTriggerModifier) {\n                        cssProperties.color = themeColorFromId(colors.editorActiveLinkForeground);\n                        cssProperties.cursor = 'pointer';\n                    }\n                }\n                if (padding) {\n                    if (isFirst && isLast) {\n                        // only element\n                        cssProperties.padding = `1px ${Math.max(1, fontSize / 4) | 0}px`;\n                        cssProperties.borderRadius = `${(fontSize / 4) | 0}px`;\n                    }\n                    else if (isFirst) {\n                        // first element\n                        cssProperties.padding = `1px 0 1px ${Math.max(1, fontSize / 4) | 0}px`;\n                        cssProperties.borderRadius = `${(fontSize / 4) | 0}px 0 0 ${(fontSize / 4) | 0}px`;\n                    }\n                    else if (isLast) {\n                        // last element\n                        cssProperties.padding = `1px ${Math.max(1, fontSize / 4) | 0}px 1px 0`;\n                        cssProperties.borderRadius = `0 ${(fontSize / 4) | 0}px ${(fontSize / 4) | 0}px 0`;\n                    }\n                    else {\n                        cssProperties.padding = `1px 0 1px 0`;\n                    }\n                }\n                let textlabel = part.label;\n                currentLineInfo.totalLen += textlabel.length;\n                let tooLong = false;\n                const over = currentLineInfo.totalLen - InlayHintsController_1._MAX_LABEL_LEN;\n                if (over > 0) {\n                    textlabel = textlabel.slice(0, -over) + '…';\n                    tooLong = true;\n                }\n                addInjectedText(item, this._ruleFactory.createClassNameRef(cssProperties), fixSpace(textlabel), isLast && !item.hint.paddingRight ? InjectedTextCursorStops.Right : InjectedTextCursorStops.None, new RenderedInlayHintLabelPart(item, i));\n                if (tooLong) {\n                    break;\n                }\n            }\n            // whitespace trailing the actual label\n            if (item.hint.paddingRight) {\n                addInjectedWhitespace(item, true);\n            }\n            if (newDecorationsData.length > InlayHintsController_1._MAX_DECORATORS) {\n                break;\n            }\n        }\n        // collect all decoration ids that are affected by the ranges\n        // and only update those decorations\n        const decorationIdsToReplace = [];\n        for (const [id, metadata] of this._decorationsMetadata) {\n            const range = this._editor.getModel()?.getDecorationRange(id);\n            if (range && ranges.some(r => r.containsRange(range))) {\n                decorationIdsToReplace.push(id);\n                metadata.classNameRef.dispose();\n                this._decorationsMetadata.delete(id);\n            }\n        }\n        const scrollState = StableEditorScrollState.capture(this._editor);\n        this._editor.changeDecorations(accessor => {\n            const newDecorationIds = accessor.deltaDecorations(decorationIdsToReplace, newDecorationsData.map(d => d.decoration));\n            for (let i = 0; i < newDecorationIds.length; i++) {\n                const data = newDecorationsData[i];\n                this._decorationsMetadata.set(newDecorationIds[i], data);\n            }\n        });\n        scrollState.restore(this._editor);\n    }\n    _fillInColors(props, hint) {\n        if (hint.kind === languages.InlayHintKind.Parameter) {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintParameterBackground);\n            props.color = themeColorFromId(colors.editorInlayHintParameterForeground);\n        }\n        else if (hint.kind === languages.InlayHintKind.Type) {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintTypeBackground);\n            props.color = themeColorFromId(colors.editorInlayHintTypeForeground);\n        }\n        else {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintBackground);\n            props.color = themeColorFromId(colors.editorInlayHintForeground);\n        }\n    }\n    _getLayoutInfo() {\n        const options = this._editor.getOption(142 /* EditorOption.inlayHints */);\n        const padding = options.padding;\n        const editorFontSize = this._editor.getOption(52 /* EditorOption.fontSize */);\n        const editorFontFamily = this._editor.getOption(49 /* EditorOption.fontFamily */);\n        let fontSize = options.fontSize;\n        if (!fontSize || fontSize < 5 || fontSize > editorFontSize) {\n            fontSize = editorFontSize;\n        }\n        const fontFamily = options.fontFamily || editorFontFamily;\n        const isUniform = !padding\n            && fontFamily === editorFontFamily\n            && fontSize === editorFontSize;\n        return { fontSize, fontFamily, padding, isUniform };\n    }\n    _removeAllDecorations() {\n        this._editor.removeDecorations(Array.from(this._decorationsMetadata.keys()));\n        for (const obj of this._decorationsMetadata.values()) {\n            obj.classNameRef.dispose();\n        }\n        this._decorationsMetadata.clear();\n    }\n};\nInlayHintsController = InlayHintsController_1 = __decorate([\n    __param(1, ILanguageFeaturesService),\n    __param(2, ILanguageFeatureDebounceService),\n    __param(3, IInlayHintsCache),\n    __param(4, ICommandService),\n    __param(5, INotificationService),\n    __param(6, IInstantiationService)\n], InlayHintsController);\nexport { InlayHintsController };\n// Prevents the view from potentially visible whitespace\nfunction fixSpace(str) {\n    const noBreakWhitespace = '\\xa0';\n    return str.replace(/[ \\t]/g, noBreakWhitespace);\n}\nCommandsRegistry.registerCommand('_executeInlayHintProvider', async (accessor, ...args) => {\n    const [uri, range] = args;\n    assertType(URI.isUri(uri));\n    assertType(Range.isIRange(range));\n    const { inlayHintsProvider } = accessor.get(ILanguageFeaturesService);\n    const ref = await accessor.get(ITextModelService).createModelReference(uri);\n    try {\n        const model = await InlayHintsFragments.create(inlayHintsProvider, ref.object.textEditorModel, [Range.lift(range)], CancellationToken.None);\n        const result = model.items.map(i => i.hint);\n        setTimeout(() => model.dispose(), 0); // dispose after sending to ext host\n        return result;\n    }\n    finally {\n        ref.dispose();\n    }\n});\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 941, "column": 0}, "map": {"version":3,"sources":["file:///Users/jloka/Documents/repos/personal/shared-workshop/node_modules/.pnpm/monaco-editor%400.52.2/node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsHover.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { isEmptyMarkdownString, MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ModelDecorationInjectedTextOptions } from '../../../common/model/textModel.js';\nimport { HoverForeignElementAnchor } from '../../hover/browser/hoverTypes.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { getHoverProviderResultsAsAsyncIterable } from '../../hover/browser/getHover.js';\nimport { MarkdownHover, MarkdownHoverParticipant } from '../../hover/browser/markdownHoverParticipant.js';\nimport { RenderedInlayHintLabelPart, InlayHintsController } from './inlayHintsController.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { localize } from '../../../../nls.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { asCommandLink } from './inlayHints.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { IHoverService } from '../../../../platform/hover/browser/hover.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nclass InlayHintsHoverAnchor extends HoverForeignElementAnchor {\n    constructor(part, owner, initialMousePosX, initialMousePosY) {\n        super(10, owner, part.item.anchor.range, initialMousePosX, initialMousePosY, true);\n        this.part = part;\n    }\n}\nlet InlayHintsHover = class InlayHintsHover extends MarkdownHoverParticipant {\n    constructor(editor, languageService, openerService, keybindingService, hoverService, configurationService, _resolverService, languageFeaturesService, commandService) {\n        super(editor, languageService, openerService, configurationService, languageFeaturesService, keybindingService, hoverService, commandService);\n        this._resolverService = _resolverService;\n        this.hoverOrdinal = 6;\n    }\n    suggestHoverAnchor(mouseEvent) {\n        const controller = InlayHintsController.get(this._editor);\n        if (!controller) {\n            return null;\n        }\n        if (mouseEvent.target.type !== 6 /* MouseTargetType.CONTENT_TEXT */) {\n            return null;\n        }\n        const options = mouseEvent.target.detail.injectedText?.options;\n        if (!(options instanceof ModelDecorationInjectedTextOptions && options.attachedData instanceof RenderedInlayHintLabelPart)) {\n            return null;\n        }\n        return new InlayHintsHoverAnchor(options.attachedData, this, mouseEvent.event.posx, mouseEvent.event.posy);\n    }\n    computeSync() {\n        return [];\n    }\n    computeAsync(anchor, _lineDecorations, token) {\n        if (!(anchor instanceof InlayHintsHoverAnchor)) {\n            return AsyncIterableObject.EMPTY;\n        }\n        return new AsyncIterableObject(async (executor) => {\n            const { part } = anchor;\n            await part.item.resolve(token);\n            if (token.isCancellationRequested) {\n                return;\n            }\n            // (1) Inlay Tooltip\n            let itemTooltip;\n            if (typeof part.item.hint.tooltip === 'string') {\n                itemTooltip = new MarkdownString().appendText(part.item.hint.tooltip);\n            }\n            else if (part.item.hint.tooltip) {\n                itemTooltip = part.item.hint.tooltip;\n            }\n            if (itemTooltip) {\n                executor.emitOne(new MarkdownHover(this, anchor.range, [itemTooltip], false, 0));\n            }\n            // (1.2) Inlay dbl-click gesture\n            if (isNonEmptyArray(part.item.hint.textEdits)) {\n                executor.emitOne(new MarkdownHover(this, anchor.range, [new MarkdownString().appendText(localize('hint.dbl', \"Double-click to insert\"))], false, 10001));\n            }\n            // (2) Inlay Label Part Tooltip\n            let partTooltip;\n            if (typeof part.part.tooltip === 'string') {\n                partTooltip = new MarkdownString().appendText(part.part.tooltip);\n            }\n            else if (part.part.tooltip) {\n                partTooltip = part.part.tooltip;\n            }\n            if (partTooltip) {\n                executor.emitOne(new MarkdownHover(this, anchor.range, [partTooltip], false, 1));\n            }\n            // (2.2) Inlay Label Part Help Hover\n            if (part.part.location || part.part.command) {\n                let linkHint;\n                const useMetaKey = this._editor.getOption(78 /* EditorOption.multiCursorModifier */) === 'altKey';\n                const kb = useMetaKey\n                    ? platform.isMacintosh\n                        ? localize('links.navigate.kb.meta.mac', \"cmd + click\")\n                        : localize('links.navigate.kb.meta', \"ctrl + click\")\n                    : platform.isMacintosh\n                        ? localize('links.navigate.kb.alt.mac', \"option + click\")\n                        : localize('links.navigate.kb.alt', \"alt + click\");\n                if (part.part.location && part.part.command) {\n                    linkHint = new MarkdownString().appendText(localize('hint.defAndCommand', 'Go to Definition ({0}), right click for more', kb));\n                }\n                else if (part.part.location) {\n                    linkHint = new MarkdownString().appendText(localize('hint.def', 'Go to Definition ({0})', kb));\n                }\n                else if (part.part.command) {\n                    linkHint = new MarkdownString(`[${localize('hint.cmd', \"Execute Command\")}](${asCommandLink(part.part.command)} \"${part.part.command.title}\") (${kb})`, { isTrusted: true });\n                }\n                if (linkHint) {\n                    executor.emitOne(new MarkdownHover(this, anchor.range, [linkHint], false, 10000));\n                }\n            }\n            // (3) Inlay Label Part Location tooltip\n            const iterable = await this._resolveInlayHintLabelPartHover(part, token);\n            for await (const item of iterable) {\n                executor.emitOne(item);\n            }\n        });\n    }\n    async _resolveInlayHintLabelPartHover(part, token) {\n        if (!part.part.location) {\n            return AsyncIterableObject.EMPTY;\n        }\n        const { uri, range } = part.part.location;\n        const ref = await this._resolverService.createModelReference(uri);\n        try {\n            const model = ref.object.textEditorModel;\n            if (!this._languageFeaturesService.hoverProvider.has(model)) {\n                return AsyncIterableObject.EMPTY;\n            }\n            return getHoverProviderResultsAsAsyncIterable(this._languageFeaturesService.hoverProvider, model, new Position(range.startLineNumber, range.startColumn), token)\n                .filter(item => !isEmptyMarkdownString(item.hover.contents))\n                .map(item => new MarkdownHover(this, part.item.anchor.range, item.hover.contents, false, 2 + item.ordinal));\n        }\n        finally {\n            ref.dispose();\n        }\n    }\n};\nInlayHintsHover = __decorate([\n    __param(1, ILanguageService),\n    __param(2, IOpenerService),\n    __param(3, IKeybindingService),\n    __param(4, IHoverService),\n    __param(5, IConfigurationService),\n    __param(6, ITextModelService),\n    __param(7, ILanguageFeaturesService),\n    __param(8, ICommandService)\n], InlayHintsHover);\nexport { InlayHintsHover };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1128, "column": 0}, "map": {"version":3,"sources":["file:///Users/jloka/Documents/repos/personal/shared-workshop/node_modules/.pnpm/monaco-editor%400.52.2/node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsContribution.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { HoverParticipantRegistry } from '../../hover/browser/hoverTypes.js';\nimport { InlayHintsController } from './inlayHintsController.js';\nimport { InlayHintsHover } from './inlayHintsHover.js';\nregisterEditorContribution(InlayHintsController.ID, InlayHintsController, 1 /* EditorContributionInstantiation.AfterFirstRender */);\nHoverParticipantRegistry.register(InlayHintsHover);\n"],"names":[],"mappings":"AAAA;;;8FAG8F;AAC9F;AACA;AACA;AACA;;;;;AACA,CAAA,GAAA,uPAAA,CAAA,6BAA0B,AAAD,EAAE,oRAAA,CAAA,uBAAoB,CAAC,EAAE,EAAE,oRAAA,CAAA,uBAAoB,EAAE,EAAE,oDAAoD;AAChI,qQAAA,CAAA,2BAAwB,CAAC,QAAQ,CAAC,+QAAA,CAAA,kBAAe","ignoreList":[0],"debugId":null}}]
}