{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///Users/jloka/Documents/repos/personal/shared-workshop/node_modules/.pnpm/monaco-editor%400.52.2/node_modules/monaco-editor/esm/vs/base/browser/ui/tree/tree.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var ObjectTreeElementCollapseState;\n(function (ObjectTreeElementCollapseState) {\n    ObjectTreeElementCollapseState[ObjectTreeElementCollapseState[\"Expanded\"] = 0] = \"Expanded\";\n    ObjectTreeElementCollapseState[ObjectTreeElementCollapseState[\"Collapsed\"] = 1] = \"Collapsed\";\n    /**\n     * If the element is already in the tree, preserve its current state. Else, expand it.\n     */\n    ObjectTreeElementCollapseState[ObjectTreeElementCollapseState[\"PreserveOrExpanded\"] = 2] = \"PreserveOrExpanded\";\n    /**\n     * If the element is already in the tree, preserve its current state. Else, collapse it.\n     */\n    ObjectTreeElementCollapseState[ObjectTreeElementCollapseState[\"PreserveOrCollapsed\"] = 3] = \"PreserveOrCollapsed\";\n})(ObjectTreeElementCollapseState || (ObjectTreeElementCollapseState = {}));\nexport var TreeMouseEventTarget;\n(function (TreeMouseEventTarget) {\n    TreeMouseEventTarget[TreeMouseEventTarget[\"Unknown\"] = 0] = \"Unknown\";\n    TreeMouseEventTarget[TreeMouseEventTarget[\"Twistie\"] = 1] = \"Twistie\";\n    TreeMouseEventTarget[TreeMouseEventTarget[\"Element\"] = 2] = \"Element\";\n    TreeMouseEventTarget[TreeMouseEventTarget[\"Filter\"] = 3] = \"Filter\";\n})(TreeMouseEventTarget || (TreeMouseEventTarget = {}));\nexport class TreeError extends Error {\n    constructor(user, message) {\n        super(`TreeError [${user}] ${message}`);\n    }\n}\nexport class WeakMapper {\n    constructor(fn) {\n        this.fn = fn;\n        this._map = new WeakMap();\n    }\n    map(key) {\n        let result = this._map.get(key);\n        if (!result) {\n            result = this.fn(key);\n            this._map.set(key, result);\n        }\n        return result;\n    }\n}\n"],"names":[],"mappings":"AAAA;;;8FAG8F;;;;;;AACvF,IAAI;AACX,CAAC,SAAU,8BAA8B;IACrC,8BAA8B,CAAC,8BAA8B,CAAC,WAAW,GAAG,EAAE,GAAG;IACjF,8BAA8B,CAAC,8BAA8B,CAAC,YAAY,GAAG,EAAE,GAAG;IAClF;;KAEC,GACD,8BAA8B,CAAC,8BAA8B,CAAC,qBAAqB,GAAG,EAAE,GAAG;IAC3F;;KAEC,GACD,8BAA8B,CAAC,8BAA8B,CAAC,sBAAsB,GAAG,EAAE,GAAG;AAChG,CAAC,EAAE,kCAAkC,CAAC,iCAAiC,CAAC,CAAC;AAClE,IAAI;AACX,CAAC,SAAU,oBAAoB;IAC3B,oBAAoB,CAAC,oBAAoB,CAAC,UAAU,GAAG,EAAE,GAAG;IAC5D,oBAAoB,CAAC,oBAAoB,CAAC,UAAU,GAAG,EAAE,GAAG;IAC5D,oBAAoB,CAAC,oBAAoB,CAAC,UAAU,GAAG,EAAE,GAAG;IAC5D,oBAAoB,CAAC,oBAAoB,CAAC,SAAS,GAAG,EAAE,GAAG;AAC/D,CAAC,EAAE,wBAAwB,CAAC,uBAAuB,CAAC,CAAC;AAC9C,MAAM,kBAAkB;IAC3B,YAAY,IAAI,EAAE,OAAO,CAAE;QACvB,KAAK,CAAC,AAAC,cAAsB,OAAT,MAAK,MAAY,OAAR;IACjC;AACJ;AACO,MAAM;IAKT,IAAI,GAAG,EAAE;QACL,IAAI,SAAS,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;QAC3B,IAAI,CAAC,QAAQ;YACT,SAAS,IAAI,CAAC,EAAE,CAAC;YACjB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK;QACvB;QACA,OAAO;IACX;IAXA,YAAY,EAAE,CAAE;QACZ,IAAI,CAAC,EAAE,GAAG;QACV,IAAI,CAAC,IAAI,GAAG,IAAI;IACpB;AASJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/jloka/Documents/repos/personal/shared-workshop/node_modules/.pnpm/monaco-editor%400.52.2/node_modules/monaco-editor/esm/vs/base/browser/ui/tree/indexTreeModel.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { TreeError } from './tree.js';\nimport { splice, tail2 } from '../../../common/arrays.js';\nimport { Delayer } from '../../../common/async.js';\nimport { MicrotaskDelay } from '../../../common/symbols.js';\nimport { LcsDiff } from '../../../common/diff/diff.js';\nimport { Emitter, EventBufferer } from '../../../common/event.js';\nimport { Iterable } from '../../../common/iterator.js';\nexport function isFilterResult(obj) {\n    return typeof obj === 'object' && 'visibility' in obj && 'data' in obj;\n}\nexport function getVisibleState(visibility) {\n    switch (visibility) {\n        case true: return 1 /* TreeVisibility.Visible */;\n        case false: return 0 /* TreeVisibility.Hidden */;\n        default: return visibility;\n    }\n}\nfunction isCollapsibleStateUpdate(update) {\n    return typeof update.collapsible === 'boolean';\n}\nexport class IndexTreeModel {\n    constructor(user, list, rootElement, options = {}) {\n        this.user = user;\n        this.list = list;\n        this.rootRef = [];\n        this.eventBufferer = new EventBufferer();\n        this._onDidChangeCollapseState = new Emitter();\n        this.onDidChangeCollapseState = this.eventBufferer.wrapEvent(this._onDidChangeCollapseState.event);\n        this._onDidChangeRenderNodeCount = new Emitter();\n        this.onDidChangeRenderNodeCount = this.eventBufferer.wrapEvent(this._onDidChangeRenderNodeCount.event);\n        this._onDidSplice = new Emitter();\n        this.onDidSplice = this._onDidSplice.event;\n        this.refilterDelayer = new Delayer(MicrotaskDelay);\n        this.collapseByDefault = typeof options.collapseByDefault === 'undefined' ? false : options.collapseByDefault;\n        this.allowNonCollapsibleParents = options.allowNonCollapsibleParents ?? false;\n        this.filter = options.filter;\n        this.autoExpandSingleChildren = typeof options.autoExpandSingleChildren === 'undefined' ? false : options.autoExpandSingleChildren;\n        this.root = {\n            parent: undefined,\n            element: rootElement,\n            children: [],\n            depth: 0,\n            visibleChildrenCount: 0,\n            visibleChildIndex: -1,\n            collapsible: false,\n            collapsed: false,\n            renderNodeCount: 0,\n            visibility: 1 /* TreeVisibility.Visible */,\n            visible: true,\n            filterData: undefined\n        };\n    }\n    splice(location, deleteCount, toInsert = Iterable.empty(), options = {}) {\n        if (location.length === 0) {\n            throw new TreeError(this.user, 'Invalid tree location');\n        }\n        if (options.diffIdentityProvider) {\n            this.spliceSmart(options.diffIdentityProvider, location, deleteCount, toInsert, options);\n        }\n        else {\n            this.spliceSimple(location, deleteCount, toInsert, options);\n        }\n    }\n    spliceSmart(identity, location, deleteCount, toInsertIterable = Iterable.empty(), options, recurseLevels = options.diffDepth ?? 0) {\n        const { parentNode } = this.getParentNodeWithListIndex(location);\n        if (!parentNode.lastDiffIds) {\n            return this.spliceSimple(location, deleteCount, toInsertIterable, options);\n        }\n        const toInsert = [...toInsertIterable];\n        const index = location[location.length - 1];\n        const diff = new LcsDiff({ getElements: () => parentNode.lastDiffIds }, {\n            getElements: () => [\n                ...parentNode.children.slice(0, index),\n                ...toInsert,\n                ...parentNode.children.slice(index + deleteCount),\n            ].map(e => identity.getId(e.element).toString())\n        }).ComputeDiff(false);\n        // if we were given a 'best effort' diff, use default behavior\n        if (diff.quitEarly) {\n            parentNode.lastDiffIds = undefined;\n            return this.spliceSimple(location, deleteCount, toInsert, options);\n        }\n        const locationPrefix = location.slice(0, -1);\n        const recurseSplice = (fromOriginal, fromModified, count) => {\n            if (recurseLevels > 0) {\n                for (let i = 0; i < count; i++) {\n                    fromOriginal--;\n                    fromModified--;\n                    this.spliceSmart(identity, [...locationPrefix, fromOriginal, 0], Number.MAX_SAFE_INTEGER, toInsert[fromModified].children, options, recurseLevels - 1);\n                }\n            }\n        };\n        let lastStartO = Math.min(parentNode.children.length, index + deleteCount);\n        let lastStartM = toInsert.length;\n        for (const change of diff.changes.sort((a, b) => b.originalStart - a.originalStart)) {\n            recurseSplice(lastStartO, lastStartM, lastStartO - (change.originalStart + change.originalLength));\n            lastStartO = change.originalStart;\n            lastStartM = change.modifiedStart - index;\n            this.spliceSimple([...locationPrefix, lastStartO], change.originalLength, Iterable.slice(toInsert, lastStartM, lastStartM + change.modifiedLength), options);\n        }\n        // at this point, startO === startM === count since any remaining prefix should match\n        recurseSplice(lastStartO, lastStartM, lastStartO);\n    }\n    spliceSimple(location, deleteCount, toInsert = Iterable.empty(), { onDidCreateNode, onDidDeleteNode, diffIdentityProvider }) {\n        const { parentNode, listIndex, revealed, visible } = this.getParentNodeWithListIndex(location);\n        const treeListElementsToInsert = [];\n        const nodesToInsertIterator = Iterable.map(toInsert, el => this.createTreeNode(el, parentNode, parentNode.visible ? 1 /* TreeVisibility.Visible */ : 0 /* TreeVisibility.Hidden */, revealed, treeListElementsToInsert, onDidCreateNode));\n        const lastIndex = location[location.length - 1];\n        // figure out what's the visible child start index right before the\n        // splice point\n        let visibleChildStartIndex = 0;\n        for (let i = lastIndex; i >= 0 && i < parentNode.children.length; i--) {\n            const child = parentNode.children[i];\n            if (child.visible) {\n                visibleChildStartIndex = child.visibleChildIndex;\n                break;\n            }\n        }\n        const nodesToInsert = [];\n        let insertedVisibleChildrenCount = 0;\n        let renderNodeCount = 0;\n        for (const child of nodesToInsertIterator) {\n            nodesToInsert.push(child);\n            renderNodeCount += child.renderNodeCount;\n            if (child.visible) {\n                child.visibleChildIndex = visibleChildStartIndex + insertedVisibleChildrenCount++;\n            }\n        }\n        const deletedNodes = splice(parentNode.children, lastIndex, deleteCount, nodesToInsert);\n        if (!diffIdentityProvider) {\n            parentNode.lastDiffIds = undefined;\n        }\n        else if (parentNode.lastDiffIds) {\n            splice(parentNode.lastDiffIds, lastIndex, deleteCount, nodesToInsert.map(n => diffIdentityProvider.getId(n.element).toString()));\n        }\n        else {\n            parentNode.lastDiffIds = parentNode.children.map(n => diffIdentityProvider.getId(n.element).toString());\n        }\n        // figure out what is the count of deleted visible children\n        let deletedVisibleChildrenCount = 0;\n        for (const child of deletedNodes) {\n            if (child.visible) {\n                deletedVisibleChildrenCount++;\n            }\n        }\n        // and adjust for all visible children after the splice point\n        if (deletedVisibleChildrenCount !== 0) {\n            for (let i = lastIndex + nodesToInsert.length; i < parentNode.children.length; i++) {\n                const child = parentNode.children[i];\n                if (child.visible) {\n                    child.visibleChildIndex -= deletedVisibleChildrenCount;\n                }\n            }\n        }\n        // update parent's visible children count\n        parentNode.visibleChildrenCount += insertedVisibleChildrenCount - deletedVisibleChildrenCount;\n        if (revealed && visible) {\n            const visibleDeleteCount = deletedNodes.reduce((r, node) => r + (node.visible ? node.renderNodeCount : 0), 0);\n            this._updateAncestorsRenderNodeCount(parentNode, renderNodeCount - visibleDeleteCount);\n            this.list.splice(listIndex, visibleDeleteCount, treeListElementsToInsert);\n        }\n        if (deletedNodes.length > 0 && onDidDeleteNode) {\n            const visit = (node) => {\n                onDidDeleteNode(node);\n                node.children.forEach(visit);\n            };\n            deletedNodes.forEach(visit);\n        }\n        this._onDidSplice.fire({ insertedNodes: nodesToInsert, deletedNodes });\n        let node = parentNode;\n        while (node) {\n            if (node.visibility === 2 /* TreeVisibility.Recurse */) {\n                // delayed to avoid excessive refiltering, see #135941\n                this.refilterDelayer.trigger(() => this.refilter());\n                break;\n            }\n            node = node.parent;\n        }\n    }\n    rerender(location) {\n        if (location.length === 0) {\n            throw new TreeError(this.user, 'Invalid tree location');\n        }\n        const { node, listIndex, revealed } = this.getTreeNodeWithListIndex(location);\n        if (node.visible && revealed) {\n            this.list.splice(listIndex, 1, [node]);\n        }\n    }\n    has(location) {\n        return this.hasTreeNode(location);\n    }\n    getListIndex(location) {\n        const { listIndex, visible, revealed } = this.getTreeNodeWithListIndex(location);\n        return visible && revealed ? listIndex : -1;\n    }\n    getListRenderCount(location) {\n        return this.getTreeNode(location).renderNodeCount;\n    }\n    isCollapsible(location) {\n        return this.getTreeNode(location).collapsible;\n    }\n    setCollapsible(location, collapsible) {\n        const node = this.getTreeNode(location);\n        if (typeof collapsible === 'undefined') {\n            collapsible = !node.collapsible;\n        }\n        const update = { collapsible };\n        return this.eventBufferer.bufferEvents(() => this._setCollapseState(location, update));\n    }\n    isCollapsed(location) {\n        return this.getTreeNode(location).collapsed;\n    }\n    setCollapsed(location, collapsed, recursive) {\n        const node = this.getTreeNode(location);\n        if (typeof collapsed === 'undefined') {\n            collapsed = !node.collapsed;\n        }\n        const update = { collapsed, recursive: recursive || false };\n        return this.eventBufferer.bufferEvents(() => this._setCollapseState(location, update));\n    }\n    _setCollapseState(location, update) {\n        const { node, listIndex, revealed } = this.getTreeNodeWithListIndex(location);\n        const result = this._setListNodeCollapseState(node, listIndex, revealed, update);\n        if (node !== this.root && this.autoExpandSingleChildren && result && !isCollapsibleStateUpdate(update) && node.collapsible && !node.collapsed && !update.recursive) {\n            let onlyVisibleChildIndex = -1;\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                if (child.visible) {\n                    if (onlyVisibleChildIndex > -1) {\n                        onlyVisibleChildIndex = -1;\n                        break;\n                    }\n                    else {\n                        onlyVisibleChildIndex = i;\n                    }\n                }\n            }\n            if (onlyVisibleChildIndex > -1) {\n                this._setCollapseState([...location, onlyVisibleChildIndex], update);\n            }\n        }\n        return result;\n    }\n    _setListNodeCollapseState(node, listIndex, revealed, update) {\n        const result = this._setNodeCollapseState(node, update, false);\n        if (!revealed || !node.visible || !result) {\n            return result;\n        }\n        const previousRenderNodeCount = node.renderNodeCount;\n        const toInsert = this.updateNodeAfterCollapseChange(node);\n        const deleteCount = previousRenderNodeCount - (listIndex === -1 ? 0 : 1);\n        this.list.splice(listIndex + 1, deleteCount, toInsert.slice(1));\n        return result;\n    }\n    _setNodeCollapseState(node, update, deep) {\n        let result;\n        if (node === this.root) {\n            result = false;\n        }\n        else {\n            if (isCollapsibleStateUpdate(update)) {\n                result = node.collapsible !== update.collapsible;\n                node.collapsible = update.collapsible;\n            }\n            else if (!node.collapsible) {\n                result = false;\n            }\n            else {\n                result = node.collapsed !== update.collapsed;\n                node.collapsed = update.collapsed;\n            }\n            if (result) {\n                this._onDidChangeCollapseState.fire({ node, deep });\n            }\n        }\n        if (!isCollapsibleStateUpdate(update) && update.recursive) {\n            for (const child of node.children) {\n                result = this._setNodeCollapseState(child, update, true) || result;\n            }\n        }\n        return result;\n    }\n    expandTo(location) {\n        this.eventBufferer.bufferEvents(() => {\n            let node = this.getTreeNode(location);\n            while (node.parent) {\n                node = node.parent;\n                location = location.slice(0, location.length - 1);\n                if (node.collapsed) {\n                    this._setCollapseState(location, { collapsed: false, recursive: false });\n                }\n            }\n        });\n    }\n    refilter() {\n        const previousRenderNodeCount = this.root.renderNodeCount;\n        const toInsert = this.updateNodeAfterFilterChange(this.root);\n        this.list.splice(0, previousRenderNodeCount, toInsert);\n        this.refilterDelayer.cancel();\n    }\n    createTreeNode(treeElement, parent, parentVisibility, revealed, treeListElements, onDidCreateNode) {\n        const node = {\n            parent,\n            element: treeElement.element,\n            children: [],\n            depth: parent.depth + 1,\n            visibleChildrenCount: 0,\n            visibleChildIndex: -1,\n            collapsible: typeof treeElement.collapsible === 'boolean' ? treeElement.collapsible : (typeof treeElement.collapsed !== 'undefined'),\n            collapsed: typeof treeElement.collapsed === 'undefined' ? this.collapseByDefault : treeElement.collapsed,\n            renderNodeCount: 1,\n            visibility: 1 /* TreeVisibility.Visible */,\n            visible: true,\n            filterData: undefined\n        };\n        const visibility = this._filterNode(node, parentVisibility);\n        node.visibility = visibility;\n        if (revealed) {\n            treeListElements.push(node);\n        }\n        const childElements = treeElement.children || Iterable.empty();\n        const childRevealed = revealed && visibility !== 0 /* TreeVisibility.Hidden */ && !node.collapsed;\n        let visibleChildrenCount = 0;\n        let renderNodeCount = 1;\n        for (const el of childElements) {\n            const child = this.createTreeNode(el, node, visibility, childRevealed, treeListElements, onDidCreateNode);\n            node.children.push(child);\n            renderNodeCount += child.renderNodeCount;\n            if (child.visible) {\n                child.visibleChildIndex = visibleChildrenCount++;\n            }\n        }\n        if (!this.allowNonCollapsibleParents) {\n            node.collapsible = node.collapsible || node.children.length > 0;\n        }\n        node.visibleChildrenCount = visibleChildrenCount;\n        node.visible = visibility === 2 /* TreeVisibility.Recurse */ ? visibleChildrenCount > 0 : (visibility === 1 /* TreeVisibility.Visible */);\n        if (!node.visible) {\n            node.renderNodeCount = 0;\n            if (revealed) {\n                treeListElements.pop();\n            }\n        }\n        else if (!node.collapsed) {\n            node.renderNodeCount = renderNodeCount;\n        }\n        onDidCreateNode?.(node);\n        return node;\n    }\n    updateNodeAfterCollapseChange(node) {\n        const previousRenderNodeCount = node.renderNodeCount;\n        const result = [];\n        this._updateNodeAfterCollapseChange(node, result);\n        this._updateAncestorsRenderNodeCount(node.parent, result.length - previousRenderNodeCount);\n        return result;\n    }\n    _updateNodeAfterCollapseChange(node, result) {\n        if (node.visible === false) {\n            return 0;\n        }\n        result.push(node);\n        node.renderNodeCount = 1;\n        if (!node.collapsed) {\n            for (const child of node.children) {\n                node.renderNodeCount += this._updateNodeAfterCollapseChange(child, result);\n            }\n        }\n        this._onDidChangeRenderNodeCount.fire(node);\n        return node.renderNodeCount;\n    }\n    updateNodeAfterFilterChange(node) {\n        const previousRenderNodeCount = node.renderNodeCount;\n        const result = [];\n        this._updateNodeAfterFilterChange(node, node.visible ? 1 /* TreeVisibility.Visible */ : 0 /* TreeVisibility.Hidden */, result);\n        this._updateAncestorsRenderNodeCount(node.parent, result.length - previousRenderNodeCount);\n        return result;\n    }\n    _updateNodeAfterFilterChange(node, parentVisibility, result, revealed = true) {\n        let visibility;\n        if (node !== this.root) {\n            visibility = this._filterNode(node, parentVisibility);\n            if (visibility === 0 /* TreeVisibility.Hidden */) {\n                node.visible = false;\n                node.renderNodeCount = 0;\n                return false;\n            }\n            if (revealed) {\n                result.push(node);\n            }\n        }\n        const resultStartLength = result.length;\n        node.renderNodeCount = node === this.root ? 0 : 1;\n        let hasVisibleDescendants = false;\n        if (!node.collapsed || visibility !== 0 /* TreeVisibility.Hidden */) {\n            let visibleChildIndex = 0;\n            for (const child of node.children) {\n                hasVisibleDescendants = this._updateNodeAfterFilterChange(child, visibility, result, revealed && !node.collapsed) || hasVisibleDescendants;\n                if (child.visible) {\n                    child.visibleChildIndex = visibleChildIndex++;\n                }\n            }\n            node.visibleChildrenCount = visibleChildIndex;\n        }\n        else {\n            node.visibleChildrenCount = 0;\n        }\n        if (node !== this.root) {\n            node.visible = visibility === 2 /* TreeVisibility.Recurse */ ? hasVisibleDescendants : (visibility === 1 /* TreeVisibility.Visible */);\n            node.visibility = visibility;\n        }\n        if (!node.visible) {\n            node.renderNodeCount = 0;\n            if (revealed) {\n                result.pop();\n            }\n        }\n        else if (!node.collapsed) {\n            node.renderNodeCount += result.length - resultStartLength;\n        }\n        this._onDidChangeRenderNodeCount.fire(node);\n        return node.visible;\n    }\n    _updateAncestorsRenderNodeCount(node, diff) {\n        if (diff === 0) {\n            return;\n        }\n        while (node) {\n            node.renderNodeCount += diff;\n            this._onDidChangeRenderNodeCount.fire(node);\n            node = node.parent;\n        }\n    }\n    _filterNode(node, parentVisibility) {\n        const result = this.filter ? this.filter.filter(node.element, parentVisibility) : 1 /* TreeVisibility.Visible */;\n        if (typeof result === 'boolean') {\n            node.filterData = undefined;\n            return result ? 1 /* TreeVisibility.Visible */ : 0 /* TreeVisibility.Hidden */;\n        }\n        else if (isFilterResult(result)) {\n            node.filterData = result.data;\n            return getVisibleState(result.visibility);\n        }\n        else {\n            node.filterData = undefined;\n            return getVisibleState(result);\n        }\n    }\n    // cheap\n    hasTreeNode(location, node = this.root) {\n        if (!location || location.length === 0) {\n            return true;\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index > node.children.length) {\n            return false;\n        }\n        return this.hasTreeNode(rest, node.children[index]);\n    }\n    // cheap\n    getTreeNode(location, node = this.root) {\n        if (!location || location.length === 0) {\n            return node;\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index > node.children.length) {\n            throw new TreeError(this.user, 'Invalid tree location');\n        }\n        return this.getTreeNode(rest, node.children[index]);\n    }\n    // expensive\n    getTreeNodeWithListIndex(location) {\n        if (location.length === 0) {\n            return { node: this.root, listIndex: -1, revealed: true, visible: false };\n        }\n        const { parentNode, listIndex, revealed, visible } = this.getParentNodeWithListIndex(location);\n        const index = location[location.length - 1];\n        if (index < 0 || index > parentNode.children.length) {\n            throw new TreeError(this.user, 'Invalid tree location');\n        }\n        const node = parentNode.children[index];\n        return { node, listIndex, revealed, visible: visible && node.visible };\n    }\n    getParentNodeWithListIndex(location, node = this.root, listIndex = 0, revealed = true, visible = true) {\n        const [index, ...rest] = location;\n        if (index < 0 || index > node.children.length) {\n            throw new TreeError(this.user, 'Invalid tree location');\n        }\n        // TODO@joao perf!\n        for (let i = 0; i < index; i++) {\n            listIndex += node.children[i].renderNodeCount;\n        }\n        revealed = revealed && !node.collapsed;\n        visible = visible && node.visible;\n        if (rest.length === 0) {\n            return { parentNode: node, listIndex, revealed, visible };\n        }\n        return this.getParentNodeWithListIndex(rest, node.children[index], listIndex + 1, revealed, visible);\n    }\n    getNode(location = []) {\n        return this.getTreeNode(location);\n    }\n    // TODO@joao perf!\n    getNodeLocation(node) {\n        const location = [];\n        let indexTreeNode = node; // typing woes\n        while (indexTreeNode.parent) {\n            location.push(indexTreeNode.parent.children.indexOf(indexTreeNode));\n            indexTreeNode = indexTreeNode.parent;\n        }\n        return location.reverse();\n    }\n    getParentNodeLocation(location) {\n        if (location.length === 0) {\n            return undefined;\n        }\n        else if (location.length === 1) {\n            return [];\n        }\n        else {\n            return tail2(location)[0];\n        }\n    }\n    getFirstElementChild(location) {\n        const node = this.getTreeNode(location);\n        if (node.children.length === 0) {\n            return undefined;\n        }\n        return node.children[0].element;\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 648, "column": 0}, "map": {"version":3,"sources":["file:///Users/jloka/Documents/repos/personal/shared-workshop/node_modules/.pnpm/monaco-editor%400.52.2/node_modules/monaco-editor/esm/vs/base/browser/ui/tree/abstractTree.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $, append, clearNode, createStyleSheet, getWindow, h, hasParentWithClass, asCssValueWithDefault, isKeyboardEvent, addDisposableListener } from '../../dom.js';\nimport { DomEmitter } from '../../event.js';\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\nimport { ActionBar } from '../actionbar/actionbar.js';\nimport { FindInput } from '../findinput/findInput.js';\nimport { unthemedInboxStyles } from '../inputbox/inputBox.js';\nimport { ElementsDragAndDropData } from '../list/listView.js';\nimport { isActionItem, isButton, isInputElement, isMonacoCustomToggle, isMonacoEditor, isStickyScrollContainer, isStickyScrollElement, List, MouseController } from '../list/listWidget.js';\nimport { Toggle, unthemedToggleStyles } from '../toggle/toggle.js';\nimport { getVisibleState, isFilterResult } from './indexTreeModel.js';\nimport { TreeMouseEventTarget } from './tree.js';\nimport { Action } from '../../../common/actions.js';\nimport { distinct, equals, range } from '../../../common/arrays.js';\nimport { Delayer, disposableTimeout, timeout } from '../../../common/async.js';\nimport { Codicon } from '../../../common/codicons.js';\nimport { ThemeIcon } from '../../../common/themables.js';\nimport { SetMap } from '../../../common/map.js';\nimport { Emitter, Event, EventBufferer, Relay } from '../../../common/event.js';\nimport { fuzzyScore, FuzzyScore } from '../../../common/filters.js';\nimport { Disposable, DisposableStore, dispose, toDisposable } from '../../../common/lifecycle.js';\nimport { clamp } from '../../../common/numbers.js';\nimport { isNumber } from '../../../common/types.js';\nimport './media/tree.css';\nimport { localize } from '../../../../nls.js';\nimport { createInstantHoverDelegate, getDefaultHoverDelegate } from '../hover/hoverDelegateFactory.js';\nimport { autorun, constObservable } from '../../../common/observable.js';\nimport { alert } from '../aria/aria.js';\nclass TreeElementsDragAndDropData extends ElementsDragAndDropData {\n    constructor(data) {\n        super(data.elements.map(node => node.element));\n        this.data = data;\n    }\n}\nfunction asTreeDragAndDropData(data) {\n    if (data instanceof ElementsDragAndDropData) {\n        return new TreeElementsDragAndDropData(data);\n    }\n    return data;\n}\nclass TreeNodeListDragAndDrop {\n    constructor(modelProvider, dnd) {\n        this.modelProvider = modelProvider;\n        this.dnd = dnd;\n        this.autoExpandDisposable = Disposable.None;\n        this.disposables = new DisposableStore();\n    }\n    getDragURI(node) {\n        return this.dnd.getDragURI(node.element);\n    }\n    getDragLabel(nodes, originalEvent) {\n        if (this.dnd.getDragLabel) {\n            return this.dnd.getDragLabel(nodes.map(node => node.element), originalEvent);\n        }\n        return undefined;\n    }\n    onDragStart(data, originalEvent) {\n        this.dnd.onDragStart?.(asTreeDragAndDropData(data), originalEvent);\n    }\n    onDragOver(data, targetNode, targetIndex, targetSector, originalEvent, raw = true) {\n        const result = this.dnd.onDragOver(asTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, targetSector, originalEvent);\n        const didChangeAutoExpandNode = this.autoExpandNode !== targetNode;\n        if (didChangeAutoExpandNode) {\n            this.autoExpandDisposable.dispose();\n            this.autoExpandNode = targetNode;\n        }\n        if (typeof targetNode === 'undefined') {\n            return result;\n        }\n        if (didChangeAutoExpandNode && typeof result !== 'boolean' && result.autoExpand) {\n            this.autoExpandDisposable = disposableTimeout(() => {\n                const model = this.modelProvider();\n                const ref = model.getNodeLocation(targetNode);\n                if (model.isCollapsed(ref)) {\n                    model.setCollapsed(ref, false);\n                }\n                this.autoExpandNode = undefined;\n            }, 500, this.disposables);\n        }\n        if (typeof result === 'boolean' || !result.accept || typeof result.bubble === 'undefined' || result.feedback) {\n            if (!raw) {\n                const accept = typeof result === 'boolean' ? result : result.accept;\n                const effect = typeof result === 'boolean' ? undefined : result.effect;\n                return { accept, effect, feedback: [targetIndex] };\n            }\n            return result;\n        }\n        if (result.bubble === 1 /* TreeDragOverBubble.Up */) {\n            const model = this.modelProvider();\n            const ref = model.getNodeLocation(targetNode);\n            const parentRef = model.getParentNodeLocation(ref);\n            const parentNode = model.getNode(parentRef);\n            const parentIndex = parentRef && model.getListIndex(parentRef);\n            return this.onDragOver(data, parentNode, parentIndex, targetSector, originalEvent, false);\n        }\n        const model = this.modelProvider();\n        const ref = model.getNodeLocation(targetNode);\n        const start = model.getListIndex(ref);\n        const length = model.getListRenderCount(ref);\n        return { ...result, feedback: range(start, start + length) };\n    }\n    drop(data, targetNode, targetIndex, targetSector, originalEvent) {\n        this.autoExpandDisposable.dispose();\n        this.autoExpandNode = undefined;\n        this.dnd.drop(asTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, targetSector, originalEvent);\n    }\n    onDragEnd(originalEvent) {\n        this.dnd.onDragEnd?.(originalEvent);\n    }\n    dispose() {\n        this.disposables.dispose();\n        this.dnd.dispose();\n    }\n}\nfunction asListOptions(modelProvider, options) {\n    return options && {\n        ...options,\n        identityProvider: options.identityProvider && {\n            getId(el) {\n                return options.identityProvider.getId(el.element);\n            }\n        },\n        dnd: options.dnd && new TreeNodeListDragAndDrop(modelProvider, options.dnd),\n        multipleSelectionController: options.multipleSelectionController && {\n            isSelectionSingleChangeEvent(e) {\n                return options.multipleSelectionController.isSelectionSingleChangeEvent({ ...e, element: e.element });\n            },\n            isSelectionRangeChangeEvent(e) {\n                return options.multipleSelectionController.isSelectionRangeChangeEvent({ ...e, element: e.element });\n            }\n        },\n        accessibilityProvider: options.accessibilityProvider && {\n            ...options.accessibilityProvider,\n            getSetSize(node) {\n                const model = modelProvider();\n                const ref = model.getNodeLocation(node);\n                const parentRef = model.getParentNodeLocation(ref);\n                const parentNode = model.getNode(parentRef);\n                return parentNode.visibleChildrenCount;\n            },\n            getPosInSet(node) {\n                return node.visibleChildIndex + 1;\n            },\n            isChecked: options.accessibilityProvider && options.accessibilityProvider.isChecked ? (node) => {\n                return options.accessibilityProvider.isChecked(node.element);\n            } : undefined,\n            getRole: options.accessibilityProvider && options.accessibilityProvider.getRole ? (node) => {\n                return options.accessibilityProvider.getRole(node.element);\n            } : () => 'treeitem',\n            getAriaLabel(e) {\n                return options.accessibilityProvider.getAriaLabel(e.element);\n            },\n            getWidgetAriaLabel() {\n                return options.accessibilityProvider.getWidgetAriaLabel();\n            },\n            getWidgetRole: options.accessibilityProvider && options.accessibilityProvider.getWidgetRole ? () => options.accessibilityProvider.getWidgetRole() : () => 'tree',\n            getAriaLevel: options.accessibilityProvider && options.accessibilityProvider.getAriaLevel ? (node) => options.accessibilityProvider.getAriaLevel(node.element) : (node) => {\n                return node.depth;\n            },\n            getActiveDescendantId: options.accessibilityProvider.getActiveDescendantId && (node => {\n                return options.accessibilityProvider.getActiveDescendantId(node.element);\n            })\n        },\n        keyboardNavigationLabelProvider: options.keyboardNavigationLabelProvider && {\n            ...options.keyboardNavigationLabelProvider,\n            getKeyboardNavigationLabel(node) {\n                return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(node.element);\n            }\n        }\n    };\n}\nexport class ComposedTreeDelegate {\n    constructor(delegate) {\n        this.delegate = delegate;\n    }\n    getHeight(element) {\n        return this.delegate.getHeight(element.element);\n    }\n    getTemplateId(element) {\n        return this.delegate.getTemplateId(element.element);\n    }\n    hasDynamicHeight(element) {\n        return !!this.delegate.hasDynamicHeight && this.delegate.hasDynamicHeight(element.element);\n    }\n    setDynamicHeight(element, height) {\n        this.delegate.setDynamicHeight?.(element.element, height);\n    }\n}\nexport var RenderIndentGuides;\n(function (RenderIndentGuides) {\n    RenderIndentGuides[\"None\"] = \"none\";\n    RenderIndentGuides[\"OnHover\"] = \"onHover\";\n    RenderIndentGuides[\"Always\"] = \"always\";\n})(RenderIndentGuides || (RenderIndentGuides = {}));\nclass EventCollection {\n    get elements() {\n        return this._elements;\n    }\n    constructor(onDidChange, _elements = []) {\n        this._elements = _elements;\n        this.disposables = new DisposableStore();\n        this.onDidChange = Event.forEach(onDidChange, elements => this._elements = elements, this.disposables);\n    }\n    dispose() {\n        this.disposables.dispose();\n    }\n}\nexport class TreeRenderer {\n    static { this.DefaultIndent = 8; }\n    constructor(renderer, modelProvider, onDidChangeCollapseState, activeNodes, renderedIndentGuides, options = {}) {\n        this.renderer = renderer;\n        this.modelProvider = modelProvider;\n        this.activeNodes = activeNodes;\n        this.renderedIndentGuides = renderedIndentGuides;\n        this.renderedElements = new Map();\n        this.renderedNodes = new Map();\n        this.indent = TreeRenderer.DefaultIndent;\n        this.hideTwistiesOfChildlessElements = false;\n        this.shouldRenderIndentGuides = false;\n        this.activeIndentNodes = new Set();\n        this.indentGuidesDisposable = Disposable.None;\n        this.disposables = new DisposableStore();\n        this.templateId = renderer.templateId;\n        this.updateOptions(options);\n        Event.map(onDidChangeCollapseState, e => e.node)(this.onDidChangeNodeTwistieState, this, this.disposables);\n        renderer.onDidChangeTwistieState?.(this.onDidChangeTwistieState, this, this.disposables);\n    }\n    updateOptions(options = {}) {\n        if (typeof options.indent !== 'undefined') {\n            const indent = clamp(options.indent, 0, 40);\n            if (indent !== this.indent) {\n                this.indent = indent;\n                for (const [node, templateData] of this.renderedNodes) {\n                    this.renderTreeElement(node, templateData);\n                }\n            }\n        }\n        if (typeof options.renderIndentGuides !== 'undefined') {\n            const shouldRenderIndentGuides = options.renderIndentGuides !== RenderIndentGuides.None;\n            if (shouldRenderIndentGuides !== this.shouldRenderIndentGuides) {\n                this.shouldRenderIndentGuides = shouldRenderIndentGuides;\n                for (const [node, templateData] of this.renderedNodes) {\n                    this._renderIndentGuides(node, templateData);\n                }\n                this.indentGuidesDisposable.dispose();\n                if (shouldRenderIndentGuides) {\n                    const disposables = new DisposableStore();\n                    this.activeNodes.onDidChange(this._onDidChangeActiveNodes, this, disposables);\n                    this.indentGuidesDisposable = disposables;\n                    this._onDidChangeActiveNodes(this.activeNodes.elements);\n                }\n            }\n        }\n        if (typeof options.hideTwistiesOfChildlessElements !== 'undefined') {\n            this.hideTwistiesOfChildlessElements = options.hideTwistiesOfChildlessElements;\n        }\n    }\n    renderTemplate(container) {\n        const el = append(container, $('.monaco-tl-row'));\n        const indent = append(el, $('.monaco-tl-indent'));\n        const twistie = append(el, $('.monaco-tl-twistie'));\n        const contents = append(el, $('.monaco-tl-contents'));\n        const templateData = this.renderer.renderTemplate(contents);\n        return { container, indent, twistie, indentGuidesDisposable: Disposable.None, templateData };\n    }\n    renderElement(node, index, templateData, height) {\n        this.renderedNodes.set(node, templateData);\n        this.renderedElements.set(node.element, node);\n        this.renderTreeElement(node, templateData);\n        this.renderer.renderElement(node, index, templateData.templateData, height);\n    }\n    disposeElement(node, index, templateData, height) {\n        templateData.indentGuidesDisposable.dispose();\n        this.renderer.disposeElement?.(node, index, templateData.templateData, height);\n        if (typeof height === 'number') {\n            this.renderedNodes.delete(node);\n            this.renderedElements.delete(node.element);\n        }\n    }\n    disposeTemplate(templateData) {\n        this.renderer.disposeTemplate(templateData.templateData);\n    }\n    onDidChangeTwistieState(element) {\n        const node = this.renderedElements.get(element);\n        if (!node) {\n            return;\n        }\n        this.onDidChangeNodeTwistieState(node);\n    }\n    onDidChangeNodeTwistieState(node) {\n        const templateData = this.renderedNodes.get(node);\n        if (!templateData) {\n            return;\n        }\n        this._onDidChangeActiveNodes(this.activeNodes.elements);\n        this.renderTreeElement(node, templateData);\n    }\n    renderTreeElement(node, templateData) {\n        const indent = TreeRenderer.DefaultIndent + (node.depth - 1) * this.indent;\n        templateData.twistie.style.paddingLeft = `${indent}px`;\n        templateData.indent.style.width = `${indent + this.indent - 16}px`;\n        if (node.collapsible) {\n            templateData.container.setAttribute('aria-expanded', String(!node.collapsed));\n        }\n        else {\n            templateData.container.removeAttribute('aria-expanded');\n        }\n        templateData.twistie.classList.remove(...ThemeIcon.asClassNameArray(Codicon.treeItemExpanded));\n        let twistieRendered = false;\n        if (this.renderer.renderTwistie) {\n            twistieRendered = this.renderer.renderTwistie(node.element, templateData.twistie);\n        }\n        if (node.collapsible && (!this.hideTwistiesOfChildlessElements || node.visibleChildrenCount > 0)) {\n            if (!twistieRendered) {\n                templateData.twistie.classList.add(...ThemeIcon.asClassNameArray(Codicon.treeItemExpanded));\n            }\n            templateData.twistie.classList.add('collapsible');\n            templateData.twistie.classList.toggle('collapsed', node.collapsed);\n        }\n        else {\n            templateData.twistie.classList.remove('collapsible', 'collapsed');\n        }\n        this._renderIndentGuides(node, templateData);\n    }\n    _renderIndentGuides(node, templateData) {\n        clearNode(templateData.indent);\n        templateData.indentGuidesDisposable.dispose();\n        if (!this.shouldRenderIndentGuides) {\n            return;\n        }\n        const disposableStore = new DisposableStore();\n        const model = this.modelProvider();\n        while (true) {\n            const ref = model.getNodeLocation(node);\n            const parentRef = model.getParentNodeLocation(ref);\n            if (!parentRef) {\n                break;\n            }\n            const parent = model.getNode(parentRef);\n            const guide = $('.indent-guide', { style: `width: ${this.indent}px` });\n            if (this.activeIndentNodes.has(parent)) {\n                guide.classList.add('active');\n            }\n            if (templateData.indent.childElementCount === 0) {\n                templateData.indent.appendChild(guide);\n            }\n            else {\n                templateData.indent.insertBefore(guide, templateData.indent.firstElementChild);\n            }\n            this.renderedIndentGuides.add(parent, guide);\n            disposableStore.add(toDisposable(() => this.renderedIndentGuides.delete(parent, guide)));\n            node = parent;\n        }\n        templateData.indentGuidesDisposable = disposableStore;\n    }\n    _onDidChangeActiveNodes(nodes) {\n        if (!this.shouldRenderIndentGuides) {\n            return;\n        }\n        const set = new Set();\n        const model = this.modelProvider();\n        nodes.forEach(node => {\n            const ref = model.getNodeLocation(node);\n            try {\n                const parentRef = model.getParentNodeLocation(ref);\n                if (node.collapsible && node.children.length > 0 && !node.collapsed) {\n                    set.add(node);\n                }\n                else if (parentRef) {\n                    set.add(model.getNode(parentRef));\n                }\n            }\n            catch {\n                // noop\n            }\n        });\n        this.activeIndentNodes.forEach(node => {\n            if (!set.has(node)) {\n                this.renderedIndentGuides.forEach(node, line => line.classList.remove('active'));\n            }\n        });\n        set.forEach(node => {\n            if (!this.activeIndentNodes.has(node)) {\n                this.renderedIndentGuides.forEach(node, line => line.classList.add('active'));\n            }\n        });\n        this.activeIndentNodes = set;\n    }\n    dispose() {\n        this.renderedNodes.clear();\n        this.renderedElements.clear();\n        this.indentGuidesDisposable.dispose();\n        dispose(this.disposables);\n    }\n}\nclass FindFilter {\n    get totalCount() { return this._totalCount; }\n    get matchCount() { return this._matchCount; }\n    constructor(tree, keyboardNavigationLabelProvider, _filter) {\n        this.tree = tree;\n        this.keyboardNavigationLabelProvider = keyboardNavigationLabelProvider;\n        this._filter = _filter;\n        this._totalCount = 0;\n        this._matchCount = 0;\n        this._pattern = '';\n        this._lowercasePattern = '';\n        this.disposables = new DisposableStore();\n        tree.onWillRefilter(this.reset, this, this.disposables);\n    }\n    filter(element, parentVisibility) {\n        let visibility = 1 /* TreeVisibility.Visible */;\n        if (this._filter) {\n            const result = this._filter.filter(element, parentVisibility);\n            if (typeof result === 'boolean') {\n                visibility = result ? 1 /* TreeVisibility.Visible */ : 0 /* TreeVisibility.Hidden */;\n            }\n            else if (isFilterResult(result)) {\n                visibility = getVisibleState(result.visibility);\n            }\n            else {\n                visibility = result;\n            }\n            if (visibility === 0 /* TreeVisibility.Hidden */) {\n                return false;\n            }\n        }\n        this._totalCount++;\n        if (!this._pattern) {\n            this._matchCount++;\n            return { data: FuzzyScore.Default, visibility };\n        }\n        const label = this.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(element);\n        const labels = Array.isArray(label) ? label : [label];\n        for (const l of labels) {\n            const labelStr = l && l.toString();\n            if (typeof labelStr === 'undefined') {\n                return { data: FuzzyScore.Default, visibility };\n            }\n            let score;\n            if (this.tree.findMatchType === TreeFindMatchType.Contiguous) {\n                const index = labelStr.toLowerCase().indexOf(this._lowercasePattern);\n                if (index > -1) {\n                    score = [Number.MAX_SAFE_INTEGER, 0];\n                    for (let i = this._lowercasePattern.length; i > 0; i--) {\n                        score.push(index + i - 1);\n                    }\n                }\n            }\n            else {\n                score = fuzzyScore(this._pattern, this._lowercasePattern, 0, labelStr, labelStr.toLowerCase(), 0, { firstMatchCanBeWeak: true, boostFullMatch: true });\n            }\n            if (score) {\n                this._matchCount++;\n                return labels.length === 1 ?\n                    { data: score, visibility } :\n                    { data: { label: labelStr, score: score }, visibility };\n            }\n        }\n        if (this.tree.findMode === TreeFindMode.Filter) {\n            if (typeof this.tree.options.defaultFindVisibility === 'number') {\n                return this.tree.options.defaultFindVisibility;\n            }\n            else if (this.tree.options.defaultFindVisibility) {\n                return this.tree.options.defaultFindVisibility(element);\n            }\n            else {\n                return 2 /* TreeVisibility.Recurse */;\n            }\n        }\n        else {\n            return { data: FuzzyScore.Default, visibility };\n        }\n    }\n    reset() {\n        this._totalCount = 0;\n        this._matchCount = 0;\n    }\n    dispose() {\n        dispose(this.disposables);\n    }\n}\nexport class ModeToggle extends Toggle {\n    constructor(opts) {\n        super({\n            icon: Codicon.listFilter,\n            title: localize('filter', \"Filter\"),\n            isChecked: opts.isChecked ?? false,\n            hoverDelegate: opts.hoverDelegate ?? getDefaultHoverDelegate('element'),\n            inputActiveOptionBorder: opts.inputActiveOptionBorder,\n            inputActiveOptionForeground: opts.inputActiveOptionForeground,\n            inputActiveOptionBackground: opts.inputActiveOptionBackground\n        });\n    }\n}\nexport class FuzzyToggle extends Toggle {\n    constructor(opts) {\n        super({\n            icon: Codicon.searchFuzzy,\n            title: localize('fuzzySearch', \"Fuzzy Match\"),\n            isChecked: opts.isChecked ?? false,\n            hoverDelegate: opts.hoverDelegate ?? getDefaultHoverDelegate('element'),\n            inputActiveOptionBorder: opts.inputActiveOptionBorder,\n            inputActiveOptionForeground: opts.inputActiveOptionForeground,\n            inputActiveOptionBackground: opts.inputActiveOptionBackground\n        });\n    }\n}\nconst unthemedFindWidgetStyles = {\n    inputBoxStyles: unthemedInboxStyles,\n    toggleStyles: unthemedToggleStyles,\n    listFilterWidgetBackground: undefined,\n    listFilterWidgetNoMatchesOutline: undefined,\n    listFilterWidgetOutline: undefined,\n    listFilterWidgetShadow: undefined\n};\nexport var TreeFindMode;\n(function (TreeFindMode) {\n    TreeFindMode[TreeFindMode[\"Highlight\"] = 0] = \"Highlight\";\n    TreeFindMode[TreeFindMode[\"Filter\"] = 1] = \"Filter\";\n})(TreeFindMode || (TreeFindMode = {}));\nexport var TreeFindMatchType;\n(function (TreeFindMatchType) {\n    TreeFindMatchType[TreeFindMatchType[\"Fuzzy\"] = 0] = \"Fuzzy\";\n    TreeFindMatchType[TreeFindMatchType[\"Contiguous\"] = 1] = \"Contiguous\";\n})(TreeFindMatchType || (TreeFindMatchType = {}));\nclass FindWidget extends Disposable {\n    set mode(mode) {\n        this.modeToggle.checked = mode === TreeFindMode.Filter;\n        this.findInput.inputBox.setPlaceHolder(mode === TreeFindMode.Filter ? localize('type to filter', \"Type to filter\") : localize('type to search', \"Type to search\"));\n    }\n    set matchType(matchType) {\n        this.matchTypeToggle.checked = matchType === TreeFindMatchType.Fuzzy;\n    }\n    constructor(container, tree, contextViewProvider, mode, matchType, options) {\n        super();\n        this.tree = tree;\n        this.elements = h('.monaco-tree-type-filter', [\n            h('.monaco-tree-type-filter-grab.codicon.codicon-debug-gripper@grab', { tabIndex: 0 }),\n            h('.monaco-tree-type-filter-input@findInput'),\n            h('.monaco-tree-type-filter-actionbar@actionbar'),\n        ]);\n        this.width = 0;\n        this.right = 0;\n        this.top = 0;\n        this._onDidDisable = new Emitter();\n        container.appendChild(this.elements.root);\n        this._register(toDisposable(() => this.elements.root.remove()));\n        const styles = options?.styles ?? unthemedFindWidgetStyles;\n        if (styles.listFilterWidgetBackground) {\n            this.elements.root.style.backgroundColor = styles.listFilterWidgetBackground;\n        }\n        if (styles.listFilterWidgetShadow) {\n            this.elements.root.style.boxShadow = `0 0 8px 2px ${styles.listFilterWidgetShadow}`;\n        }\n        const toggleHoverDelegate = this._register(createInstantHoverDelegate());\n        this.modeToggle = this._register(new ModeToggle({ ...styles.toggleStyles, isChecked: mode === TreeFindMode.Filter, hoverDelegate: toggleHoverDelegate }));\n        this.matchTypeToggle = this._register(new FuzzyToggle({ ...styles.toggleStyles, isChecked: matchType === TreeFindMatchType.Fuzzy, hoverDelegate: toggleHoverDelegate }));\n        this.onDidChangeMode = Event.map(this.modeToggle.onChange, () => this.modeToggle.checked ? TreeFindMode.Filter : TreeFindMode.Highlight, this._store);\n        this.onDidChangeMatchType = Event.map(this.matchTypeToggle.onChange, () => this.matchTypeToggle.checked ? TreeFindMatchType.Fuzzy : TreeFindMatchType.Contiguous, this._store);\n        this.findInput = this._register(new FindInput(this.elements.findInput, contextViewProvider, {\n            label: localize('type to search', \"Type to search\"),\n            additionalToggles: [this.modeToggle, this.matchTypeToggle],\n            showCommonFindToggles: false,\n            inputBoxStyles: styles.inputBoxStyles,\n            toggleStyles: styles.toggleStyles,\n            history: options?.history\n        }));\n        this.actionbar = this._register(new ActionBar(this.elements.actionbar));\n        this.mode = mode;\n        const emitter = this._register(new DomEmitter(this.findInput.inputBox.inputElement, 'keydown'));\n        const onKeyDown = Event.chain(emitter.event, $ => $.map(e => new StandardKeyboardEvent(e)));\n        this._register(onKeyDown((e) => {\n            // Using equals() so we reserve modified keys for future use\n            if (e.equals(3 /* KeyCode.Enter */)) {\n                // This is the only keyboard way to return to the tree from a history item that isn't the last one\n                e.preventDefault();\n                e.stopPropagation();\n                this.findInput.inputBox.addToHistory();\n                this.tree.domFocus();\n                return;\n            }\n            if (e.equals(18 /* KeyCode.DownArrow */)) {\n                e.preventDefault();\n                e.stopPropagation();\n                if (this.findInput.inputBox.isAtLastInHistory() || this.findInput.inputBox.isNowhereInHistory()) {\n                    // Retain original pre-history DownArrow behavior\n                    this.findInput.inputBox.addToHistory();\n                    this.tree.domFocus();\n                }\n                else {\n                    // Downward through history\n                    this.findInput.inputBox.showNextValue();\n                }\n                return;\n            }\n            if (e.equals(16 /* KeyCode.UpArrow */)) {\n                e.preventDefault();\n                e.stopPropagation();\n                // Upward through history\n                this.findInput.inputBox.showPreviousValue();\n                return;\n            }\n        }));\n        const closeAction = this._register(new Action('close', localize('close', \"Close\"), 'codicon codicon-close', true, () => this.dispose()));\n        this.actionbar.push(closeAction, { icon: true, label: false });\n        const onGrabMouseDown = this._register(new DomEmitter(this.elements.grab, 'mousedown'));\n        this._register(onGrabMouseDown.event(e => {\n            const disposables = new DisposableStore();\n            const onWindowMouseMove = disposables.add(new DomEmitter(getWindow(e), 'mousemove'));\n            const onWindowMouseUp = disposables.add(new DomEmitter(getWindow(e), 'mouseup'));\n            const startRight = this.right;\n            const startX = e.pageX;\n            const startTop = this.top;\n            const startY = e.pageY;\n            this.elements.grab.classList.add('grabbing');\n            const transition = this.elements.root.style.transition;\n            this.elements.root.style.transition = 'unset';\n            const update = (e) => {\n                const deltaX = e.pageX - startX;\n                this.right = startRight - deltaX;\n                const deltaY = e.pageY - startY;\n                this.top = startTop + deltaY;\n                this.layout();\n            };\n            disposables.add(onWindowMouseMove.event(update));\n            disposables.add(onWindowMouseUp.event(e => {\n                update(e);\n                this.elements.grab.classList.remove('grabbing');\n                this.elements.root.style.transition = transition;\n                disposables.dispose();\n            }));\n        }));\n        const onGrabKeyDown = Event.chain(this._register(new DomEmitter(this.elements.grab, 'keydown')).event, $ => $.map(e => new StandardKeyboardEvent(e)));\n        this._register(onGrabKeyDown((e) => {\n            let right;\n            let top;\n            if (e.keyCode === 15 /* KeyCode.LeftArrow */) {\n                right = Number.POSITIVE_INFINITY;\n            }\n            else if (e.keyCode === 17 /* KeyCode.RightArrow */) {\n                right = 0;\n            }\n            else if (e.keyCode === 10 /* KeyCode.Space */) {\n                right = this.right === 0 ? Number.POSITIVE_INFINITY : 0;\n            }\n            if (e.keyCode === 16 /* KeyCode.UpArrow */) {\n                top = 0;\n            }\n            else if (e.keyCode === 18 /* KeyCode.DownArrow */) {\n                top = Number.POSITIVE_INFINITY;\n            }\n            if (right !== undefined) {\n                e.preventDefault();\n                e.stopPropagation();\n                this.right = right;\n                this.layout();\n            }\n            if (top !== undefined) {\n                e.preventDefault();\n                e.stopPropagation();\n                this.top = top;\n                const transition = this.elements.root.style.transition;\n                this.elements.root.style.transition = 'unset';\n                this.layout();\n                setTimeout(() => {\n                    this.elements.root.style.transition = transition;\n                }, 0);\n            }\n        }));\n        this.onDidChangeValue = this.findInput.onDidChange;\n    }\n    layout(width = this.width) {\n        this.width = width;\n        this.right = clamp(this.right, 0, Math.max(0, width - 212));\n        this.elements.root.style.right = `${this.right}px`;\n        this.top = clamp(this.top, 0, 24);\n        this.elements.root.style.top = `${this.top}px`;\n    }\n    showMessage(message) {\n        this.findInput.showMessage(message);\n    }\n    clearMessage() {\n        this.findInput.clearMessage();\n    }\n    async dispose() {\n        this._onDidDisable.fire();\n        this.elements.root.classList.add('disabled');\n        await timeout(300);\n        super.dispose();\n    }\n}\nclass FindController {\n    get pattern() { return this._pattern; }\n    get mode() { return this._mode; }\n    set mode(mode) {\n        if (mode === this._mode) {\n            return;\n        }\n        this._mode = mode;\n        if (this.widget) {\n            this.widget.mode = this._mode;\n        }\n        this.tree.refilter();\n        this.render();\n        this._onDidChangeMode.fire(mode);\n    }\n    get matchType() { return this._matchType; }\n    set matchType(matchType) {\n        if (matchType === this._matchType) {\n            return;\n        }\n        this._matchType = matchType;\n        if (this.widget) {\n            this.widget.matchType = this._matchType;\n        }\n        this.tree.refilter();\n        this.render();\n        this._onDidChangeMatchType.fire(matchType);\n    }\n    constructor(tree, model, view, filter, contextViewProvider, options = {}) {\n        this.tree = tree;\n        this.view = view;\n        this.filter = filter;\n        this.contextViewProvider = contextViewProvider;\n        this.options = options;\n        this._pattern = '';\n        this.width = 0;\n        this._onDidChangeMode = new Emitter();\n        this.onDidChangeMode = this._onDidChangeMode.event;\n        this._onDidChangeMatchType = new Emitter();\n        this.onDidChangeMatchType = this._onDidChangeMatchType.event;\n        this._onDidChangePattern = new Emitter();\n        this._onDidChangeOpenState = new Emitter();\n        this.onDidChangeOpenState = this._onDidChangeOpenState.event;\n        this.enabledDisposables = new DisposableStore();\n        this.disposables = new DisposableStore();\n        this._mode = tree.options.defaultFindMode ?? TreeFindMode.Highlight;\n        this._matchType = tree.options.defaultFindMatchType ?? TreeFindMatchType.Fuzzy;\n        model.onDidSplice(this.onDidSpliceModel, this, this.disposables);\n    }\n    updateOptions(optionsUpdate = {}) {\n        if (optionsUpdate.defaultFindMode !== undefined) {\n            this.mode = optionsUpdate.defaultFindMode;\n        }\n        if (optionsUpdate.defaultFindMatchType !== undefined) {\n            this.matchType = optionsUpdate.defaultFindMatchType;\n        }\n    }\n    onDidSpliceModel() {\n        if (!this.widget || this.pattern.length === 0) {\n            return;\n        }\n        this.tree.refilter();\n        this.render();\n    }\n    render() {\n        const noMatches = this.filter.totalCount > 0 && this.filter.matchCount === 0;\n        if (this.pattern && noMatches) {\n            alert(localize('replFindNoResults', \"No results\"));\n            if (this.tree.options.showNotFoundMessage ?? true) {\n                this.widget?.showMessage({ type: 2 /* MessageType.WARNING */, content: localize('not found', \"No elements found.\") });\n            }\n            else {\n                this.widget?.showMessage({ type: 2 /* MessageType.WARNING */ });\n            }\n        }\n        else {\n            this.widget?.clearMessage();\n            if (this.pattern) {\n                alert(localize('replFindResults', \"{0} results\", this.filter.matchCount));\n            }\n        }\n    }\n    shouldAllowFocus(node) {\n        if (!this.widget || !this.pattern) {\n            return true;\n        }\n        if (this.filter.totalCount > 0 && this.filter.matchCount <= 1) {\n            return true;\n        }\n        return !FuzzyScore.isDefault(node.filterData);\n    }\n    layout(width) {\n        this.width = width;\n        this.widget?.layout(width);\n    }\n    dispose() {\n        this._history = undefined;\n        this._onDidChangePattern.dispose();\n        this.enabledDisposables.dispose();\n        this.disposables.dispose();\n    }\n}\nfunction stickyScrollNodeStateEquals(node1, node2) {\n    return node1.position === node2.position && stickyScrollNodeEquals(node1, node2);\n}\nfunction stickyScrollNodeEquals(node1, node2) {\n    return node1.node.element === node2.node.element &&\n        node1.startIndex === node2.startIndex &&\n        node1.height === node2.height &&\n        node1.endIndex === node2.endIndex;\n}\nclass StickyScrollState {\n    constructor(stickyNodes = []) {\n        this.stickyNodes = stickyNodes;\n    }\n    get count() { return this.stickyNodes.length; }\n    equal(state) {\n        return equals(this.stickyNodes, state.stickyNodes, stickyScrollNodeStateEquals);\n    }\n    lastNodePartiallyVisible() {\n        if (this.count === 0) {\n            return false;\n        }\n        const lastStickyNode = this.stickyNodes[this.count - 1];\n        if (this.count === 1) {\n            return lastStickyNode.position !== 0;\n        }\n        const secondLastStickyNode = this.stickyNodes[this.count - 2];\n        return secondLastStickyNode.position + secondLastStickyNode.height !== lastStickyNode.position;\n    }\n    animationStateChanged(previousState) {\n        if (!equals(this.stickyNodes, previousState.stickyNodes, stickyScrollNodeEquals)) {\n            return false;\n        }\n        if (this.count === 0) {\n            return false;\n        }\n        const lastStickyNode = this.stickyNodes[this.count - 1];\n        const previousLastStickyNode = previousState.stickyNodes[previousState.count - 1];\n        return lastStickyNode.position !== previousLastStickyNode.position;\n    }\n}\nclass DefaultStickyScrollDelegate {\n    constrainStickyScrollNodes(stickyNodes, stickyScrollMaxItemCount, maxWidgetHeight) {\n        for (let i = 0; i < stickyNodes.length; i++) {\n            const stickyNode = stickyNodes[i];\n            const stickyNodeBottom = stickyNode.position + stickyNode.height;\n            if (stickyNodeBottom > maxWidgetHeight || i >= stickyScrollMaxItemCount) {\n                return stickyNodes.slice(0, i);\n            }\n        }\n        return stickyNodes;\n    }\n}\nclass StickyScrollController extends Disposable {\n    constructor(tree, model, view, renderers, treeDelegate, options = {}) {\n        super();\n        this.tree = tree;\n        this.model = model;\n        this.view = view;\n        this.treeDelegate = treeDelegate;\n        this.maxWidgetViewRatio = 0.4;\n        const stickyScrollOptions = this.validateStickySettings(options);\n        this.stickyScrollMaxItemCount = stickyScrollOptions.stickyScrollMaxItemCount;\n        this.stickyScrollDelegate = options.stickyScrollDelegate ?? new DefaultStickyScrollDelegate();\n        this._widget = this._register(new StickyScrollWidget(view.getScrollableElement(), view, tree, renderers, treeDelegate, options.accessibilityProvider));\n        this.onDidChangeHasFocus = this._widget.onDidChangeHasFocus;\n        this.onContextMenu = this._widget.onContextMenu;\n        this._register(view.onDidScroll(() => this.update()));\n        this._register(view.onDidChangeContentHeight(() => this.update()));\n        this._register(tree.onDidChangeCollapseState(() => this.update()));\n        this.update();\n    }\n    get height() {\n        return this._widget.height;\n    }\n    getNodeAtHeight(height) {\n        let index;\n        if (height === 0) {\n            index = this.view.firstVisibleIndex;\n        }\n        else {\n            index = this.view.indexAt(height + this.view.scrollTop);\n        }\n        if (index < 0 || index >= this.view.length) {\n            return undefined;\n        }\n        return this.view.element(index);\n    }\n    update() {\n        const firstVisibleNode = this.getNodeAtHeight(0);\n        // Don't render anything if there are no elements\n        if (!firstVisibleNode || this.tree.scrollTop === 0) {\n            this._widget.setState(undefined);\n            return;\n        }\n        const stickyState = this.findStickyState(firstVisibleNode);\n        this._widget.setState(stickyState);\n    }\n    findStickyState(firstVisibleNode) {\n        const stickyNodes = [];\n        let firstVisibleNodeUnderWidget = firstVisibleNode;\n        let stickyNodesHeight = 0;\n        let nextStickyNode = this.getNextStickyNode(firstVisibleNodeUnderWidget, undefined, stickyNodesHeight);\n        while (nextStickyNode) {\n            stickyNodes.push(nextStickyNode);\n            stickyNodesHeight += nextStickyNode.height;\n            if (stickyNodes.length <= this.stickyScrollMaxItemCount) {\n                firstVisibleNodeUnderWidget = this.getNextVisibleNode(nextStickyNode);\n                if (!firstVisibleNodeUnderWidget) {\n                    break;\n                }\n            }\n            nextStickyNode = this.getNextStickyNode(firstVisibleNodeUnderWidget, nextStickyNode.node, stickyNodesHeight);\n        }\n        const contrainedStickyNodes = this.constrainStickyNodes(stickyNodes);\n        return contrainedStickyNodes.length ? new StickyScrollState(contrainedStickyNodes) : undefined;\n    }\n    getNextVisibleNode(previousStickyNode) {\n        return this.getNodeAtHeight(previousStickyNode.position + previousStickyNode.height);\n    }\n    getNextStickyNode(firstVisibleNodeUnderWidget, previousStickyNode, stickyNodesHeight) {\n        const nextStickyNode = this.getAncestorUnderPrevious(firstVisibleNodeUnderWidget, previousStickyNode);\n        if (!nextStickyNode) {\n            return undefined;\n        }\n        if (nextStickyNode === firstVisibleNodeUnderWidget) {\n            if (!this.nodeIsUncollapsedParent(firstVisibleNodeUnderWidget)) {\n                return undefined;\n            }\n            if (this.nodeTopAlignsWithStickyNodesBottom(firstVisibleNodeUnderWidget, stickyNodesHeight)) {\n                return undefined;\n            }\n        }\n        return this.createStickyScrollNode(nextStickyNode, stickyNodesHeight);\n    }\n    nodeTopAlignsWithStickyNodesBottom(node, stickyNodesHeight) {\n        const nodeIndex = this.getNodeIndex(node);\n        const elementTop = this.view.getElementTop(nodeIndex);\n        const stickyPosition = stickyNodesHeight;\n        return this.view.scrollTop === elementTop - stickyPosition;\n    }\n    createStickyScrollNode(node, currentStickyNodesHeight) {\n        const height = this.treeDelegate.getHeight(node);\n        const { startIndex, endIndex } = this.getNodeRange(node);\n        const position = this.calculateStickyNodePosition(endIndex, currentStickyNodesHeight, height);\n        return { node, position, height, startIndex, endIndex };\n    }\n    getAncestorUnderPrevious(node, previousAncestor = undefined) {\n        let currentAncestor = node;\n        let parentOfcurrentAncestor = this.getParentNode(currentAncestor);\n        while (parentOfcurrentAncestor) {\n            if (parentOfcurrentAncestor === previousAncestor) {\n                return currentAncestor;\n            }\n            currentAncestor = parentOfcurrentAncestor;\n            parentOfcurrentAncestor = this.getParentNode(currentAncestor);\n        }\n        if (previousAncestor === undefined) {\n            return currentAncestor;\n        }\n        return undefined;\n    }\n    calculateStickyNodePosition(lastDescendantIndex, stickyRowPositionTop, stickyNodeHeight) {\n        let lastChildRelativeTop = this.view.getRelativeTop(lastDescendantIndex);\n        // If the last descendant is only partially visible at the top of the view, getRelativeTop() returns null\n        // In that case, utilize the next node's relative top to calculate the sticky node's position\n        if (lastChildRelativeTop === null && this.view.firstVisibleIndex === lastDescendantIndex && lastDescendantIndex + 1 < this.view.length) {\n            const nodeHeight = this.treeDelegate.getHeight(this.view.element(lastDescendantIndex));\n            const nextNodeRelativeTop = this.view.getRelativeTop(lastDescendantIndex + 1);\n            lastChildRelativeTop = nextNodeRelativeTop ? nextNodeRelativeTop - nodeHeight / this.view.renderHeight : null;\n        }\n        if (lastChildRelativeTop === null) {\n            return stickyRowPositionTop;\n        }\n        const lastChildNode = this.view.element(lastDescendantIndex);\n        const lastChildHeight = this.treeDelegate.getHeight(lastChildNode);\n        const topOfLastChild = lastChildRelativeTop * this.view.renderHeight;\n        const bottomOfLastChild = topOfLastChild + lastChildHeight;\n        if (stickyRowPositionTop + stickyNodeHeight > bottomOfLastChild && stickyRowPositionTop <= bottomOfLastChild) {\n            return bottomOfLastChild - stickyNodeHeight;\n        }\n        return stickyRowPositionTop;\n    }\n    constrainStickyNodes(stickyNodes) {\n        if (stickyNodes.length === 0) {\n            return [];\n        }\n        // Check if sticky nodes need to be constrained\n        const maximumStickyWidgetHeight = this.view.renderHeight * this.maxWidgetViewRatio;\n        const lastStickyNode = stickyNodes[stickyNodes.length - 1];\n        if (stickyNodes.length <= this.stickyScrollMaxItemCount && lastStickyNode.position + lastStickyNode.height <= maximumStickyWidgetHeight) {\n            return stickyNodes;\n        }\n        // constrain sticky nodes\n        const constrainedStickyNodes = this.stickyScrollDelegate.constrainStickyScrollNodes(stickyNodes, this.stickyScrollMaxItemCount, maximumStickyWidgetHeight);\n        if (!constrainedStickyNodes.length) {\n            return [];\n        }\n        // Validate constraints\n        const lastConstrainedStickyNode = constrainedStickyNodes[constrainedStickyNodes.length - 1];\n        if (constrainedStickyNodes.length > this.stickyScrollMaxItemCount || lastConstrainedStickyNode.position + lastConstrainedStickyNode.height > maximumStickyWidgetHeight) {\n            throw new Error('stickyScrollDelegate violates constraints');\n        }\n        return constrainedStickyNodes;\n    }\n    getParentNode(node) {\n        const nodeLocation = this.model.getNodeLocation(node);\n        const parentLocation = this.model.getParentNodeLocation(nodeLocation);\n        return parentLocation ? this.model.getNode(parentLocation) : undefined;\n    }\n    nodeIsUncollapsedParent(node) {\n        const nodeLocation = this.model.getNodeLocation(node);\n        return this.model.getListRenderCount(nodeLocation) > 1;\n    }\n    getNodeIndex(node) {\n        const nodeLocation = this.model.getNodeLocation(node);\n        const nodeIndex = this.model.getListIndex(nodeLocation);\n        return nodeIndex;\n    }\n    getNodeRange(node) {\n        const nodeLocation = this.model.getNodeLocation(node);\n        const startIndex = this.model.getListIndex(nodeLocation);\n        if (startIndex < 0) {\n            throw new Error('Node not found in tree');\n        }\n        const renderCount = this.model.getListRenderCount(nodeLocation);\n        const endIndex = startIndex + renderCount - 1;\n        return { startIndex, endIndex };\n    }\n    nodePositionTopBelowWidget(node) {\n        const ancestors = [];\n        let currentAncestor = this.getParentNode(node);\n        while (currentAncestor) {\n            ancestors.push(currentAncestor);\n            currentAncestor = this.getParentNode(currentAncestor);\n        }\n        let widgetHeight = 0;\n        for (let i = 0; i < ancestors.length && i < this.stickyScrollMaxItemCount; i++) {\n            widgetHeight += this.treeDelegate.getHeight(ancestors[i]);\n        }\n        return widgetHeight;\n    }\n    domFocus() {\n        this._widget.domFocus();\n    }\n    // Whether sticky scroll was the last focused part in the tree or not\n    focusedLast() {\n        return this._widget.focusedLast();\n    }\n    updateOptions(optionsUpdate = {}) {\n        if (!optionsUpdate.stickyScrollMaxItemCount) {\n            return;\n        }\n        const validatedOptions = this.validateStickySettings(optionsUpdate);\n        if (this.stickyScrollMaxItemCount !== validatedOptions.stickyScrollMaxItemCount) {\n            this.stickyScrollMaxItemCount = validatedOptions.stickyScrollMaxItemCount;\n            this.update();\n        }\n    }\n    validateStickySettings(options) {\n        let stickyScrollMaxItemCount = 7;\n        if (typeof options.stickyScrollMaxItemCount === 'number') {\n            stickyScrollMaxItemCount = Math.max(options.stickyScrollMaxItemCount, 1);\n        }\n        return { stickyScrollMaxItemCount };\n    }\n}\nclass StickyScrollWidget {\n    constructor(container, view, tree, treeRenderers, treeDelegate, accessibilityProvider) {\n        this.view = view;\n        this.tree = tree;\n        this.treeRenderers = treeRenderers;\n        this.treeDelegate = treeDelegate;\n        this.accessibilityProvider = accessibilityProvider;\n        this._previousElements = [];\n        this._previousStateDisposables = new DisposableStore();\n        this._rootDomNode = $('.monaco-tree-sticky-container.empty');\n        container.appendChild(this._rootDomNode);\n        const shadow = $('.monaco-tree-sticky-container-shadow');\n        this._rootDomNode.appendChild(shadow);\n        this.stickyScrollFocus = new StickyScrollFocus(this._rootDomNode, view);\n        this.onDidChangeHasFocus = this.stickyScrollFocus.onDidChangeHasFocus;\n        this.onContextMenu = this.stickyScrollFocus.onContextMenu;\n    }\n    get height() {\n        if (!this._previousState) {\n            return 0;\n        }\n        const lastElement = this._previousState.stickyNodes[this._previousState.count - 1];\n        return lastElement.position + lastElement.height;\n    }\n    setState(state) {\n        const wasVisible = !!this._previousState && this._previousState.count > 0;\n        const isVisible = !!state && state.count > 0;\n        // If state has not changed, do nothing\n        if ((!wasVisible && !isVisible) || (wasVisible && isVisible && this._previousState.equal(state))) {\n            return;\n        }\n        // Update visibility of the widget if changed\n        if (wasVisible !== isVisible) {\n            this.setVisible(isVisible);\n        }\n        if (!isVisible) {\n            this._previousState = undefined;\n            this._previousElements = [];\n            this._previousStateDisposables.clear();\n            return;\n        }\n        const lastStickyNode = state.stickyNodes[state.count - 1];\n        // If the new state is only a change in the last node's position, update the position of the last element\n        if (this._previousState && state.animationStateChanged(this._previousState)) {\n            this._previousElements[this._previousState.count - 1].style.top = `${lastStickyNode.position}px`;\n        }\n        // create new dom elements\n        else {\n            this._previousStateDisposables.clear();\n            const elements = Array(state.count);\n            for (let stickyIndex = state.count - 1; stickyIndex >= 0; stickyIndex--) {\n                const stickyNode = state.stickyNodes[stickyIndex];\n                const { element, disposable } = this.createElement(stickyNode, stickyIndex, state.count);\n                elements[stickyIndex] = element;\n                this._rootDomNode.appendChild(element);\n                this._previousStateDisposables.add(disposable);\n            }\n            this.stickyScrollFocus.updateElements(elements, state);\n            this._previousElements = elements;\n        }\n        this._previousState = state;\n        // Set the height of the widget to the bottom of the last sticky node\n        this._rootDomNode.style.height = `${lastStickyNode.position + lastStickyNode.height}px`;\n    }\n    createElement(stickyNode, stickyIndex, stickyNodesTotal) {\n        const nodeIndex = stickyNode.startIndex;\n        // Sticky element container\n        const stickyElement = document.createElement('div');\n        stickyElement.style.top = `${stickyNode.position}px`;\n        if (this.tree.options.setRowHeight !== false) {\n            stickyElement.style.height = `${stickyNode.height}px`;\n        }\n        if (this.tree.options.setRowLineHeight !== false) {\n            stickyElement.style.lineHeight = `${stickyNode.height}px`;\n        }\n        stickyElement.classList.add('monaco-tree-sticky-row');\n        stickyElement.classList.add('monaco-list-row');\n        stickyElement.setAttribute('data-index', `${nodeIndex}`);\n        stickyElement.setAttribute('data-parity', nodeIndex % 2 === 0 ? 'even' : 'odd');\n        stickyElement.setAttribute('id', this.view.getElementID(nodeIndex));\n        const accessibilityDisposable = this.setAccessibilityAttributes(stickyElement, stickyNode.node.element, stickyIndex, stickyNodesTotal);\n        // Get the renderer for the node\n        const nodeTemplateId = this.treeDelegate.getTemplateId(stickyNode.node);\n        const renderer = this.treeRenderers.find((renderer) => renderer.templateId === nodeTemplateId);\n        if (!renderer) {\n            throw new Error(`No renderer found for template id ${nodeTemplateId}`);\n        }\n        // To make sure we do not influence the original node, we create a copy of the node\n        // We need to check if it is already a unique instance of the node by the delegate\n        let nodeCopy = stickyNode.node;\n        if (nodeCopy === this.tree.getNode(this.tree.getNodeLocation(stickyNode.node))) {\n            nodeCopy = new Proxy(stickyNode.node, {});\n        }\n        // Render the element\n        const templateData = renderer.renderTemplate(stickyElement);\n        renderer.renderElement(nodeCopy, stickyNode.startIndex, templateData, stickyNode.height);\n        // Remove the element from the DOM when state is disposed\n        const disposable = toDisposable(() => {\n            accessibilityDisposable.dispose();\n            renderer.disposeElement(nodeCopy, stickyNode.startIndex, templateData, stickyNode.height);\n            renderer.disposeTemplate(templateData);\n            stickyElement.remove();\n        });\n        return { element: stickyElement, disposable };\n    }\n    setAccessibilityAttributes(container, element, stickyIndex, stickyNodesTotal) {\n        if (!this.accessibilityProvider) {\n            return Disposable.None;\n        }\n        if (this.accessibilityProvider.getSetSize) {\n            container.setAttribute('aria-setsize', String(this.accessibilityProvider.getSetSize(element, stickyIndex, stickyNodesTotal)));\n        }\n        if (this.accessibilityProvider.getPosInSet) {\n            container.setAttribute('aria-posinset', String(this.accessibilityProvider.getPosInSet(element, stickyIndex)));\n        }\n        if (this.accessibilityProvider.getRole) {\n            container.setAttribute('role', this.accessibilityProvider.getRole(element) ?? 'treeitem');\n        }\n        const ariaLabel = this.accessibilityProvider.getAriaLabel(element);\n        const observable = (ariaLabel && typeof ariaLabel !== 'string') ? ariaLabel : constObservable(ariaLabel);\n        const result = autorun(reader => {\n            const value = reader.readObservable(observable);\n            if (value) {\n                container.setAttribute('aria-label', value);\n            }\n            else {\n                container.removeAttribute('aria-label');\n            }\n        });\n        if (typeof ariaLabel === 'string') {\n        }\n        else if (ariaLabel) {\n            container.setAttribute('aria-label', ariaLabel.get());\n        }\n        const ariaLevel = this.accessibilityProvider.getAriaLevel && this.accessibilityProvider.getAriaLevel(element);\n        if (typeof ariaLevel === 'number') {\n            container.setAttribute('aria-level', `${ariaLevel}`);\n        }\n        // Sticky Scroll elements can not be selected\n        container.setAttribute('aria-selected', String(false));\n        return result;\n    }\n    setVisible(visible) {\n        this._rootDomNode.classList.toggle('empty', !visible);\n        if (!visible) {\n            this.stickyScrollFocus.updateElements([], undefined);\n        }\n    }\n    domFocus() {\n        this.stickyScrollFocus.domFocus();\n    }\n    focusedLast() {\n        return this.stickyScrollFocus.focusedLast();\n    }\n    dispose() {\n        this.stickyScrollFocus.dispose();\n        this._previousStateDisposables.dispose();\n        this._rootDomNode.remove();\n    }\n}\nclass StickyScrollFocus extends Disposable {\n    get domHasFocus() { return this._domHasFocus; }\n    set domHasFocus(hasFocus) {\n        if (hasFocus !== this._domHasFocus) {\n            this._onDidChangeHasFocus.fire(hasFocus);\n            this._domHasFocus = hasFocus;\n        }\n    }\n    constructor(container, view) {\n        super();\n        this.container = container;\n        this.view = view;\n        this.focusedIndex = -1;\n        this.elements = [];\n        this._onDidChangeHasFocus = new Emitter();\n        this.onDidChangeHasFocus = this._onDidChangeHasFocus.event;\n        this._onContextMenu = new Emitter();\n        this.onContextMenu = this._onContextMenu.event;\n        this._domHasFocus = false;\n        this._register(addDisposableListener(this.container, 'focus', () => this.onFocus()));\n        this._register(addDisposableListener(this.container, 'blur', () => this.onBlur()));\n        this._register(this.view.onDidFocus(() => this.toggleStickyScrollFocused(false)));\n        this._register(this.view.onKeyDown((e) => this.onKeyDown(e)));\n        this._register(this.view.onMouseDown((e) => this.onMouseDown(e)));\n        this._register(this.view.onContextMenu((e) => this.handleContextMenu(e)));\n    }\n    handleContextMenu(e) {\n        const target = e.browserEvent.target;\n        if (!isStickyScrollContainer(target) && !isStickyScrollElement(target)) {\n            if (this.focusedLast()) {\n                this.view.domFocus();\n            }\n            return;\n        }\n        // The list handles the context menu triggered by a mouse event\n        // In that case only set the focus of the element clicked and leave the rest to the list to handle\n        if (!isKeyboardEvent(e.browserEvent)) {\n            if (!this.state) {\n                throw new Error('Context menu should not be triggered when state is undefined');\n            }\n            const stickyIndex = this.state.stickyNodes.findIndex(stickyNode => stickyNode.node.element === e.element?.element);\n            if (stickyIndex === -1) {\n                throw new Error('Context menu should not be triggered when element is not in sticky scroll widget');\n            }\n            this.container.focus();\n            this.setFocus(stickyIndex);\n            return;\n        }\n        if (!this.state || this.focusedIndex < 0) {\n            throw new Error('Context menu key should not be triggered when focus is not in sticky scroll widget');\n        }\n        const stickyNode = this.state.stickyNodes[this.focusedIndex];\n        const element = stickyNode.node.element;\n        const anchor = this.elements[this.focusedIndex];\n        this._onContextMenu.fire({ element, anchor, browserEvent: e.browserEvent, isStickyScroll: true });\n    }\n    onKeyDown(e) {\n        // Sticky Scroll Navigation\n        if (this.domHasFocus && this.state) {\n            // Move up\n            if (e.key === 'ArrowUp') {\n                this.setFocusedElement(Math.max(0, this.focusedIndex - 1));\n                e.preventDefault();\n                e.stopPropagation();\n            }\n            // Move down, if last sticky node is focused, move focus into first child of last sticky node\n            else if (e.key === 'ArrowDown' || e.key === 'ArrowRight') {\n                if (this.focusedIndex >= this.state.count - 1) {\n                    const nodeIndexToFocus = this.state.stickyNodes[this.state.count - 1].startIndex + 1;\n                    this.view.domFocus();\n                    this.view.setFocus([nodeIndexToFocus]);\n                    this.scrollNodeUnderWidget(nodeIndexToFocus, this.state);\n                }\n                else {\n                    this.setFocusedElement(this.focusedIndex + 1);\n                }\n                e.preventDefault();\n                e.stopPropagation();\n            }\n        }\n    }\n    onMouseDown(e) {\n        const target = e.browserEvent.target;\n        if (!isStickyScrollContainer(target) && !isStickyScrollElement(target)) {\n            return;\n        }\n        e.browserEvent.preventDefault();\n        e.browserEvent.stopPropagation();\n    }\n    updateElements(elements, state) {\n        if (state && state.count === 0) {\n            throw new Error('Sticky scroll state must be undefined when there are no sticky nodes');\n        }\n        if (state && state.count !== elements.length) {\n            throw new Error('Sticky scroll focus received illigel state');\n        }\n        const previousIndex = this.focusedIndex;\n        this.removeFocus();\n        this.elements = elements;\n        this.state = state;\n        if (state) {\n            const newFocusedIndex = clamp(previousIndex, 0, state.count - 1);\n            this.setFocus(newFocusedIndex);\n        }\n        else {\n            if (this.domHasFocus) {\n                this.view.domFocus();\n            }\n        }\n        // must come last as it calls blur()\n        this.container.tabIndex = state ? 0 : -1;\n    }\n    setFocusedElement(stickyIndex) {\n        // doesn't imply that the widget has (or will have) focus\n        const state = this.state;\n        if (!state) {\n            throw new Error('Cannot set focus when state is undefined');\n        }\n        this.setFocus(stickyIndex);\n        if (stickyIndex < state.count - 1) {\n            return;\n        }\n        // If the last sticky node is not fully visible, scroll it into view\n        if (state.lastNodePartiallyVisible()) {\n            const lastStickyNode = state.stickyNodes[stickyIndex];\n            this.scrollNodeUnderWidget(lastStickyNode.endIndex + 1, state);\n        }\n    }\n    scrollNodeUnderWidget(nodeIndex, state) {\n        const lastStickyNode = state.stickyNodes[state.count - 1];\n        const secondLastStickyNode = state.count > 1 ? state.stickyNodes[state.count - 2] : undefined;\n        const elementScrollTop = this.view.getElementTop(nodeIndex);\n        const elementTargetViewTop = secondLastStickyNode ? secondLastStickyNode.position + secondLastStickyNode.height + lastStickyNode.height : lastStickyNode.height;\n        this.view.scrollTop = elementScrollTop - elementTargetViewTop;\n    }\n    domFocus() {\n        if (!this.state) {\n            throw new Error('Cannot focus when state is undefined');\n        }\n        this.container.focus();\n    }\n    focusedLast() {\n        if (!this.state) {\n            return false;\n        }\n        return this.view.getHTMLElement().classList.contains('sticky-scroll-focused');\n    }\n    removeFocus() {\n        if (this.focusedIndex === -1) {\n            return;\n        }\n        this.toggleElementFocus(this.elements[this.focusedIndex], false);\n        this.focusedIndex = -1;\n    }\n    setFocus(newFocusIndex) {\n        if (0 > newFocusIndex) {\n            throw new Error('addFocus() can not remove focus');\n        }\n        if (!this.state && newFocusIndex >= 0) {\n            throw new Error('Cannot set focus index when state is undefined');\n        }\n        if (this.state && newFocusIndex >= this.state.count) {\n            throw new Error('Cannot set focus index to an index that does not exist');\n        }\n        const oldIndex = this.focusedIndex;\n        if (oldIndex >= 0) {\n            this.toggleElementFocus(this.elements[oldIndex], false);\n        }\n        if (newFocusIndex >= 0) {\n            this.toggleElementFocus(this.elements[newFocusIndex], true);\n        }\n        this.focusedIndex = newFocusIndex;\n    }\n    toggleElementFocus(element, focused) {\n        this.toggleElementActiveFocus(element, focused && this.domHasFocus);\n        this.toggleElementPassiveFocus(element, focused);\n    }\n    toggleCurrentElementActiveFocus(focused) {\n        if (this.focusedIndex === -1) {\n            return;\n        }\n        this.toggleElementActiveFocus(this.elements[this.focusedIndex], focused);\n    }\n    toggleElementActiveFocus(element, focused) {\n        // active focus is set when sticky scroll has focus\n        element.classList.toggle('focused', focused);\n    }\n    toggleElementPassiveFocus(element, focused) {\n        // passive focus allows to show focus when sticky scroll does not have focus\n        // for example when the context menu has focus\n        element.classList.toggle('passive-focused', focused);\n    }\n    toggleStickyScrollFocused(focused) {\n        // Weather the last focus in the view was sticky scroll and not the list\n        // Is only removed when the focus is back in the tree an no longer in sticky scroll\n        this.view.getHTMLElement().classList.toggle('sticky-scroll-focused', focused);\n    }\n    onFocus() {\n        if (!this.state || this.elements.length === 0) {\n            throw new Error('Cannot focus when state is undefined or elements are empty');\n        }\n        this.domHasFocus = true;\n        this.toggleStickyScrollFocused(true);\n        this.toggleCurrentElementActiveFocus(true);\n        if (this.focusedIndex === -1) {\n            this.setFocus(0);\n        }\n    }\n    onBlur() {\n        this.domHasFocus = false;\n        this.toggleCurrentElementActiveFocus(false);\n    }\n    dispose() {\n        this.toggleStickyScrollFocused(false);\n        this._onDidChangeHasFocus.fire(false);\n        super.dispose();\n    }\n}\nfunction asTreeMouseEvent(event) {\n    let target = TreeMouseEventTarget.Unknown;\n    if (hasParentWithClass(event.browserEvent.target, 'monaco-tl-twistie', 'monaco-tl-row')) {\n        target = TreeMouseEventTarget.Twistie;\n    }\n    else if (hasParentWithClass(event.browserEvent.target, 'monaco-tl-contents', 'monaco-tl-row')) {\n        target = TreeMouseEventTarget.Element;\n    }\n    else if (hasParentWithClass(event.browserEvent.target, 'monaco-tree-type-filter', 'monaco-list')) {\n        target = TreeMouseEventTarget.Filter;\n    }\n    return {\n        browserEvent: event.browserEvent,\n        element: event.element ? event.element.element : null,\n        target\n    };\n}\nfunction asTreeContextMenuEvent(event) {\n    const isStickyScroll = isStickyScrollContainer(event.browserEvent.target);\n    return {\n        element: event.element ? event.element.element : null,\n        browserEvent: event.browserEvent,\n        anchor: event.anchor,\n        isStickyScroll\n    };\n}\nfunction dfs(node, fn) {\n    fn(node);\n    node.children.forEach(child => dfs(child, fn));\n}\n/**\n * The trait concept needs to exist at the tree level, because collapsed\n * tree nodes will not be known by the list.\n */\nclass Trait {\n    get nodeSet() {\n        if (!this._nodeSet) {\n            this._nodeSet = this.createNodeSet();\n        }\n        return this._nodeSet;\n    }\n    constructor(getFirstViewElementWithTrait, identityProvider) {\n        this.getFirstViewElementWithTrait = getFirstViewElementWithTrait;\n        this.identityProvider = identityProvider;\n        this.nodes = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n    }\n    set(nodes, browserEvent) {\n        if (!browserEvent?.__forceEvent && equals(this.nodes, nodes)) {\n            return;\n        }\n        this._set(nodes, false, browserEvent);\n    }\n    _set(nodes, silent, browserEvent) {\n        this.nodes = [...nodes];\n        this.elements = undefined;\n        this._nodeSet = undefined;\n        if (!silent) {\n            const that = this;\n            this._onDidChange.fire({ get elements() { return that.get(); }, browserEvent });\n        }\n    }\n    get() {\n        if (!this.elements) {\n            this.elements = this.nodes.map(node => node.element);\n        }\n        return [...this.elements];\n    }\n    getNodes() {\n        return this.nodes;\n    }\n    has(node) {\n        return this.nodeSet.has(node);\n    }\n    onDidModelSplice({ insertedNodes, deletedNodes }) {\n        if (!this.identityProvider) {\n            const set = this.createNodeSet();\n            const visit = (node) => set.delete(node);\n            deletedNodes.forEach(node => dfs(node, visit));\n            this.set([...set.values()]);\n            return;\n        }\n        const deletedNodesIdSet = new Set();\n        const deletedNodesVisitor = (node) => deletedNodesIdSet.add(this.identityProvider.getId(node.element).toString());\n        deletedNodes.forEach(node => dfs(node, deletedNodesVisitor));\n        const insertedNodesMap = new Map();\n        const insertedNodesVisitor = (node) => insertedNodesMap.set(this.identityProvider.getId(node.element).toString(), node);\n        insertedNodes.forEach(node => dfs(node, insertedNodesVisitor));\n        const nodes = [];\n        for (const node of this.nodes) {\n            const id = this.identityProvider.getId(node.element).toString();\n            const wasDeleted = deletedNodesIdSet.has(id);\n            if (!wasDeleted) {\n                nodes.push(node);\n            }\n            else {\n                const insertedNode = insertedNodesMap.get(id);\n                if (insertedNode && insertedNode.visible) {\n                    nodes.push(insertedNode);\n                }\n            }\n        }\n        if (this.nodes.length > 0 && nodes.length === 0) {\n            const node = this.getFirstViewElementWithTrait();\n            if (node) {\n                nodes.push(node);\n            }\n        }\n        this._set(nodes, true);\n    }\n    createNodeSet() {\n        const set = new Set();\n        for (const node of this.nodes) {\n            set.add(node);\n        }\n        return set;\n    }\n}\nclass TreeNodeListMouseController extends MouseController {\n    constructor(list, tree, stickyScrollProvider) {\n        super(list);\n        this.tree = tree;\n        this.stickyScrollProvider = stickyScrollProvider;\n    }\n    onViewPointer(e) {\n        if (isButton(e.browserEvent.target) ||\n            isInputElement(e.browserEvent.target) ||\n            isMonacoEditor(e.browserEvent.target)) {\n            return;\n        }\n        if (e.browserEvent.isHandledByList) {\n            return;\n        }\n        const node = e.element;\n        if (!node) {\n            return super.onViewPointer(e);\n        }\n        if (this.isSelectionRangeChangeEvent(e) || this.isSelectionSingleChangeEvent(e)) {\n            return super.onViewPointer(e);\n        }\n        const target = e.browserEvent.target;\n        const onTwistie = target.classList.contains('monaco-tl-twistie')\n            || (target.classList.contains('monaco-icon-label') && target.classList.contains('folder-icon') && e.browserEvent.offsetX < 16);\n        const isStickyElement = isStickyScrollElement(e.browserEvent.target);\n        let expandOnlyOnTwistieClick = false;\n        if (isStickyElement) {\n            expandOnlyOnTwistieClick = true;\n        }\n        else if (typeof this.tree.expandOnlyOnTwistieClick === 'function') {\n            expandOnlyOnTwistieClick = this.tree.expandOnlyOnTwistieClick(node.element);\n        }\n        else {\n            expandOnlyOnTwistieClick = !!this.tree.expandOnlyOnTwistieClick;\n        }\n        if (!isStickyElement) {\n            if (expandOnlyOnTwistieClick && !onTwistie && e.browserEvent.detail !== 2) {\n                return super.onViewPointer(e);\n            }\n            if (!this.tree.expandOnDoubleClick && e.browserEvent.detail === 2) {\n                return super.onViewPointer(e);\n            }\n        }\n        else {\n            this.handleStickyScrollMouseEvent(e, node);\n        }\n        if (node.collapsible && (!isStickyElement || onTwistie)) {\n            const location = this.tree.getNodeLocation(node);\n            const recursive = e.browserEvent.altKey;\n            this.tree.setFocus([location]);\n            this.tree.toggleCollapsed(location, recursive);\n            if (onTwistie) {\n                // Do not set this before calling a handler on the super class, because it will reject it as handled\n                e.browserEvent.isHandledByList = true;\n                return;\n            }\n        }\n        if (!isStickyElement) {\n            super.onViewPointer(e);\n        }\n    }\n    handleStickyScrollMouseEvent(e, node) {\n        if (isMonacoCustomToggle(e.browserEvent.target) || isActionItem(e.browserEvent.target)) {\n            return;\n        }\n        const stickyScrollController = this.stickyScrollProvider();\n        if (!stickyScrollController) {\n            throw new Error('Sticky scroll controller not found');\n        }\n        const nodeIndex = this.list.indexOf(node);\n        const elementScrollTop = this.list.getElementTop(nodeIndex);\n        const elementTargetViewTop = stickyScrollController.nodePositionTopBelowWidget(node);\n        this.tree.scrollTop = elementScrollTop - elementTargetViewTop;\n        this.list.domFocus();\n        this.list.setFocus([nodeIndex]);\n        this.list.setSelection([nodeIndex]);\n    }\n    onDoubleClick(e) {\n        const onTwistie = e.browserEvent.target.classList.contains('monaco-tl-twistie');\n        if (onTwistie || !this.tree.expandOnDoubleClick) {\n            return;\n        }\n        if (e.browserEvent.isHandledByList) {\n            return;\n        }\n        super.onDoubleClick(e);\n    }\n    // to make sure dom focus is not stolen (for example with context menu)\n    onMouseDown(e) {\n        const target = e.browserEvent.target;\n        if (!isStickyScrollContainer(target) && !isStickyScrollElement(target)) {\n            super.onMouseDown(e);\n            return;\n        }\n    }\n    onContextMenu(e) {\n        const target = e.browserEvent.target;\n        if (!isStickyScrollContainer(target) && !isStickyScrollElement(target)) {\n            super.onContextMenu(e);\n            return;\n        }\n    }\n}\n/**\n * We use this List subclass to restore selection and focus as nodes\n * get rendered in the list, possibly due to a node expand() call.\n */\nclass TreeNodeList extends List {\n    constructor(user, container, virtualDelegate, renderers, focusTrait, selectionTrait, anchorTrait, options) {\n        super(user, container, virtualDelegate, renderers, options);\n        this.focusTrait = focusTrait;\n        this.selectionTrait = selectionTrait;\n        this.anchorTrait = anchorTrait;\n    }\n    createMouseController(options) {\n        return new TreeNodeListMouseController(this, options.tree, options.stickyScrollProvider);\n    }\n    splice(start, deleteCount, elements = []) {\n        super.splice(start, deleteCount, elements);\n        if (elements.length === 0) {\n            return;\n        }\n        const additionalFocus = [];\n        const additionalSelection = [];\n        let anchor;\n        elements.forEach((node, index) => {\n            if (this.focusTrait.has(node)) {\n                additionalFocus.push(start + index);\n            }\n            if (this.selectionTrait.has(node)) {\n                additionalSelection.push(start + index);\n            }\n            if (this.anchorTrait.has(node)) {\n                anchor = start + index;\n            }\n        });\n        if (additionalFocus.length > 0) {\n            super.setFocus(distinct([...super.getFocus(), ...additionalFocus]));\n        }\n        if (additionalSelection.length > 0) {\n            super.setSelection(distinct([...super.getSelection(), ...additionalSelection]));\n        }\n        if (typeof anchor === 'number') {\n            super.setAnchor(anchor);\n        }\n    }\n    setFocus(indexes, browserEvent, fromAPI = false) {\n        super.setFocus(indexes, browserEvent);\n        if (!fromAPI) {\n            this.focusTrait.set(indexes.map(i => this.element(i)), browserEvent);\n        }\n    }\n    setSelection(indexes, browserEvent, fromAPI = false) {\n        super.setSelection(indexes, browserEvent);\n        if (!fromAPI) {\n            this.selectionTrait.set(indexes.map(i => this.element(i)), browserEvent);\n        }\n    }\n    setAnchor(index, fromAPI = false) {\n        super.setAnchor(index);\n        if (!fromAPI) {\n            if (typeof index === 'undefined') {\n                this.anchorTrait.set([]);\n            }\n            else {\n                this.anchorTrait.set([this.element(index)]);\n            }\n        }\n    }\n}\nexport class AbstractTree {\n    get onDidScroll() { return this.view.onDidScroll; }\n    get onDidChangeFocus() { return this.eventBufferer.wrapEvent(this.focus.onDidChange); }\n    get onDidChangeSelection() { return this.eventBufferer.wrapEvent(this.selection.onDidChange); }\n    get onMouseDblClick() { return Event.filter(Event.map(this.view.onMouseDblClick, asTreeMouseEvent), e => e.target !== TreeMouseEventTarget.Filter); }\n    get onMouseOver() { return Event.map(this.view.onMouseOver, asTreeMouseEvent); }\n    get onMouseOut() { return Event.map(this.view.onMouseOut, asTreeMouseEvent); }\n    get onContextMenu() { return Event.any(Event.filter(Event.map(this.view.onContextMenu, asTreeContextMenuEvent), e => !e.isStickyScroll), this.stickyScrollController?.onContextMenu ?? Event.None); }\n    get onPointer() { return Event.map(this.view.onPointer, asTreeMouseEvent); }\n    get onKeyDown() { return this.view.onKeyDown; }\n    get onDidFocus() { return this.view.onDidFocus; }\n    get onDidChangeModel() { return Event.signal(this.model.onDidSplice); }\n    get onDidChangeCollapseState() { return this.model.onDidChangeCollapseState; }\n    get findMode() { return this.findController?.mode ?? TreeFindMode.Highlight; }\n    set findMode(findMode) { if (this.findController) {\n        this.findController.mode = findMode;\n    } }\n    get findMatchType() { return this.findController?.matchType ?? TreeFindMatchType.Fuzzy; }\n    set findMatchType(findFuzzy) { if (this.findController) {\n        this.findController.matchType = findFuzzy;\n    } }\n    get expandOnDoubleClick() { return typeof this._options.expandOnDoubleClick === 'undefined' ? true : this._options.expandOnDoubleClick; }\n    get expandOnlyOnTwistieClick() { return typeof this._options.expandOnlyOnTwistieClick === 'undefined' ? true : this._options.expandOnlyOnTwistieClick; }\n    get onDidDispose() { return this.view.onDidDispose; }\n    constructor(_user, container, delegate, renderers, _options = {}) {\n        this._user = _user;\n        this._options = _options;\n        this.eventBufferer = new EventBufferer();\n        this.onDidChangeFindOpenState = Event.None;\n        this.onDidChangeStickyScrollFocused = Event.None;\n        this.disposables = new DisposableStore();\n        this._onWillRefilter = new Emitter();\n        this.onWillRefilter = this._onWillRefilter.event;\n        this._onDidUpdateOptions = new Emitter();\n        this.treeDelegate = new ComposedTreeDelegate(delegate);\n        const onDidChangeCollapseStateRelay = new Relay();\n        const onDidChangeActiveNodes = new Relay();\n        const activeNodes = this.disposables.add(new EventCollection(onDidChangeActiveNodes.event));\n        const renderedIndentGuides = new SetMap();\n        this.renderers = renderers.map(r => new TreeRenderer(r, () => this.model, onDidChangeCollapseStateRelay.event, activeNodes, renderedIndentGuides, _options));\n        for (const r of this.renderers) {\n            this.disposables.add(r);\n        }\n        let filter;\n        if (_options.keyboardNavigationLabelProvider) {\n            filter = new FindFilter(this, _options.keyboardNavigationLabelProvider, _options.filter);\n            _options = { ..._options, filter: filter }; // TODO need typescript help here\n            this.disposables.add(filter);\n        }\n        this.focus = new Trait(() => this.view.getFocusedElements()[0], _options.identityProvider);\n        this.selection = new Trait(() => this.view.getSelectedElements()[0], _options.identityProvider);\n        this.anchor = new Trait(() => this.view.getAnchorElement(), _options.identityProvider);\n        this.view = new TreeNodeList(_user, container, this.treeDelegate, this.renderers, this.focus, this.selection, this.anchor, { ...asListOptions(() => this.model, _options), tree: this, stickyScrollProvider: () => this.stickyScrollController });\n        this.model = this.createModel(_user, this.view, _options);\n        onDidChangeCollapseStateRelay.input = this.model.onDidChangeCollapseState;\n        const onDidModelSplice = Event.forEach(this.model.onDidSplice, e => {\n            this.eventBufferer.bufferEvents(() => {\n                this.focus.onDidModelSplice(e);\n                this.selection.onDidModelSplice(e);\n            });\n        }, this.disposables);\n        // Make sure the `forEach` always runs\n        onDidModelSplice(() => null, null, this.disposables);\n        // Active nodes can change when the model changes or when focus or selection change.\n        // We debounce it with 0 delay since these events may fire in the same stack and we only\n        // want to run this once. It also doesn't matter if it runs on the next tick since it's only\n        // a nice to have UI feature.\n        const activeNodesEmitter = this.disposables.add(new Emitter());\n        const activeNodesDebounce = this.disposables.add(new Delayer(0));\n        this.disposables.add(Event.any(onDidModelSplice, this.focus.onDidChange, this.selection.onDidChange)(() => {\n            activeNodesDebounce.trigger(() => {\n                const set = new Set();\n                for (const node of this.focus.getNodes()) {\n                    set.add(node);\n                }\n                for (const node of this.selection.getNodes()) {\n                    set.add(node);\n                }\n                activeNodesEmitter.fire([...set.values()]);\n            });\n        }));\n        onDidChangeActiveNodes.input = activeNodesEmitter.event;\n        if (_options.keyboardSupport !== false) {\n            const onKeyDown = Event.chain(this.view.onKeyDown, $ => $.filter(e => !isInputElement(e.target))\n                .map(e => new StandardKeyboardEvent(e)));\n            Event.chain(onKeyDown, $ => $.filter(e => e.keyCode === 15 /* KeyCode.LeftArrow */))(this.onLeftArrow, this, this.disposables);\n            Event.chain(onKeyDown, $ => $.filter(e => e.keyCode === 17 /* KeyCode.RightArrow */))(this.onRightArrow, this, this.disposables);\n            Event.chain(onKeyDown, $ => $.filter(e => e.keyCode === 10 /* KeyCode.Space */))(this.onSpace, this, this.disposables);\n        }\n        if ((_options.findWidgetEnabled ?? true) && _options.keyboardNavigationLabelProvider && _options.contextViewProvider) {\n            const opts = this.options.findWidgetStyles ? { styles: this.options.findWidgetStyles } : undefined;\n            this.findController = new FindController(this, this.model, this.view, filter, _options.contextViewProvider, opts);\n            this.focusNavigationFilter = node => this.findController.shouldAllowFocus(node);\n            this.onDidChangeFindOpenState = this.findController.onDidChangeOpenState;\n            this.disposables.add(this.findController);\n            this.onDidChangeFindMode = this.findController.onDidChangeMode;\n            this.onDidChangeFindMatchType = this.findController.onDidChangeMatchType;\n        }\n        else {\n            this.onDidChangeFindMode = Event.None;\n            this.onDidChangeFindMatchType = Event.None;\n        }\n        if (_options.enableStickyScroll) {\n            this.stickyScrollController = new StickyScrollController(this, this.model, this.view, this.renderers, this.treeDelegate, _options);\n            this.onDidChangeStickyScrollFocused = this.stickyScrollController.onDidChangeHasFocus;\n        }\n        this.styleElement = createStyleSheet(this.view.getHTMLElement());\n        this.getHTMLElement().classList.toggle('always', this._options.renderIndentGuides === RenderIndentGuides.Always);\n    }\n    updateOptions(optionsUpdate = {}) {\n        this._options = { ...this._options, ...optionsUpdate };\n        for (const renderer of this.renderers) {\n            renderer.updateOptions(optionsUpdate);\n        }\n        this.view.updateOptions(this._options);\n        this.findController?.updateOptions(optionsUpdate);\n        this.updateStickyScroll(optionsUpdate);\n        this._onDidUpdateOptions.fire(this._options);\n        this.getHTMLElement().classList.toggle('always', this._options.renderIndentGuides === RenderIndentGuides.Always);\n    }\n    get options() {\n        return this._options;\n    }\n    updateStickyScroll(optionsUpdate) {\n        if (!this.stickyScrollController && this._options.enableStickyScroll) {\n            this.stickyScrollController = new StickyScrollController(this, this.model, this.view, this.renderers, this.treeDelegate, this._options);\n            this.onDidChangeStickyScrollFocused = this.stickyScrollController.onDidChangeHasFocus;\n        }\n        else if (this.stickyScrollController && !this._options.enableStickyScroll) {\n            this.onDidChangeStickyScrollFocused = Event.None;\n            this.stickyScrollController.dispose();\n            this.stickyScrollController = undefined;\n        }\n        this.stickyScrollController?.updateOptions(optionsUpdate);\n    }\n    // Widget\n    getHTMLElement() {\n        return this.view.getHTMLElement();\n    }\n    get scrollTop() {\n        return this.view.scrollTop;\n    }\n    set scrollTop(scrollTop) {\n        this.view.scrollTop = scrollTop;\n    }\n    get scrollHeight() {\n        return this.view.scrollHeight;\n    }\n    get renderHeight() {\n        return this.view.renderHeight;\n    }\n    get ariaLabel() {\n        return this.view.ariaLabel;\n    }\n    set ariaLabel(value) {\n        this.view.ariaLabel = value;\n    }\n    domFocus() {\n        if (this.stickyScrollController?.focusedLast()) {\n            this.stickyScrollController.domFocus();\n        }\n        else {\n            this.view.domFocus();\n        }\n    }\n    layout(height, width) {\n        this.view.layout(height, width);\n        if (isNumber(width)) {\n            this.findController?.layout(width);\n        }\n    }\n    style(styles) {\n        const suffix = `.${this.view.domId}`;\n        const content = [];\n        if (styles.treeIndentGuidesStroke) {\n            content.push(`.monaco-list${suffix}:hover .monaco-tl-indent > .indent-guide, .monaco-list${suffix}.always .monaco-tl-indent > .indent-guide  { border-color: ${styles.treeInactiveIndentGuidesStroke}; }`);\n            content.push(`.monaco-list${suffix} .monaco-tl-indent > .indent-guide.active { border-color: ${styles.treeIndentGuidesStroke}; }`);\n        }\n        // Sticky Scroll Background\n        const stickyScrollBackground = styles.treeStickyScrollBackground ?? styles.listBackground;\n        if (stickyScrollBackground) {\n            content.push(`.monaco-list${suffix} .monaco-scrollable-element .monaco-tree-sticky-container { background-color: ${stickyScrollBackground}; }`);\n            content.push(`.monaco-list${suffix} .monaco-scrollable-element .monaco-tree-sticky-container .monaco-tree-sticky-row { background-color: ${stickyScrollBackground}; }`);\n        }\n        // Sticky Scroll Border\n        if (styles.treeStickyScrollBorder) {\n            content.push(`.monaco-list${suffix} .monaco-scrollable-element .monaco-tree-sticky-container { border-bottom: 1px solid ${styles.treeStickyScrollBorder}; }`);\n        }\n        // Sticky Scroll Shadow\n        if (styles.treeStickyScrollShadow) {\n            content.push(`.monaco-list${suffix} .monaco-scrollable-element .monaco-tree-sticky-container .monaco-tree-sticky-container-shadow { box-shadow: ${styles.treeStickyScrollShadow} 0 6px 6px -6px inset; height: 3px; }`);\n        }\n        // Sticky Scroll Focus\n        if (styles.listFocusForeground) {\n            content.push(`.monaco-list${suffix}.sticky-scroll-focused .monaco-scrollable-element .monaco-tree-sticky-container:focus .monaco-list-row.focused { color: ${styles.listFocusForeground}; }`);\n            content.push(`.monaco-list${suffix}:not(.sticky-scroll-focused) .monaco-scrollable-element .monaco-tree-sticky-container .monaco-list-row.focused { color: inherit; }`);\n        }\n        // Sticky Scroll Focus Outlines\n        const focusAndSelectionOutline = asCssValueWithDefault(styles.listFocusAndSelectionOutline, asCssValueWithDefault(styles.listSelectionOutline, styles.listFocusOutline ?? ''));\n        if (focusAndSelectionOutline) { // default: listFocusOutline\n            content.push(`.monaco-list${suffix}.sticky-scroll-focused .monaco-scrollable-element .monaco-tree-sticky-container:focus .monaco-list-row.focused.selected { outline: 1px solid ${focusAndSelectionOutline}; outline-offset: -1px;}`);\n            content.push(`.monaco-list${suffix}:not(.sticky-scroll-focused) .monaco-scrollable-element .monaco-tree-sticky-container .monaco-list-row.focused.selected { outline: inherit;}`);\n        }\n        if (styles.listFocusOutline) { // default: set\n            content.push(`.monaco-list${suffix}.sticky-scroll-focused .monaco-scrollable-element .monaco-tree-sticky-container:focus .monaco-list-row.focused { outline: 1px solid ${styles.listFocusOutline}; outline-offset: -1px; }`);\n            content.push(`.monaco-list${suffix}:not(.sticky-scroll-focused) .monaco-scrollable-element .monaco-tree-sticky-container .monaco-list-row.focused { outline: inherit; }`);\n            content.push(`.monaco-workbench.context-menu-visible .monaco-list${suffix}.last-focused.sticky-scroll-focused .monaco-scrollable-element .monaco-tree-sticky-container .monaco-list-row.passive-focused { outline: 1px solid ${styles.listFocusOutline}; outline-offset: -1px; }`);\n            content.push(`.monaco-workbench.context-menu-visible .monaco-list${suffix}.last-focused.sticky-scroll-focused .monaco-list-rows .monaco-list-row.focused { outline: inherit; }`);\n            content.push(`.monaco-workbench.context-menu-visible .monaco-list${suffix}.last-focused:not(.sticky-scroll-focused) .monaco-tree-sticky-container .monaco-list-rows .monaco-list-row.focused { outline: inherit; }`);\n        }\n        this.styleElement.textContent = content.join('\\n');\n        this.view.style(styles);\n    }\n    // Tree navigation\n    getParentElement(location) {\n        const parentRef = this.model.getParentNodeLocation(location);\n        const parentNode = this.model.getNode(parentRef);\n        return parentNode.element;\n    }\n    getFirstElementChild(location) {\n        return this.model.getFirstElementChild(location);\n    }\n    // Tree\n    getNode(location) {\n        return this.model.getNode(location);\n    }\n    getNodeLocation(node) {\n        return this.model.getNodeLocation(node);\n    }\n    collapse(location, recursive = false) {\n        return this.model.setCollapsed(location, true, recursive);\n    }\n    expand(location, recursive = false) {\n        return this.model.setCollapsed(location, false, recursive);\n    }\n    toggleCollapsed(location, recursive = false) {\n        return this.model.setCollapsed(location, undefined, recursive);\n    }\n    isCollapsible(location) {\n        return this.model.isCollapsible(location);\n    }\n    setCollapsible(location, collapsible) {\n        return this.model.setCollapsible(location, collapsible);\n    }\n    isCollapsed(location) {\n        return this.model.isCollapsed(location);\n    }\n    refilter() {\n        this._onWillRefilter.fire(undefined);\n        this.model.refilter();\n    }\n    setSelection(elements, browserEvent) {\n        this.eventBufferer.bufferEvents(() => {\n            const nodes = elements.map(e => this.model.getNode(e));\n            this.selection.set(nodes, browserEvent);\n            const indexes = elements.map(e => this.model.getListIndex(e)).filter(i => i > -1);\n            this.view.setSelection(indexes, browserEvent, true);\n        });\n    }\n    getSelection() {\n        return this.selection.get();\n    }\n    setFocus(elements, browserEvent) {\n        this.eventBufferer.bufferEvents(() => {\n            const nodes = elements.map(e => this.model.getNode(e));\n            this.focus.set(nodes, browserEvent);\n            const indexes = elements.map(e => this.model.getListIndex(e)).filter(i => i > -1);\n            this.view.setFocus(indexes, browserEvent, true);\n        });\n    }\n    focusNext(n = 1, loop = false, browserEvent, filter = (isKeyboardEvent(browserEvent) && browserEvent.altKey) ? undefined : this.focusNavigationFilter) {\n        this.view.focusNext(n, loop, browserEvent, filter);\n    }\n    focusPrevious(n = 1, loop = false, browserEvent, filter = (isKeyboardEvent(browserEvent) && browserEvent.altKey) ? undefined : this.focusNavigationFilter) {\n        this.view.focusPrevious(n, loop, browserEvent, filter);\n    }\n    focusNextPage(browserEvent, filter = (isKeyboardEvent(browserEvent) && browserEvent.altKey) ? undefined : this.focusNavigationFilter) {\n        return this.view.focusNextPage(browserEvent, filter);\n    }\n    focusPreviousPage(browserEvent, filter = (isKeyboardEvent(browserEvent) && browserEvent.altKey) ? undefined : this.focusNavigationFilter) {\n        return this.view.focusPreviousPage(browserEvent, filter, () => this.stickyScrollController?.height ?? 0);\n    }\n    focusLast(browserEvent, filter = (isKeyboardEvent(browserEvent) && browserEvent.altKey) ? undefined : this.focusNavigationFilter) {\n        this.view.focusLast(browserEvent, filter);\n    }\n    focusFirst(browserEvent, filter = (isKeyboardEvent(browserEvent) && browserEvent.altKey) ? undefined : this.focusNavigationFilter) {\n        this.view.focusFirst(browserEvent, filter);\n    }\n    getFocus() {\n        return this.focus.get();\n    }\n    reveal(location, relativeTop) {\n        this.model.expandTo(location);\n        const index = this.model.getListIndex(location);\n        if (index === -1) {\n            return;\n        }\n        if (!this.stickyScrollController) {\n            this.view.reveal(index, relativeTop);\n        }\n        else {\n            const paddingTop = this.stickyScrollController.nodePositionTopBelowWidget(this.getNode(location));\n            this.view.reveal(index, relativeTop, paddingTop);\n        }\n    }\n    // List\n    onLeftArrow(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const nodes = this.view.getFocusedElements();\n        if (nodes.length === 0) {\n            return;\n        }\n        const node = nodes[0];\n        const location = this.model.getNodeLocation(node);\n        const didChange = this.model.setCollapsed(location, true);\n        if (!didChange) {\n            const parentLocation = this.model.getParentNodeLocation(location);\n            if (!parentLocation) {\n                return;\n            }\n            const parentListIndex = this.model.getListIndex(parentLocation);\n            this.view.reveal(parentListIndex);\n            this.view.setFocus([parentListIndex]);\n        }\n    }\n    onRightArrow(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const nodes = this.view.getFocusedElements();\n        if (nodes.length === 0) {\n            return;\n        }\n        const node = nodes[0];\n        const location = this.model.getNodeLocation(node);\n        const didChange = this.model.setCollapsed(location, false);\n        if (!didChange) {\n            if (!node.children.some(child => child.visible)) {\n                return;\n            }\n            const [focusedIndex] = this.view.getFocus();\n            const firstChildIndex = focusedIndex + 1;\n            this.view.reveal(firstChildIndex);\n            this.view.setFocus([firstChildIndex]);\n        }\n    }\n    onSpace(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const nodes = this.view.getFocusedElements();\n        if (nodes.length === 0) {\n            return;\n        }\n        const node = nodes[0];\n        const location = this.model.getNodeLocation(node);\n        const recursive = e.browserEvent.altKey;\n        this.model.setCollapsed(location, undefined, recursive);\n    }\n    dispose() {\n        dispose(this.disposables);\n        this.stickyScrollController?.dispose();\n        this.view.dispose();\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2980, "column": 0}, "map": {"version":3,"sources":["file:///Users/jloka/Documents/repos/personal/shared-workshop/node_modules/.pnpm/monaco-editor%400.52.2/node_modules/monaco-editor/esm/vs/base/browser/ui/tree/objectTreeModel.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { IndexTreeModel } from './indexTreeModel.js';\nimport { ObjectTreeElementCollapseState, TreeError } from './tree.js';\nimport { Iterable } from '../../../common/iterator.js';\nexport class ObjectTreeModel {\n    constructor(user, list, options = {}) {\n        this.user = user;\n        this.rootRef = null;\n        this.nodes = new Map();\n        this.nodesByIdentity = new Map();\n        this.model = new IndexTreeModel(user, list, null, options);\n        this.onDidSplice = this.model.onDidSplice;\n        this.onDidChangeCollapseState = this.model.onDidChangeCollapseState;\n        this.onDidChangeRenderNodeCount = this.model.onDidChangeRenderNodeCount;\n        if (options.sorter) {\n            this.sorter = {\n                compare(a, b) {\n                    return options.sorter.compare(a.element, b.element);\n                }\n            };\n        }\n        this.identityProvider = options.identityProvider;\n    }\n    setChildren(element, children = Iterable.empty(), options = {}) {\n        const location = this.getElementLocation(element);\n        this._setChildren(location, this.preserveCollapseState(children), options);\n    }\n    _setChildren(location, children = Iterable.empty(), options) {\n        const insertedElements = new Set();\n        const insertedElementIds = new Set();\n        const onDidCreateNode = (node) => {\n            if (node.element === null) {\n                return;\n            }\n            const tnode = node;\n            insertedElements.add(tnode.element);\n            this.nodes.set(tnode.element, tnode);\n            if (this.identityProvider) {\n                const id = this.identityProvider.getId(tnode.element).toString();\n                insertedElementIds.add(id);\n                this.nodesByIdentity.set(id, tnode);\n            }\n            options.onDidCreateNode?.(tnode);\n        };\n        const onDidDeleteNode = (node) => {\n            if (node.element === null) {\n                return;\n            }\n            const tnode = node;\n            if (!insertedElements.has(tnode.element)) {\n                this.nodes.delete(tnode.element);\n            }\n            if (this.identityProvider) {\n                const id = this.identityProvider.getId(tnode.element).toString();\n                if (!insertedElementIds.has(id)) {\n                    this.nodesByIdentity.delete(id);\n                }\n            }\n            options.onDidDeleteNode?.(tnode);\n        };\n        this.model.splice([...location, 0], Number.MAX_VALUE, children, { ...options, onDidCreateNode, onDidDeleteNode });\n    }\n    preserveCollapseState(elements = Iterable.empty()) {\n        if (this.sorter) {\n            elements = [...elements].sort(this.sorter.compare.bind(this.sorter));\n        }\n        return Iterable.map(elements, treeElement => {\n            let node = this.nodes.get(treeElement.element);\n            if (!node && this.identityProvider) {\n                const id = this.identityProvider.getId(treeElement.element).toString();\n                node = this.nodesByIdentity.get(id);\n            }\n            if (!node) {\n                let collapsed;\n                if (typeof treeElement.collapsed === 'undefined') {\n                    collapsed = undefined;\n                }\n                else if (treeElement.collapsed === ObjectTreeElementCollapseState.Collapsed || treeElement.collapsed === ObjectTreeElementCollapseState.PreserveOrCollapsed) {\n                    collapsed = true;\n                }\n                else if (treeElement.collapsed === ObjectTreeElementCollapseState.Expanded || treeElement.collapsed === ObjectTreeElementCollapseState.PreserveOrExpanded) {\n                    collapsed = false;\n                }\n                else {\n                    collapsed = Boolean(treeElement.collapsed);\n                }\n                return {\n                    ...treeElement,\n                    children: this.preserveCollapseState(treeElement.children),\n                    collapsed\n                };\n            }\n            const collapsible = typeof treeElement.collapsible === 'boolean' ? treeElement.collapsible : node.collapsible;\n            let collapsed;\n            if (typeof treeElement.collapsed === 'undefined' || treeElement.collapsed === ObjectTreeElementCollapseState.PreserveOrCollapsed || treeElement.collapsed === ObjectTreeElementCollapseState.PreserveOrExpanded) {\n                collapsed = node.collapsed;\n            }\n            else if (treeElement.collapsed === ObjectTreeElementCollapseState.Collapsed) {\n                collapsed = true;\n            }\n            else if (treeElement.collapsed === ObjectTreeElementCollapseState.Expanded) {\n                collapsed = false;\n            }\n            else {\n                collapsed = Boolean(treeElement.collapsed);\n            }\n            return {\n                ...treeElement,\n                collapsible,\n                collapsed,\n                children: this.preserveCollapseState(treeElement.children)\n            };\n        });\n    }\n    rerender(element) {\n        const location = this.getElementLocation(element);\n        this.model.rerender(location);\n    }\n    getFirstElementChild(ref = null) {\n        const location = this.getElementLocation(ref);\n        return this.model.getFirstElementChild(location);\n    }\n    has(element) {\n        return this.nodes.has(element);\n    }\n    getListIndex(element) {\n        const location = this.getElementLocation(element);\n        return this.model.getListIndex(location);\n    }\n    getListRenderCount(element) {\n        const location = this.getElementLocation(element);\n        return this.model.getListRenderCount(location);\n    }\n    isCollapsible(element) {\n        const location = this.getElementLocation(element);\n        return this.model.isCollapsible(location);\n    }\n    setCollapsible(element, collapsible) {\n        const location = this.getElementLocation(element);\n        return this.model.setCollapsible(location, collapsible);\n    }\n    isCollapsed(element) {\n        const location = this.getElementLocation(element);\n        return this.model.isCollapsed(location);\n    }\n    setCollapsed(element, collapsed, recursive) {\n        const location = this.getElementLocation(element);\n        return this.model.setCollapsed(location, collapsed, recursive);\n    }\n    expandTo(element) {\n        const location = this.getElementLocation(element);\n        this.model.expandTo(location);\n    }\n    refilter() {\n        this.model.refilter();\n    }\n    getNode(element = null) {\n        if (element === null) {\n            return this.model.getNode(this.model.rootRef);\n        }\n        const node = this.nodes.get(element);\n        if (!node) {\n            throw new TreeError(this.user, `Tree element not found: ${element}`);\n        }\n        return node;\n    }\n    getNodeLocation(node) {\n        return node.element;\n    }\n    getParentNodeLocation(element) {\n        if (element === null) {\n            throw new TreeError(this.user, `Invalid getParentNodeLocation call`);\n        }\n        const node = this.nodes.get(element);\n        if (!node) {\n            throw new TreeError(this.user, `Tree element not found: ${element}`);\n        }\n        const location = this.model.getNodeLocation(node);\n        const parentLocation = this.model.getParentNodeLocation(location);\n        const parent = this.model.getNode(parentLocation);\n        return parent.element;\n    }\n    getElementLocation(element) {\n        if (element === null) {\n            return [];\n        }\n        const node = this.nodes.get(element);\n        if (!node) {\n            throw new TreeError(this.user, `Tree element not found: ${element}`);\n        }\n        return this.model.getNodeLocation(node);\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3195, "column": 0}, "map": {"version":3,"sources":["file:///Users/jloka/Documents/repos/personal/shared-workshop/node_modules/.pnpm/monaco-editor%400.52.2/node_modules/monaco-editor/esm/vs/base/browser/ui/tree/compressedObjectTreeModel.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ObjectTreeModel } from './objectTreeModel.js';\nimport { TreeError, WeakMapper } from './tree.js';\nimport { equals } from '../../../common/arrays.js';\nimport { Event } from '../../../common/event.js';\nimport { Iterable } from '../../../common/iterator.js';\nfunction noCompress(element) {\n    const elements = [element.element];\n    const incompressible = element.incompressible || false;\n    return {\n        element: { elements, incompressible },\n        children: Iterable.map(Iterable.from(element.children), noCompress),\n        collapsible: element.collapsible,\n        collapsed: element.collapsed\n    };\n}\n// Exported only for test reasons, do not use directly\nexport function compress(element) {\n    const elements = [element.element];\n    const incompressible = element.incompressible || false;\n    let childrenIterator;\n    let children;\n    while (true) {\n        [children, childrenIterator] = Iterable.consume(Iterable.from(element.children), 2);\n        if (children.length !== 1) {\n            break;\n        }\n        if (children[0].incompressible) {\n            break;\n        }\n        element = children[0];\n        elements.push(element.element);\n    }\n    return {\n        element: { elements, incompressible },\n        children: Iterable.map(Iterable.concat(children, childrenIterator), compress),\n        collapsible: element.collapsible,\n        collapsed: element.collapsed\n    };\n}\nfunction _decompress(element, index = 0) {\n    let children;\n    if (index < element.element.elements.length - 1) {\n        children = [_decompress(element, index + 1)];\n    }\n    else {\n        children = Iterable.map(Iterable.from(element.children), el => _decompress(el, 0));\n    }\n    if (index === 0 && element.element.incompressible) {\n        return {\n            element: element.element.elements[index],\n            children,\n            incompressible: true,\n            collapsible: element.collapsible,\n            collapsed: element.collapsed\n        };\n    }\n    return {\n        element: element.element.elements[index],\n        children,\n        collapsible: element.collapsible,\n        collapsed: element.collapsed\n    };\n}\n// Exported only for test reasons, do not use directly\nexport function decompress(element) {\n    return _decompress(element, 0);\n}\nfunction splice(treeElement, element, children) {\n    if (treeElement.element === element) {\n        return { ...treeElement, children };\n    }\n    return { ...treeElement, children: Iterable.map(Iterable.from(treeElement.children), e => splice(e, element, children)) };\n}\nconst wrapIdentityProvider = (base) => ({\n    getId(node) {\n        return node.elements.map(e => base.getId(e).toString()).join('\\0');\n    }\n});\n// Exported only for test reasons, do not use directly\nexport class CompressedObjectTreeModel {\n    get onDidSplice() { return this.model.onDidSplice; }\n    get onDidChangeCollapseState() { return this.model.onDidChangeCollapseState; }\n    get onDidChangeRenderNodeCount() { return this.model.onDidChangeRenderNodeCount; }\n    constructor(user, list, options = {}) {\n        this.user = user;\n        this.rootRef = null;\n        this.nodes = new Map();\n        this.model = new ObjectTreeModel(user, list, options);\n        this.enabled = typeof options.compressionEnabled === 'undefined' ? true : options.compressionEnabled;\n        this.identityProvider = options.identityProvider;\n    }\n    setChildren(element, children = Iterable.empty(), options) {\n        // Diffs must be deep, since the compression can affect nested elements.\n        // @see https://github.com/microsoft/vscode/pull/114237#issuecomment-759425034\n        const diffIdentityProvider = options.diffIdentityProvider && wrapIdentityProvider(options.diffIdentityProvider);\n        if (element === null) {\n            const compressedChildren = Iterable.map(children, this.enabled ? compress : noCompress);\n            this._setChildren(null, compressedChildren, { diffIdentityProvider, diffDepth: Infinity });\n            return;\n        }\n        const compressedNode = this.nodes.get(element);\n        if (!compressedNode) {\n            throw new TreeError(this.user, 'Unknown compressed tree node');\n        }\n        const node = this.model.getNode(compressedNode);\n        const compressedParentNode = this.model.getParentNodeLocation(compressedNode);\n        const parent = this.model.getNode(compressedParentNode);\n        const decompressedElement = decompress(node);\n        const splicedElement = splice(decompressedElement, element, children);\n        const recompressedElement = (this.enabled ? compress : noCompress)(splicedElement);\n        // If the recompressed node is identical to the original, just set its children.\n        // Saves work and churn diffing the parent element.\n        const elementComparator = options.diffIdentityProvider\n            ? ((a, b) => options.diffIdentityProvider.getId(a) === options.diffIdentityProvider.getId(b))\n            : undefined;\n        if (equals(recompressedElement.element.elements, node.element.elements, elementComparator)) {\n            this._setChildren(compressedNode, recompressedElement.children || Iterable.empty(), { diffIdentityProvider, diffDepth: 1 });\n            return;\n        }\n        const parentChildren = parent.children\n            .map(child => child === node ? recompressedElement : child);\n        this._setChildren(parent.element, parentChildren, {\n            diffIdentityProvider,\n            diffDepth: node.depth - parent.depth,\n        });\n    }\n    isCompressionEnabled() {\n        return this.enabled;\n    }\n    setCompressionEnabled(enabled) {\n        if (enabled === this.enabled) {\n            return;\n        }\n        this.enabled = enabled;\n        const root = this.model.getNode();\n        const rootChildren = root.children;\n        const decompressedRootChildren = Iterable.map(rootChildren, decompress);\n        const recompressedRootChildren = Iterable.map(decompressedRootChildren, enabled ? compress : noCompress);\n        // it should be safe to always use deep diff mode here if an identity\n        // provider is available, since we know the raw nodes are unchanged.\n        this._setChildren(null, recompressedRootChildren, {\n            diffIdentityProvider: this.identityProvider,\n            diffDepth: Infinity,\n        });\n    }\n    _setChildren(node, children, options) {\n        const insertedElements = new Set();\n        const onDidCreateNode = (node) => {\n            for (const element of node.element.elements) {\n                insertedElements.add(element);\n                this.nodes.set(element, node.element);\n            }\n        };\n        const onDidDeleteNode = (node) => {\n            for (const element of node.element.elements) {\n                if (!insertedElements.has(element)) {\n                    this.nodes.delete(element);\n                }\n            }\n        };\n        this.model.setChildren(node, children, { ...options, onDidCreateNode, onDidDeleteNode });\n    }\n    has(element) {\n        return this.nodes.has(element);\n    }\n    getListIndex(location) {\n        const node = this.getCompressedNode(location);\n        return this.model.getListIndex(node);\n    }\n    getListRenderCount(location) {\n        const node = this.getCompressedNode(location);\n        return this.model.getListRenderCount(node);\n    }\n    getNode(location) {\n        if (typeof location === 'undefined') {\n            return this.model.getNode();\n        }\n        const node = this.getCompressedNode(location);\n        return this.model.getNode(node);\n    }\n    // TODO: review this\n    getNodeLocation(node) {\n        const compressedNode = this.model.getNodeLocation(node);\n        if (compressedNode === null) {\n            return null;\n        }\n        return compressedNode.elements[compressedNode.elements.length - 1];\n    }\n    // TODO: review this\n    getParentNodeLocation(location) {\n        const compressedNode = this.getCompressedNode(location);\n        const parentNode = this.model.getParentNodeLocation(compressedNode);\n        if (parentNode === null) {\n            return null;\n        }\n        return parentNode.elements[parentNode.elements.length - 1];\n    }\n    getFirstElementChild(location) {\n        const compressedNode = this.getCompressedNode(location);\n        return this.model.getFirstElementChild(compressedNode);\n    }\n    isCollapsible(location) {\n        const compressedNode = this.getCompressedNode(location);\n        return this.model.isCollapsible(compressedNode);\n    }\n    setCollapsible(location, collapsible) {\n        const compressedNode = this.getCompressedNode(location);\n        return this.model.setCollapsible(compressedNode, collapsible);\n    }\n    isCollapsed(location) {\n        const compressedNode = this.getCompressedNode(location);\n        return this.model.isCollapsed(compressedNode);\n    }\n    setCollapsed(location, collapsed, recursive) {\n        const compressedNode = this.getCompressedNode(location);\n        return this.model.setCollapsed(compressedNode, collapsed, recursive);\n    }\n    expandTo(location) {\n        const compressedNode = this.getCompressedNode(location);\n        this.model.expandTo(compressedNode);\n    }\n    rerender(location) {\n        const compressedNode = this.getCompressedNode(location);\n        this.model.rerender(compressedNode);\n    }\n    refilter() {\n        this.model.refilter();\n    }\n    getCompressedNode(element) {\n        if (element === null) {\n            return null;\n        }\n        const node = this.nodes.get(element);\n        if (!node) {\n            throw new TreeError(this.user, `Tree element not found: ${element}`);\n        }\n        return node;\n    }\n}\nexport const DefaultElementMapper = elements => elements[elements.length - 1];\nclass CompressedTreeNodeWrapper {\n    get element() { return this.node.element === null ? null : this.unwrapper(this.node.element); }\n    get children() { return this.node.children.map(node => new CompressedTreeNodeWrapper(this.unwrapper, node)); }\n    get depth() { return this.node.depth; }\n    get visibleChildrenCount() { return this.node.visibleChildrenCount; }\n    get visibleChildIndex() { return this.node.visibleChildIndex; }\n    get collapsible() { return this.node.collapsible; }\n    get collapsed() { return this.node.collapsed; }\n    get visible() { return this.node.visible; }\n    get filterData() { return this.node.filterData; }\n    constructor(unwrapper, node) {\n        this.unwrapper = unwrapper;\n        this.node = node;\n    }\n}\nfunction mapList(nodeMapper, list) {\n    return {\n        splice(start, deleteCount, toInsert) {\n            list.splice(start, deleteCount, toInsert.map(node => nodeMapper.map(node)));\n        },\n        updateElementHeight(index, height) {\n            list.updateElementHeight(index, height);\n        }\n    };\n}\nfunction mapOptions(compressedNodeUnwrapper, options) {\n    return {\n        ...options,\n        identityProvider: options.identityProvider && {\n            getId(node) {\n                return options.identityProvider.getId(compressedNodeUnwrapper(node));\n            }\n        },\n        sorter: options.sorter && {\n            compare(node, otherNode) {\n                return options.sorter.compare(node.elements[0], otherNode.elements[0]);\n            }\n        },\n        filter: options.filter && {\n            filter(node, parentVisibility) {\n                return options.filter.filter(compressedNodeUnwrapper(node), parentVisibility);\n            }\n        }\n    };\n}\nexport class CompressibleObjectTreeModel {\n    get onDidSplice() {\n        return Event.map(this.model.onDidSplice, ({ insertedNodes, deletedNodes }) => ({\n            insertedNodes: insertedNodes.map(node => this.nodeMapper.map(node)),\n            deletedNodes: deletedNodes.map(node => this.nodeMapper.map(node)),\n        }));\n    }\n    get onDidChangeCollapseState() {\n        return Event.map(this.model.onDidChangeCollapseState, ({ node, deep }) => ({\n            node: this.nodeMapper.map(node),\n            deep\n        }));\n    }\n    get onDidChangeRenderNodeCount() {\n        return Event.map(this.model.onDidChangeRenderNodeCount, node => this.nodeMapper.map(node));\n    }\n    constructor(user, list, options = {}) {\n        this.rootRef = null;\n        this.elementMapper = options.elementMapper || DefaultElementMapper;\n        const compressedNodeUnwrapper = node => this.elementMapper(node.elements);\n        this.nodeMapper = new WeakMapper(node => new CompressedTreeNodeWrapper(compressedNodeUnwrapper, node));\n        this.model = new CompressedObjectTreeModel(user, mapList(this.nodeMapper, list), mapOptions(compressedNodeUnwrapper, options));\n    }\n    setChildren(element, children = Iterable.empty(), options = {}) {\n        this.model.setChildren(element, children, options);\n    }\n    isCompressionEnabled() {\n        return this.model.isCompressionEnabled();\n    }\n    setCompressionEnabled(enabled) {\n        this.model.setCompressionEnabled(enabled);\n    }\n    has(location) {\n        return this.model.has(location);\n    }\n    getListIndex(location) {\n        return this.model.getListIndex(location);\n    }\n    getListRenderCount(location) {\n        return this.model.getListRenderCount(location);\n    }\n    getNode(location) {\n        return this.nodeMapper.map(this.model.getNode(location));\n    }\n    getNodeLocation(node) {\n        return node.element;\n    }\n    getParentNodeLocation(location) {\n        return this.model.getParentNodeLocation(location);\n    }\n    getFirstElementChild(location) {\n        const result = this.model.getFirstElementChild(location);\n        if (result === null || typeof result === 'undefined') {\n            return result;\n        }\n        return this.elementMapper(result.elements);\n    }\n    isCollapsible(location) {\n        return this.model.isCollapsible(location);\n    }\n    setCollapsible(location, collapsed) {\n        return this.model.setCollapsible(location, collapsed);\n    }\n    isCollapsed(location) {\n        return this.model.isCollapsed(location);\n    }\n    setCollapsed(location, collapsed, recursive) {\n        return this.model.setCollapsed(location, collapsed, recursive);\n    }\n    expandTo(location) {\n        return this.model.expandTo(location);\n    }\n    rerender(location) {\n        return this.model.rerender(location);\n    }\n    refilter() {\n        return this.model.refilter();\n    }\n    getCompressedTreeNode(location = null) {\n        return this.model.getNode(location);\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3636, "column": 0}, "map": {"version":3,"sources":["file:///Users/jloka/Documents/repos/personal/shared-workshop/node_modules/.pnpm/monaco-editor%400.52.2/node_modules/monaco-editor/esm/vs/base/browser/ui/tree/objectTree.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { AbstractTree } from './abstractTree.js';\nimport { CompressibleObjectTreeModel } from './compressedObjectTreeModel.js';\nimport { ObjectTreeModel } from './objectTreeModel.js';\nimport { memoize } from '../../../common/decorators.js';\nimport { Iterable } from '../../../common/iterator.js';\nexport class ObjectTree extends AbstractTree {\n    get onDidChangeCollapseState() { return this.model.onDidChangeCollapseState; }\n    constructor(user, container, delegate, renderers, options = {}) {\n        super(user, container, delegate, renderers, options);\n        this.user = user;\n    }\n    setChildren(element, children = Iterable.empty(), options) {\n        this.model.setChildren(element, children, options);\n    }\n    rerender(element) {\n        if (element === undefined) {\n            this.view.rerender();\n            return;\n        }\n        this.model.rerender(element);\n    }\n    hasElement(element) {\n        return this.model.has(element);\n    }\n    createModel(user, view, options) {\n        return new ObjectTreeModel(user, view, options);\n    }\n}\nclass CompressibleRenderer {\n    get compressedTreeNodeProvider() {\n        return this._compressedTreeNodeProvider();\n    }\n    constructor(_compressedTreeNodeProvider, stickyScrollDelegate, renderer) {\n        this._compressedTreeNodeProvider = _compressedTreeNodeProvider;\n        this.stickyScrollDelegate = stickyScrollDelegate;\n        this.renderer = renderer;\n        this.templateId = renderer.templateId;\n        if (renderer.onDidChangeTwistieState) {\n            this.onDidChangeTwistieState = renderer.onDidChangeTwistieState;\n        }\n    }\n    renderTemplate(container) {\n        const data = this.renderer.renderTemplate(container);\n        return { compressedTreeNode: undefined, data };\n    }\n    renderElement(node, index, templateData, height) {\n        let compressedTreeNode = this.stickyScrollDelegate.getCompressedNode(node);\n        if (!compressedTreeNode) {\n            compressedTreeNode = this.compressedTreeNodeProvider.getCompressedTreeNode(node.element);\n        }\n        if (compressedTreeNode.element.elements.length === 1) {\n            templateData.compressedTreeNode = undefined;\n            this.renderer.renderElement(node, index, templateData.data, height);\n        }\n        else {\n            templateData.compressedTreeNode = compressedTreeNode;\n            this.renderer.renderCompressedElements(compressedTreeNode, index, templateData.data, height);\n        }\n    }\n    disposeElement(node, index, templateData, height) {\n        if (templateData.compressedTreeNode) {\n            this.renderer.disposeCompressedElements?.(templateData.compressedTreeNode, index, templateData.data, height);\n        }\n        else {\n            this.renderer.disposeElement?.(node, index, templateData.data, height);\n        }\n    }\n    disposeTemplate(templateData) {\n        this.renderer.disposeTemplate(templateData.data);\n    }\n    renderTwistie(element, twistieElement) {\n        if (this.renderer.renderTwistie) {\n            return this.renderer.renderTwistie(element, twistieElement);\n        }\n        return false;\n    }\n}\n__decorate([\n    memoize\n], CompressibleRenderer.prototype, \"compressedTreeNodeProvider\", null);\nclass CompressibleStickyScrollDelegate {\n    constructor(modelProvider) {\n        this.modelProvider = modelProvider;\n        this.compressedStickyNodes = new Map();\n    }\n    getCompressedNode(node) {\n        return this.compressedStickyNodes.get(node);\n    }\n    constrainStickyScrollNodes(stickyNodes, stickyScrollMaxItemCount, maxWidgetHeight) {\n        this.compressedStickyNodes.clear();\n        if (stickyNodes.length === 0) {\n            return [];\n        }\n        for (let i = 0; i < stickyNodes.length; i++) {\n            const stickyNode = stickyNodes[i];\n            const stickyNodeBottom = stickyNode.position + stickyNode.height;\n            const followingReachesMaxHeight = i + 1 < stickyNodes.length && stickyNodeBottom + stickyNodes[i + 1].height > maxWidgetHeight;\n            if (followingReachesMaxHeight || i >= stickyScrollMaxItemCount - 1 && stickyScrollMaxItemCount < stickyNodes.length) {\n                const uncompressedStickyNodes = stickyNodes.slice(0, i);\n                const overflowingStickyNodes = stickyNodes.slice(i);\n                const compressedStickyNode = this.compressStickyNodes(overflowingStickyNodes);\n                return [...uncompressedStickyNodes, compressedStickyNode];\n            }\n        }\n        return stickyNodes;\n    }\n    compressStickyNodes(stickyNodes) {\n        if (stickyNodes.length === 0) {\n            throw new Error('Can\\'t compress empty sticky nodes');\n        }\n        const compressionModel = this.modelProvider();\n        if (!compressionModel.isCompressionEnabled()) {\n            return stickyNodes[0];\n        }\n        // Collect all elements to be compressed\n        const elements = [];\n        for (let i = 0; i < stickyNodes.length; i++) {\n            const stickyNode = stickyNodes[i];\n            const compressedNode = compressionModel.getCompressedTreeNode(stickyNode.node.element);\n            if (compressedNode.element) {\n                // if an element is incompressible, it can't be compressed with it's parent element\n                if (i !== 0 && compressedNode.element.incompressible) {\n                    break;\n                }\n                elements.push(...compressedNode.element.elements);\n            }\n        }\n        if (elements.length < 2) {\n            return stickyNodes[0];\n        }\n        // Compress the elements\n        const lastStickyNode = stickyNodes[stickyNodes.length - 1];\n        const compressedElement = { elements, incompressible: false };\n        const compressedNode = { ...lastStickyNode.node, children: [], element: compressedElement };\n        const stickyTreeNode = new Proxy(stickyNodes[0].node, {});\n        const compressedStickyNode = {\n            node: stickyTreeNode,\n            startIndex: stickyNodes[0].startIndex,\n            endIndex: lastStickyNode.endIndex,\n            position: stickyNodes[0].position,\n            height: stickyNodes[0].height,\n        };\n        this.compressedStickyNodes.set(stickyTreeNode, compressedNode);\n        return compressedStickyNode;\n    }\n}\nfunction asObjectTreeOptions(compressedTreeNodeProvider, options) {\n    return options && {\n        ...options,\n        keyboardNavigationLabelProvider: options.keyboardNavigationLabelProvider && {\n            getKeyboardNavigationLabel(e) {\n                let compressedTreeNode;\n                try {\n                    compressedTreeNode = compressedTreeNodeProvider().getCompressedTreeNode(e);\n                }\n                catch {\n                    return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(e);\n                }\n                if (compressedTreeNode.element.elements.length === 1) {\n                    return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(e);\n                }\n                else {\n                    return options.keyboardNavigationLabelProvider.getCompressedNodeKeyboardNavigationLabel(compressedTreeNode.element.elements);\n                }\n            }\n        }\n    };\n}\nexport class CompressibleObjectTree extends ObjectTree {\n    constructor(user, container, delegate, renderers, options = {}) {\n        const compressedTreeNodeProvider = () => this;\n        const stickyScrollDelegate = new CompressibleStickyScrollDelegate(() => this.model);\n        const compressibleRenderers = renderers.map(r => new CompressibleRenderer(compressedTreeNodeProvider, stickyScrollDelegate, r));\n        super(user, container, delegate, compressibleRenderers, { ...asObjectTreeOptions(compressedTreeNodeProvider, options), stickyScrollDelegate });\n    }\n    setChildren(element, children = Iterable.empty(), options) {\n        this.model.setChildren(element, children, options);\n    }\n    createModel(user, view, options) {\n        return new CompressibleObjectTreeModel(user, view, options);\n    }\n    updateOptions(optionsUpdate = {}) {\n        super.updateOptions(optionsUpdate);\n        if (typeof optionsUpdate.compressionEnabled !== 'undefined') {\n            this.model.setCompressionEnabled(optionsUpdate.compressionEnabled);\n        }\n    }\n    getCompressedTreeNode(element = null) {\n        return this.model.getCompressedTreeNode(element);\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3869, "column": 0}, "map": {"version":3,"sources":["file:///Users/jloka/Documents/repos/personal/shared-workshop/node_modules/.pnpm/monaco-editor%400.52.2/node_modules/monaco-editor/esm/vs/base/browser/ui/tree/asyncDataTree.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ElementsDragAndDropData } from '../list/listView.js';\nimport { ComposedTreeDelegate } from './abstractTree.js';\nimport { getVisibleState, isFilterResult } from './indexTreeModel.js';\nimport { CompressibleObjectTree, ObjectTree } from './objectTree.js';\nimport { ObjectTreeElementCollapseState, TreeError, WeakMapper } from './tree.js';\nimport { createCancelablePromise, Promises, timeout } from '../../../common/async.js';\nimport { Codicon } from '../../../common/codicons.js';\nimport { ThemeIcon } from '../../../common/themables.js';\nimport { isCancellationError, onUnexpectedError } from '../../../common/errors.js';\nimport { Emitter, Event } from '../../../common/event.js';\nimport { Iterable } from '../../../common/iterator.js';\nimport { DisposableStore, dispose } from '../../../common/lifecycle.js';\nimport { isIterable } from '../../../common/types.js';\nfunction createAsyncDataTreeNode(props) {\n    return {\n        ...props,\n        children: [],\n        refreshPromise: undefined,\n        stale: true,\n        slow: false,\n        forceExpanded: false\n    };\n}\nfunction isAncestor(ancestor, descendant) {\n    if (!descendant.parent) {\n        return false;\n    }\n    else if (descendant.parent === ancestor) {\n        return true;\n    }\n    else {\n        return isAncestor(ancestor, descendant.parent);\n    }\n}\nfunction intersects(node, other) {\n    return node === other || isAncestor(node, other) || isAncestor(other, node);\n}\nclass AsyncDataTreeNodeWrapper {\n    get element() { return this.node.element.element; }\n    get children() { return this.node.children.map(node => new AsyncDataTreeNodeWrapper(node)); }\n    get depth() { return this.node.depth; }\n    get visibleChildrenCount() { return this.node.visibleChildrenCount; }\n    get visibleChildIndex() { return this.node.visibleChildIndex; }\n    get collapsible() { return this.node.collapsible; }\n    get collapsed() { return this.node.collapsed; }\n    get visible() { return this.node.visible; }\n    get filterData() { return this.node.filterData; }\n    constructor(node) {\n        this.node = node;\n    }\n}\nclass AsyncDataTreeRenderer {\n    constructor(renderer, nodeMapper, onDidChangeTwistieState) {\n        this.renderer = renderer;\n        this.nodeMapper = nodeMapper;\n        this.onDidChangeTwistieState = onDidChangeTwistieState;\n        this.renderedNodes = new Map();\n        this.templateId = renderer.templateId;\n    }\n    renderTemplate(container) {\n        const templateData = this.renderer.renderTemplate(container);\n        return { templateData };\n    }\n    renderElement(node, index, templateData, height) {\n        this.renderer.renderElement(this.nodeMapper.map(node), index, templateData.templateData, height);\n    }\n    renderTwistie(element, twistieElement) {\n        if (element.slow) {\n            twistieElement.classList.add(...ThemeIcon.asClassNameArray(Codicon.treeItemLoading));\n            return true;\n        }\n        else {\n            twistieElement.classList.remove(...ThemeIcon.asClassNameArray(Codicon.treeItemLoading));\n            return false;\n        }\n    }\n    disposeElement(node, index, templateData, height) {\n        this.renderer.disposeElement?.(this.nodeMapper.map(node), index, templateData.templateData, height);\n    }\n    disposeTemplate(templateData) {\n        this.renderer.disposeTemplate(templateData.templateData);\n    }\n    dispose() {\n        this.renderedNodes.clear();\n    }\n}\nfunction asTreeEvent(e) {\n    return {\n        browserEvent: e.browserEvent,\n        elements: e.elements.map(e => e.element)\n    };\n}\nfunction asTreeMouseEvent(e) {\n    return {\n        browserEvent: e.browserEvent,\n        element: e.element && e.element.element,\n        target: e.target\n    };\n}\nclass AsyncDataTreeElementsDragAndDropData extends ElementsDragAndDropData {\n    constructor(data) {\n        super(data.elements.map(node => node.element));\n        this.data = data;\n    }\n}\nfunction asAsyncDataTreeDragAndDropData(data) {\n    if (data instanceof ElementsDragAndDropData) {\n        return new AsyncDataTreeElementsDragAndDropData(data);\n    }\n    return data;\n}\nclass AsyncDataTreeNodeListDragAndDrop {\n    constructor(dnd) {\n        this.dnd = dnd;\n    }\n    getDragURI(node) {\n        return this.dnd.getDragURI(node.element);\n    }\n    getDragLabel(nodes, originalEvent) {\n        if (this.dnd.getDragLabel) {\n            return this.dnd.getDragLabel(nodes.map(node => node.element), originalEvent);\n        }\n        return undefined;\n    }\n    onDragStart(data, originalEvent) {\n        this.dnd.onDragStart?.(asAsyncDataTreeDragAndDropData(data), originalEvent);\n    }\n    onDragOver(data, targetNode, targetIndex, targetSector, originalEvent, raw = true) {\n        return this.dnd.onDragOver(asAsyncDataTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, targetSector, originalEvent);\n    }\n    drop(data, targetNode, targetIndex, targetSector, originalEvent) {\n        this.dnd.drop(asAsyncDataTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, targetSector, originalEvent);\n    }\n    onDragEnd(originalEvent) {\n        this.dnd.onDragEnd?.(originalEvent);\n    }\n    dispose() {\n        this.dnd.dispose();\n    }\n}\nfunction asObjectTreeOptions(options) {\n    return options && {\n        ...options,\n        collapseByDefault: true,\n        identityProvider: options.identityProvider && {\n            getId(el) {\n                return options.identityProvider.getId(el.element);\n            }\n        },\n        dnd: options.dnd && new AsyncDataTreeNodeListDragAndDrop(options.dnd),\n        multipleSelectionController: options.multipleSelectionController && {\n            isSelectionSingleChangeEvent(e) {\n                return options.multipleSelectionController.isSelectionSingleChangeEvent({ ...e, element: e.element });\n            },\n            isSelectionRangeChangeEvent(e) {\n                return options.multipleSelectionController.isSelectionRangeChangeEvent({ ...e, element: e.element });\n            }\n        },\n        accessibilityProvider: options.accessibilityProvider && {\n            ...options.accessibilityProvider,\n            getPosInSet: undefined,\n            getSetSize: undefined,\n            getRole: options.accessibilityProvider.getRole ? (el) => {\n                return options.accessibilityProvider.getRole(el.element);\n            } : () => 'treeitem',\n            isChecked: options.accessibilityProvider.isChecked ? (e) => {\n                return !!(options.accessibilityProvider?.isChecked(e.element));\n            } : undefined,\n            getAriaLabel(e) {\n                return options.accessibilityProvider.getAriaLabel(e.element);\n            },\n            getWidgetAriaLabel() {\n                return options.accessibilityProvider.getWidgetAriaLabel();\n            },\n            getWidgetRole: options.accessibilityProvider.getWidgetRole ? () => options.accessibilityProvider.getWidgetRole() : () => 'tree',\n            getAriaLevel: options.accessibilityProvider.getAriaLevel && (node => {\n                return options.accessibilityProvider.getAriaLevel(node.element);\n            }),\n            getActiveDescendantId: options.accessibilityProvider.getActiveDescendantId && (node => {\n                return options.accessibilityProvider.getActiveDescendantId(node.element);\n            })\n        },\n        filter: options.filter && {\n            filter(e, parentVisibility) {\n                return options.filter.filter(e.element, parentVisibility);\n            }\n        },\n        keyboardNavigationLabelProvider: options.keyboardNavigationLabelProvider && {\n            ...options.keyboardNavigationLabelProvider,\n            getKeyboardNavigationLabel(e) {\n                return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(e.element);\n            }\n        },\n        sorter: undefined,\n        expandOnlyOnTwistieClick: typeof options.expandOnlyOnTwistieClick === 'undefined' ? undefined : (typeof options.expandOnlyOnTwistieClick !== 'function' ? options.expandOnlyOnTwistieClick : (e => options.expandOnlyOnTwistieClick(e.element))),\n        defaultFindVisibility: e => {\n            if (e.hasChildren && e.stale) {\n                return 1 /* TreeVisibility.Visible */;\n            }\n            else if (typeof options.defaultFindVisibility === 'number') {\n                return options.defaultFindVisibility;\n            }\n            else if (typeof options.defaultFindVisibility === 'undefined') {\n                return 2 /* TreeVisibility.Recurse */;\n            }\n            else {\n                return options.defaultFindVisibility(e.element);\n            }\n        }\n    };\n}\nfunction dfs(node, fn) {\n    fn(node);\n    node.children.forEach(child => dfs(child, fn));\n}\nexport class AsyncDataTree {\n    get onDidScroll() { return this.tree.onDidScroll; }\n    get onDidChangeFocus() { return Event.map(this.tree.onDidChangeFocus, asTreeEvent); }\n    get onDidChangeSelection() { return Event.map(this.tree.onDidChangeSelection, asTreeEvent); }\n    get onMouseDblClick() { return Event.map(this.tree.onMouseDblClick, asTreeMouseEvent); }\n    get onPointer() { return Event.map(this.tree.onPointer, asTreeMouseEvent); }\n    get onDidFocus() { return this.tree.onDidFocus; }\n    /**\n     * To be used internally only!\n     * @deprecated\n     */\n    get onDidChangeModel() { return this.tree.onDidChangeModel; }\n    get onDidChangeCollapseState() { return this.tree.onDidChangeCollapseState; }\n    get onDidChangeFindOpenState() { return this.tree.onDidChangeFindOpenState; }\n    get onDidChangeStickyScrollFocused() { return this.tree.onDidChangeStickyScrollFocused; }\n    get onDidDispose() { return this.tree.onDidDispose; }\n    constructor(user, container, delegate, renderers, dataSource, options = {}) {\n        this.user = user;\n        this.dataSource = dataSource;\n        this.nodes = new Map();\n        this.subTreeRefreshPromises = new Map();\n        this.refreshPromises = new Map();\n        this._onDidRender = new Emitter();\n        this._onDidChangeNodeSlowState = new Emitter();\n        this.nodeMapper = new WeakMapper(node => new AsyncDataTreeNodeWrapper(node));\n        this.disposables = new DisposableStore();\n        this.identityProvider = options.identityProvider;\n        this.autoExpandSingleChildren = typeof options.autoExpandSingleChildren === 'undefined' ? false : options.autoExpandSingleChildren;\n        this.sorter = options.sorter;\n        this.getDefaultCollapseState = e => options.collapseByDefault ? (options.collapseByDefault(e) ? ObjectTreeElementCollapseState.PreserveOrCollapsed : ObjectTreeElementCollapseState.PreserveOrExpanded) : undefined;\n        this.tree = this.createTree(user, container, delegate, renderers, options);\n        this.onDidChangeFindMode = this.tree.onDidChangeFindMode;\n        this.onDidChangeFindMatchType = this.tree.onDidChangeFindMatchType;\n        this.root = createAsyncDataTreeNode({\n            element: undefined,\n            parent: null,\n            hasChildren: true,\n            defaultCollapseState: undefined\n        });\n        if (this.identityProvider) {\n            this.root = {\n                ...this.root,\n                id: null\n            };\n        }\n        this.nodes.set(null, this.root);\n        this.tree.onDidChangeCollapseState(this._onDidChangeCollapseState, this, this.disposables);\n    }\n    createTree(user, container, delegate, renderers, options) {\n        const objectTreeDelegate = new ComposedTreeDelegate(delegate);\n        const objectTreeRenderers = renderers.map(r => new AsyncDataTreeRenderer(r, this.nodeMapper, this._onDidChangeNodeSlowState.event));\n        const objectTreeOptions = asObjectTreeOptions(options) || {};\n        return new ObjectTree(user, container, objectTreeDelegate, objectTreeRenderers, objectTreeOptions);\n    }\n    updateOptions(options = {}) {\n        this.tree.updateOptions(options);\n    }\n    // Widget\n    getHTMLElement() {\n        return this.tree.getHTMLElement();\n    }\n    get scrollTop() {\n        return this.tree.scrollTop;\n    }\n    set scrollTop(scrollTop) {\n        this.tree.scrollTop = scrollTop;\n    }\n    get scrollHeight() {\n        return this.tree.scrollHeight;\n    }\n    get renderHeight() {\n        return this.tree.renderHeight;\n    }\n    domFocus() {\n        this.tree.domFocus();\n    }\n    layout(height, width) {\n        this.tree.layout(height, width);\n    }\n    style(styles) {\n        this.tree.style(styles);\n    }\n    // Model\n    getInput() {\n        return this.root.element;\n    }\n    async setInput(input, viewState) {\n        this.refreshPromises.forEach(promise => promise.cancel());\n        this.refreshPromises.clear();\n        this.root.element = input;\n        const viewStateContext = viewState && { viewState, focus: [], selection: [] };\n        await this._updateChildren(input, true, false, viewStateContext);\n        if (viewStateContext) {\n            this.tree.setFocus(viewStateContext.focus);\n            this.tree.setSelection(viewStateContext.selection);\n        }\n        if (viewState && typeof viewState.scrollTop === 'number') {\n            this.scrollTop = viewState.scrollTop;\n        }\n    }\n    async _updateChildren(element = this.root.element, recursive = true, rerender = false, viewStateContext, options) {\n        if (typeof this.root.element === 'undefined') {\n            throw new TreeError(this.user, 'Tree input not set');\n        }\n        if (this.root.refreshPromise) {\n            await this.root.refreshPromise;\n            await Event.toPromise(this._onDidRender.event);\n        }\n        const node = this.getDataNode(element);\n        await this.refreshAndRenderNode(node, recursive, viewStateContext, options);\n        if (rerender) {\n            try {\n                this.tree.rerender(node);\n            }\n            catch {\n                // missing nodes are fine, this could've resulted from\n                // parallel refresh calls, removing `node` altogether\n            }\n        }\n    }\n    // View\n    rerender(element) {\n        if (element === undefined || element === this.root.element) {\n            this.tree.rerender();\n            return;\n        }\n        const node = this.getDataNode(element);\n        this.tree.rerender(node);\n    }\n    // Tree\n    getNode(element = this.root.element) {\n        const dataNode = this.getDataNode(element);\n        const node = this.tree.getNode(dataNode === this.root ? null : dataNode);\n        return this.nodeMapper.map(node);\n    }\n    collapse(element, recursive = false) {\n        const node = this.getDataNode(element);\n        return this.tree.collapse(node === this.root ? null : node, recursive);\n    }\n    async expand(element, recursive = false) {\n        if (typeof this.root.element === 'undefined') {\n            throw new TreeError(this.user, 'Tree input not set');\n        }\n        if (this.root.refreshPromise) {\n            await this.root.refreshPromise;\n            await Event.toPromise(this._onDidRender.event);\n        }\n        const node = this.getDataNode(element);\n        if (this.tree.hasElement(node) && !this.tree.isCollapsible(node)) {\n            return false;\n        }\n        if (node.refreshPromise) {\n            await this.root.refreshPromise;\n            await Event.toPromise(this._onDidRender.event);\n        }\n        if (node !== this.root && !node.refreshPromise && !this.tree.isCollapsed(node)) {\n            return false;\n        }\n        const result = this.tree.expand(node === this.root ? null : node, recursive);\n        if (node.refreshPromise) {\n            await this.root.refreshPromise;\n            await Event.toPromise(this._onDidRender.event);\n        }\n        return result;\n    }\n    setSelection(elements, browserEvent) {\n        const nodes = elements.map(e => this.getDataNode(e));\n        this.tree.setSelection(nodes, browserEvent);\n    }\n    getSelection() {\n        const nodes = this.tree.getSelection();\n        return nodes.map(n => n.element);\n    }\n    setFocus(elements, browserEvent) {\n        const nodes = elements.map(e => this.getDataNode(e));\n        this.tree.setFocus(nodes, browserEvent);\n    }\n    getFocus() {\n        const nodes = this.tree.getFocus();\n        return nodes.map(n => n.element);\n    }\n    reveal(element, relativeTop) {\n        this.tree.reveal(this.getDataNode(element), relativeTop);\n    }\n    // Tree navigation\n    getParentElement(element) {\n        const node = this.tree.getParentElement(this.getDataNode(element));\n        return (node && node.element);\n    }\n    getFirstElementChild(element = this.root.element) {\n        const dataNode = this.getDataNode(element);\n        const node = this.tree.getFirstElementChild(dataNode === this.root ? null : dataNode);\n        return (node && node.element);\n    }\n    // Implementation\n    getDataNode(element) {\n        const node = this.nodes.get((element === this.root.element ? null : element));\n        if (!node) {\n            throw new TreeError(this.user, `Data tree node not found: ${element}`);\n        }\n        return node;\n    }\n    async refreshAndRenderNode(node, recursive, viewStateContext, options) {\n        await this.refreshNode(node, recursive, viewStateContext);\n        if (this.disposables.isDisposed) {\n            return; // tree disposed during refresh (#199264)\n        }\n        this.render(node, viewStateContext, options);\n    }\n    async refreshNode(node, recursive, viewStateContext) {\n        let result;\n        this.subTreeRefreshPromises.forEach((refreshPromise, refreshNode) => {\n            if (!result && intersects(refreshNode, node)) {\n                result = refreshPromise.then(() => this.refreshNode(node, recursive, viewStateContext));\n            }\n        });\n        if (result) {\n            return result;\n        }\n        if (node !== this.root) {\n            const treeNode = this.tree.getNode(node);\n            if (treeNode.collapsed) {\n                node.hasChildren = !!this.dataSource.hasChildren(node.element);\n                node.stale = true;\n                this.setChildren(node, [], recursive, viewStateContext);\n                return;\n            }\n        }\n        return this.doRefreshSubTree(node, recursive, viewStateContext);\n    }\n    async doRefreshSubTree(node, recursive, viewStateContext) {\n        let done;\n        node.refreshPromise = new Promise(c => done = c);\n        this.subTreeRefreshPromises.set(node, node.refreshPromise);\n        node.refreshPromise.finally(() => {\n            node.refreshPromise = undefined;\n            this.subTreeRefreshPromises.delete(node);\n        });\n        try {\n            const childrenToRefresh = await this.doRefreshNode(node, recursive, viewStateContext);\n            node.stale = false;\n            await Promises.settled(childrenToRefresh.map(child => this.doRefreshSubTree(child, recursive, viewStateContext)));\n        }\n        finally {\n            done();\n        }\n    }\n    async doRefreshNode(node, recursive, viewStateContext) {\n        node.hasChildren = !!this.dataSource.hasChildren(node.element);\n        let childrenPromise;\n        if (!node.hasChildren) {\n            childrenPromise = Promise.resolve(Iterable.empty());\n        }\n        else {\n            const children = this.doGetChildren(node);\n            if (isIterable(children)) {\n                childrenPromise = Promise.resolve(children);\n            }\n            else {\n                const slowTimeout = timeout(800);\n                slowTimeout.then(() => {\n                    node.slow = true;\n                    this._onDidChangeNodeSlowState.fire(node);\n                }, _ => null);\n                childrenPromise = children.finally(() => slowTimeout.cancel());\n            }\n        }\n        try {\n            const children = await childrenPromise;\n            return this.setChildren(node, children, recursive, viewStateContext);\n        }\n        catch (err) {\n            if (node !== this.root && this.tree.hasElement(node)) {\n                this.tree.collapse(node);\n            }\n            if (isCancellationError(err)) {\n                return [];\n            }\n            throw err;\n        }\n        finally {\n            if (node.slow) {\n                node.slow = false;\n                this._onDidChangeNodeSlowState.fire(node);\n            }\n        }\n    }\n    doGetChildren(node) {\n        let result = this.refreshPromises.get(node);\n        if (result) {\n            return result;\n        }\n        const children = this.dataSource.getChildren(node.element);\n        if (isIterable(children)) {\n            return this.processChildren(children);\n        }\n        else {\n            result = createCancelablePromise(async () => this.processChildren(await children));\n            this.refreshPromises.set(node, result);\n            return result.finally(() => { this.refreshPromises.delete(node); });\n        }\n    }\n    _onDidChangeCollapseState({ node, deep }) {\n        if (node.element === null) {\n            return;\n        }\n        if (!node.collapsed && node.element.stale) {\n            if (deep) {\n                this.collapse(node.element.element);\n            }\n            else {\n                this.refreshAndRenderNode(node.element, false)\n                    .catch(onUnexpectedError);\n            }\n        }\n    }\n    setChildren(node, childrenElementsIterable, recursive, viewStateContext) {\n        const childrenElements = [...childrenElementsIterable];\n        // perf: if the node was and still is a leaf, avoid all this hassle\n        if (node.children.length === 0 && childrenElements.length === 0) {\n            return [];\n        }\n        const nodesToForget = new Map();\n        const childrenTreeNodesById = new Map();\n        for (const child of node.children) {\n            nodesToForget.set(child.element, child);\n            if (this.identityProvider) {\n                childrenTreeNodesById.set(child.id, { node: child, collapsed: this.tree.hasElement(child) && this.tree.isCollapsed(child) });\n            }\n        }\n        const childrenToRefresh = [];\n        const children = childrenElements.map(element => {\n            const hasChildren = !!this.dataSource.hasChildren(element);\n            if (!this.identityProvider) {\n                const asyncDataTreeNode = createAsyncDataTreeNode({ element, parent: node, hasChildren, defaultCollapseState: this.getDefaultCollapseState(element) });\n                if (hasChildren && asyncDataTreeNode.defaultCollapseState === ObjectTreeElementCollapseState.PreserveOrExpanded) {\n                    childrenToRefresh.push(asyncDataTreeNode);\n                }\n                return asyncDataTreeNode;\n            }\n            const id = this.identityProvider.getId(element).toString();\n            const result = childrenTreeNodesById.get(id);\n            if (result) {\n                const asyncDataTreeNode = result.node;\n                nodesToForget.delete(asyncDataTreeNode.element);\n                this.nodes.delete(asyncDataTreeNode.element);\n                this.nodes.set(element, asyncDataTreeNode);\n                asyncDataTreeNode.element = element;\n                asyncDataTreeNode.hasChildren = hasChildren;\n                if (recursive) {\n                    if (result.collapsed) {\n                        asyncDataTreeNode.children.forEach(node => dfs(node, node => this.nodes.delete(node.element)));\n                        asyncDataTreeNode.children.splice(0, asyncDataTreeNode.children.length);\n                        asyncDataTreeNode.stale = true;\n                    }\n                    else {\n                        childrenToRefresh.push(asyncDataTreeNode);\n                    }\n                }\n                else if (hasChildren && !result.collapsed) {\n                    childrenToRefresh.push(asyncDataTreeNode);\n                }\n                return asyncDataTreeNode;\n            }\n            const childAsyncDataTreeNode = createAsyncDataTreeNode({ element, parent: node, id, hasChildren, defaultCollapseState: this.getDefaultCollapseState(element) });\n            if (viewStateContext && viewStateContext.viewState.focus && viewStateContext.viewState.focus.indexOf(id) > -1) {\n                viewStateContext.focus.push(childAsyncDataTreeNode);\n            }\n            if (viewStateContext && viewStateContext.viewState.selection && viewStateContext.viewState.selection.indexOf(id) > -1) {\n                viewStateContext.selection.push(childAsyncDataTreeNode);\n            }\n            if (viewStateContext && viewStateContext.viewState.expanded && viewStateContext.viewState.expanded.indexOf(id) > -1) {\n                childrenToRefresh.push(childAsyncDataTreeNode);\n            }\n            else if (hasChildren && childAsyncDataTreeNode.defaultCollapseState === ObjectTreeElementCollapseState.PreserveOrExpanded) {\n                childrenToRefresh.push(childAsyncDataTreeNode);\n            }\n            return childAsyncDataTreeNode;\n        });\n        for (const node of nodesToForget.values()) {\n            dfs(node, node => this.nodes.delete(node.element));\n        }\n        for (const child of children) {\n            this.nodes.set(child.element, child);\n        }\n        node.children.splice(0, node.children.length, ...children);\n        // TODO@joao this doesn't take filter into account\n        if (node !== this.root && this.autoExpandSingleChildren && children.length === 1 && childrenToRefresh.length === 0) {\n            children[0].forceExpanded = true;\n            childrenToRefresh.push(children[0]);\n        }\n        return childrenToRefresh;\n    }\n    render(node, viewStateContext, options) {\n        const children = node.children.map(node => this.asTreeElement(node, viewStateContext));\n        const objectTreeOptions = options && {\n            ...options,\n            diffIdentityProvider: options.diffIdentityProvider && {\n                getId(node) {\n                    return options.diffIdentityProvider.getId(node.element);\n                }\n            }\n        };\n        this.tree.setChildren(node === this.root ? null : node, children, objectTreeOptions);\n        if (node !== this.root) {\n            this.tree.setCollapsible(node, node.hasChildren);\n        }\n        this._onDidRender.fire();\n    }\n    asTreeElement(node, viewStateContext) {\n        if (node.stale) {\n            return {\n                element: node,\n                collapsible: node.hasChildren,\n                collapsed: true\n            };\n        }\n        let collapsed;\n        if (viewStateContext && viewStateContext.viewState.expanded && node.id && viewStateContext.viewState.expanded.indexOf(node.id) > -1) {\n            collapsed = false;\n        }\n        else if (node.forceExpanded) {\n            collapsed = false;\n            node.forceExpanded = false;\n        }\n        else {\n            collapsed = node.defaultCollapseState;\n        }\n        return {\n            element: node,\n            children: node.hasChildren ? Iterable.map(node.children, child => this.asTreeElement(child, viewStateContext)) : [],\n            collapsible: node.hasChildren,\n            collapsed\n        };\n    }\n    processChildren(children) {\n        if (this.sorter) {\n            children = [...children].sort(this.sorter.compare.bind(this.sorter));\n        }\n        return children;\n    }\n    dispose() {\n        this.disposables.dispose();\n        this.tree.dispose();\n    }\n}\nclass CompressibleAsyncDataTreeNodeWrapper {\n    get element() {\n        return {\n            elements: this.node.element.elements.map(e => e.element),\n            incompressible: this.node.element.incompressible\n        };\n    }\n    get children() { return this.node.children.map(node => new CompressibleAsyncDataTreeNodeWrapper(node)); }\n    get depth() { return this.node.depth; }\n    get visibleChildrenCount() { return this.node.visibleChildrenCount; }\n    get visibleChildIndex() { return this.node.visibleChildIndex; }\n    get collapsible() { return this.node.collapsible; }\n    get collapsed() { return this.node.collapsed; }\n    get visible() { return this.node.visible; }\n    get filterData() { return this.node.filterData; }\n    constructor(node) {\n        this.node = node;\n    }\n}\nclass CompressibleAsyncDataTreeRenderer {\n    constructor(renderer, nodeMapper, compressibleNodeMapperProvider, onDidChangeTwistieState) {\n        this.renderer = renderer;\n        this.nodeMapper = nodeMapper;\n        this.compressibleNodeMapperProvider = compressibleNodeMapperProvider;\n        this.onDidChangeTwistieState = onDidChangeTwistieState;\n        this.renderedNodes = new Map();\n        this.disposables = [];\n        this.templateId = renderer.templateId;\n    }\n    renderTemplate(container) {\n        const templateData = this.renderer.renderTemplate(container);\n        return { templateData };\n    }\n    renderElement(node, index, templateData, height) {\n        this.renderer.renderElement(this.nodeMapper.map(node), index, templateData.templateData, height);\n    }\n    renderCompressedElements(node, index, templateData, height) {\n        this.renderer.renderCompressedElements(this.compressibleNodeMapperProvider().map(node), index, templateData.templateData, height);\n    }\n    renderTwistie(element, twistieElement) {\n        if (element.slow) {\n            twistieElement.classList.add(...ThemeIcon.asClassNameArray(Codicon.treeItemLoading));\n            return true;\n        }\n        else {\n            twistieElement.classList.remove(...ThemeIcon.asClassNameArray(Codicon.treeItemLoading));\n            return false;\n        }\n    }\n    disposeElement(node, index, templateData, height) {\n        this.renderer.disposeElement?.(this.nodeMapper.map(node), index, templateData.templateData, height);\n    }\n    disposeCompressedElements(node, index, templateData, height) {\n        this.renderer.disposeCompressedElements?.(this.compressibleNodeMapperProvider().map(node), index, templateData.templateData, height);\n    }\n    disposeTemplate(templateData) {\n        this.renderer.disposeTemplate(templateData.templateData);\n    }\n    dispose() {\n        this.renderedNodes.clear();\n        this.disposables = dispose(this.disposables);\n    }\n}\nfunction asCompressibleObjectTreeOptions(options) {\n    const objectTreeOptions = options && asObjectTreeOptions(options);\n    return objectTreeOptions && {\n        ...objectTreeOptions,\n        keyboardNavigationLabelProvider: objectTreeOptions.keyboardNavigationLabelProvider && {\n            ...objectTreeOptions.keyboardNavigationLabelProvider,\n            getCompressedNodeKeyboardNavigationLabel(els) {\n                return options.keyboardNavigationLabelProvider.getCompressedNodeKeyboardNavigationLabel(els.map(e => e.element));\n            }\n        }\n    };\n}\nexport class CompressibleAsyncDataTree extends AsyncDataTree {\n    constructor(user, container, virtualDelegate, compressionDelegate, renderers, dataSource, options = {}) {\n        super(user, container, virtualDelegate, renderers, dataSource, options);\n        this.compressionDelegate = compressionDelegate;\n        this.compressibleNodeMapper = new WeakMapper(node => new CompressibleAsyncDataTreeNodeWrapper(node));\n        this.filter = options.filter;\n    }\n    createTree(user, container, delegate, renderers, options) {\n        const objectTreeDelegate = new ComposedTreeDelegate(delegate);\n        const objectTreeRenderers = renderers.map(r => new CompressibleAsyncDataTreeRenderer(r, this.nodeMapper, () => this.compressibleNodeMapper, this._onDidChangeNodeSlowState.event));\n        const objectTreeOptions = asCompressibleObjectTreeOptions(options) || {};\n        return new CompressibleObjectTree(user, container, objectTreeDelegate, objectTreeRenderers, objectTreeOptions);\n    }\n    asTreeElement(node, viewStateContext) {\n        return {\n            incompressible: this.compressionDelegate.isIncompressible(node.element),\n            ...super.asTreeElement(node, viewStateContext)\n        };\n    }\n    updateOptions(options = {}) {\n        this.tree.updateOptions(options);\n    }\n    render(node, viewStateContext, options) {\n        if (!this.identityProvider) {\n            return super.render(node, viewStateContext);\n        }\n        // Preserve traits across compressions. Hacky but does the trick.\n        // This is hard to fix properly since it requires rewriting the traits\n        // across trees and lists. Let's just keep it this way for now.\n        const getId = (element) => this.identityProvider.getId(element).toString();\n        const getUncompressedIds = (nodes) => {\n            const result = new Set();\n            for (const node of nodes) {\n                const compressedNode = this.tree.getCompressedTreeNode(node === this.root ? null : node);\n                if (!compressedNode.element) {\n                    continue;\n                }\n                for (const node of compressedNode.element.elements) {\n                    result.add(getId(node.element));\n                }\n            }\n            return result;\n        };\n        const oldSelection = getUncompressedIds(this.tree.getSelection());\n        const oldFocus = getUncompressedIds(this.tree.getFocus());\n        super.render(node, viewStateContext, options);\n        const selection = this.getSelection();\n        let didChangeSelection = false;\n        const focus = this.getFocus();\n        let didChangeFocus = false;\n        const visit = (node) => {\n            const compressedNode = node.element;\n            if (compressedNode) {\n                for (let i = 0; i < compressedNode.elements.length; i++) {\n                    const id = getId(compressedNode.elements[i].element);\n                    const element = compressedNode.elements[compressedNode.elements.length - 1].element;\n                    // github.com/microsoft/vscode/issues/85938\n                    if (oldSelection.has(id) && selection.indexOf(element) === -1) {\n                        selection.push(element);\n                        didChangeSelection = true;\n                    }\n                    if (oldFocus.has(id) && focus.indexOf(element) === -1) {\n                        focus.push(element);\n                        didChangeFocus = true;\n                    }\n                }\n            }\n            node.children.forEach(visit);\n        };\n        visit(this.tree.getCompressedTreeNode(node === this.root ? null : node));\n        if (didChangeSelection) {\n            this.setSelection(selection);\n        }\n        if (didChangeFocus) {\n            this.setFocus(focus);\n        }\n    }\n    // For compressed async data trees, `TreeVisibility.Recurse` doesn't currently work\n    // and we have to filter everything beforehand\n    // Related to #85193 and #85835\n    processChildren(children) {\n        if (this.filter) {\n            children = Iterable.filter(children, e => {\n                const result = this.filter.filter(e, 1 /* TreeVisibility.Visible */);\n                const visibility = getVisibility(result);\n                if (visibility === 2 /* TreeVisibility.Recurse */) {\n                    throw new Error('Recursive tree visibility not supported in async data compressed trees');\n                }\n                return visibility === 1 /* TreeVisibility.Visible */;\n            });\n        }\n        return super.processChildren(children);\n    }\n}\nfunction getVisibility(filterResult) {\n    if (typeof filterResult === 'boolean') {\n        return filterResult ? 1 /* TreeVisibility.Visible */ : 0 /* TreeVisibility.Hidden */;\n    }\n    else if (isFilterResult(filterResult)) {\n        return getVisibleState(filterResult.visibility);\n    }\n    else {\n        return getVisibleState(filterResult);\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4815, "column": 0}, "map": {"version":3,"sources":["file:///Users/jloka/Documents/repos/personal/shared-workshop/node_modules/.pnpm/monaco-editor%400.52.2/node_modules/monaco-editor/esm/vs/base/browser/ui/tree/dataTree.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { AbstractTree } from './abstractTree.js';\nimport { ObjectTreeModel } from './objectTreeModel.js';\nexport class DataTree extends AbstractTree {\n    constructor(user, container, delegate, renderers, dataSource, options = {}) {\n        super(user, container, delegate, renderers, options);\n        this.user = user;\n        this.dataSource = dataSource;\n        this.identityProvider = options.identityProvider;\n    }\n    createModel(user, view, options) {\n        return new ObjectTreeModel(user, view, options);\n    }\n}\n"],"names":[],"mappings":"AAAA;;;8FAG8F;;;AAC9F;AACA;;;AACO,MAAM,iBAAiB,+PAAA,CAAA,eAAY;IAOtC,YAAY,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE;QAC7B,OAAO,IAAI,kQAAA,CAAA,kBAAe,CAAC,MAAM,MAAM;IAC3C;IARA,YAAY,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC,CAAE;QACxE,KAAK,CAAC,MAAM,WAAW,UAAU,WAAW;QAC5C,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI,CAAC,gBAAgB,GAAG,QAAQ,gBAAgB;IACpD;AAIJ","ignoreList":[0],"debugId":null}}]
}