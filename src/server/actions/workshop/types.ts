// Workshop Action Types - Safe for client component imports
// These types define application-specific interfaces for workshop server actions

import type { Workshop, Exercise, WorkshopFile, User } from "@prisma/client";

// =================================================================
// SIMPLIFIED INPUT TYPES (for our API needs)
// =================================================================

// Workshop creation - simplified for our API
export interface CreateWorkshopInput {
  title: string;
  description: string;
}

// Exercise creation - simplified for our API
export interface CreateExerciseInput {
  title: string;
  description: string;
  order: number;
  workshopId: string;
}

// Workshop file creation - simplified for our API
export interface CreateWorkshopFileInput {
  filename: string;
  content: string;
  language: string;
  exerciseId: string;
}

// Update input types
export interface UpdateWorkshopInput {
  id: string;
  title?: string;
  description?: string;
  status?: Workshop["status"];
}

export interface UpdateExerciseInput {
  id: string;
  title?: string;
  description?: string;
  order?: number;
}

export interface UpdateWorkshopFileInput {
  id: string;
  filename?: string;
  content?: string;
  language?: string;
}

// =================================================================
// APPLICATION-SPECIFIC TYPES (not generated by Prisma)
// =================================================================

// Workshop with computed fields (matches current mock structure)
export interface WorkshopWithDetails extends Workshop {
  ownerName: string;
  exerciseCount: number;
}

// Exercise with files included
export interface ExerciseWithFiles extends Exercise {
  files: WorkshopFile[];
}

// Workshop with full exercise details
export interface WorkshopWithExercises extends Workshop {
  owner: Pick<User, "id" | "name" | "email">;
  exercises: ExerciseWithFiles[];
}

// Workshop filter for queries
export interface GetWorkshopsFilter {
  ownerId?: string;
  status?: Workshop["status"];
  search?: string;
}

export interface WorkshopQueryResult {
  workshops: WorkshopWithDetails[];
  totalCount: number;
}
