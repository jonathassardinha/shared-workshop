// Workshop Action Types - Safe for client component imports
// These types define application-specific interfaces for workshop server actions

import type { Workshop, Prisma } from "@prisma/client";

// =================================================================
// PRISMA RELATIONAL TYPES (using GetPayload for complex queries)
// =================================================================

// Exercise with files included
export type ExerciseWithFiles = Prisma.ExerciseGetPayload<{
  include: {
    files: true;
  };
}>;

// Workshop with full exercise details
export type WorkshopWithOwnerAndExercises = Prisma.WorkshopGetPayload<{
  include: {
    owner: {
      select: {
        id: true;
        name: true;
        email: true;
      };
    };
    exercises: {
      include: {
        files: true;
      };
    };
  };
}>;

// =================================================================
// APPLICATION-SPECIFIC TYPES (custom types not generated by Prisma)
// =================================================================

// Workshop with computed fields for UI display
export interface WorkshopWithDetails extends Workshop {
  ownerName: string;
  exerciseCount: number;
}

// Workshop filter for queries
export interface GetWorkshopsFilter {
  ownerId?: string;
  status?: Workshop["status"];
  search?: string;
  // Pagination parameters
  page?: number;
  limit?: number;
}

// Query result with pagination
export interface WorkshopQueryResult {
  workshops: WorkshopWithDetails[];
  totalCount: number;
  // Pagination metadata
  currentPage: number;
  totalPages: number;
  hasNextPage: boolean;
  hasPreviousPage: boolean;
  pageSize: number;
}
